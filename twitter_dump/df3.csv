id,created_at,favorite_count,retweet_count,full_text,is_reply,is_retweet,url,urls,media,score,days,days2,smoothed_score,smoothed_score_plus
1324436571920101376,2020-11-05 19:41:00+00:00,81,26,"Read multiple csv from a zip file: 

from zipfile import ZipFile
import pandas as pd

zf = ZipFile(""z_f.zip"")
df_lst = [https://t.co/KBWVZb2pZj_csv(https://t.co/8dJA0i8dng(fle.filename)) for fle in zf.infolist() if fle.filename.endswith("".csv"")]

tip by @PetraVidnerova #Pandas",False,False,https://twitter.com/python_tip/status/1324436571920101376,"[{'url': 'https://t.co/KBWVZb2pZj', 'expanded_url': 'http://pd.read', 'display_url': 'pd.read'}]",[],5.075173815233827,1370 days 22:43:39,1370,4.598785438361875,5.598785438361875
1324205046154735621,2020-11-05 04:21:00+00:00,94,18,"#pandas DataFrame.explode() will transform each element of a list-like to a row

df = pd.DataFrame([{'var1': ['a', 'b', 'c', 'd'], 'var2': 1}, {'var1': ('x', 'y'), 'var2': 3}])

df.explode('var1')

https://t.co/lBalG6xeBl https://t.co/cmX791nW6I",False,False,https://twitter.com/python_tip/status/1324205046154735621,"[{'url': 'https://t.co/lBalG6xeBl', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.explode.html', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}]","[{'url': 'https://t.co/cmX791nW6I', 'media_url': 'http://pbs.twimg.com/media/EmAgzicXgAEe7J7.jpg', 'display_url': 'pic.twitter.com/cmX791nW6I'}]",5.003946305945459,1370 days 07:23:39,1370,4.598785438361875,5.598785438361875
1324090855741902849,2020-11-04 20:47:15+00:00,73,13,"In #Python3, the print function has options
* 'sep' to separate the arguments
* 'end' to be printed after the last argument

>>> lst = ['a', 'b', 'c'] 
>>> print(*lst) 
a b c 
>>> print(*lst, sep=', ', end='!!!\n') 
a, b, c!!!

https://t.co/Jm8LgioMJb",False,False,https://twitter.com/python_tip/status/1324090855741902849,"[{'url': 'https://t.co/Jm8LgioMJb', 'expanded_url': 'https://docs.python.org/3/library/functions.html#print', 'display_url': 'docs.python.org/3/library/func…'}]",[],4.727387818712341,1369 days 23:49:54,1369,4.59888888125528,5.59888888125528
1319825437933981696,2020-10-24 02:18:00+00:00,80,12,">>> from datetime import date
>>> somedate = date(2020, 12, 25)
>>> (somedate - https://t.co/DAMy3fUkMd()).days
63",False,False,https://twitter.com/python_tip/status/1319825437933981696,"[{'url': 'https://t.co/DAMy3fUkMd', 'expanded_url': 'http://date.today', 'display_url': 'date.today'}]",[],4.762173934797756,1358 days 05:20:39,1358,4.600023137454672,5.600023137454672
1319726408957046784,2020-10-23 19:44:29+00:00,95,17,">>> lst = ['alice', 'bob', 'charlie']
>>> print(', '.join(lst))
alice, bob, charlie
>>> print(*lst, sep=', ')
alice, bob, charlie

#python",False,False,https://twitter.com/python_tip/status/1319726408957046784,[],[],4.990432586778736,1357 days 22:47:08,1357,4.600125922855003,5.600125922855003
1317761337007632384,2020-10-18 09:36:00+00:00,125,20,Identify language of a document with pycld2 package: https://t.co/7bdB2ONteQ,False,False,https://twitter.com/python_tip/status/1317761337007632384,[],"[{'url': 'https://t.co/7bdB2ONteQ', 'media_url': 'http://pbs.twimg.com/media/EkhS5W0W0AEz6Yt.jpg', 'display_url': 'pic.twitter.com/7bdB2ONteQ'}]",5.225746673713202,1352 days 12:38:39,1352,4.6006390692980705,5.6006390692980705
1317385160350892032,2020-10-17 08:41:12+00:00,119,24,"With #pandas DataFrame.explode you can transform list-like element into a row, replicating index values.

Example: https://t.co/5Jfpfgahjf",False,False,https://twitter.com/python_tip/status/1317385160350892032,[],"[{'url': 'https://t.co/5Jfpfgahjf', 'media_url': 'http://pbs.twimg.com/media/EkhKuY6XUAACLsO.png', 'display_url': 'pic.twitter.com/5Jfpfgahjf'}]",5.2574953720277815,1351 days 11:43:51,1351,4.600741547300285,5.600741547300285
1316837225867468800,2020-10-15 20:23:54+00:00,153,21,"Merging Dictionaries - new in Python 3.9!

a | b will merge `b` dictionary into `a` dictionary, if there are conflicts,  the rightmost-value will be kept

a |= b will merge `b` into `a` and return the result in `a` (it is also called updating)

Example: 👇 https://t.co/HlrVf8k0vn",False,False,https://twitter.com/python_tip/status/1316837225867468800,[],"[{'url': 'https://t.co/HlrVf8k0vn', 'media_url': 'http://pbs.twimg.com/media/EkZYQ8wWsAEjZhF.jpg', 'display_url': 'pic.twitter.com/HlrVf8k0vn'}]",5.37989735354046,1349 days 23:26:33,1349,4.600946357672684,5.600946357672684
1315796911430029318,2020-10-12 23:30:04+00:00,74,22,"Streamlit (beautiful data apps in hours, not weeks; all in pure Python) is now introducing more flexible layout.

If you are new to Streamlit, create your first app after reading this, https://t.co/nlSTpaA9yH https://t.co/7poJOOVxqj",False,False,https://twitter.com/python_tip/status/1315796911430029318,"[{'url': 'https://t.co/nlSTpaA9yH', 'expanded_url': 'https://towardsdatascience.com/streamlit-101-an-in-depth-introduction-fc8aad9492f2', 'display_url': 'towardsdatascience.com/streamlit-101-…'}, {'url': 'https://t.co/7poJOOVxqj', 'expanded_url': 'https://twitter.com/streamlit/status/1314325156622266368', 'display_url': 'twitter.com/streamlit/stat…'}]",[],4.948759890378168,1347 days 02:32:43,1347,4.601150976097459,5.601150976097459
1314561051581722625,2020-10-09 13:39:12+00:00,46,18,"Chaining of comparison operators:

>>> 0 < 10 != 1 < 5
True

 # 0 < 10 and 10 != 1 and 1 < 5

#python",False,False,https://twitter.com/python_tip/status/1314561051581722625,[],[],4.61512051684126,1343 days 16:41:51,1343,4.601559639046279,5.601559639046279
1313565408251740160,2020-10-06 19:42:52+00:00,86,28,"#python 3.9 is out!

https://t.co/lEP9z9g5TT",False,False,https://twitter.com/python_tip/status/1313565408251740160,"[{'url': 'https://t.co/lEP9z9g5TT', 'expanded_url': 'https://docs.python.org/3.9/whatsnew/3.9.html', 'display_url': 'docs.python.org/3.9/whatsnew/3…'}]",[],5.14166355650266,1340 days 22:45:31,1340,4.601865632045897,5.601865632045897
1312523832297582594,2020-10-03 22:44:01+00:00,194,47,"AutoScraper: give it a URL and an example what would you like to scrape, and it learns the scraping rules and returns similar elements

https://t.co/38avVIvoBc

Example: web page, code, results https://t.co/gFXQWvsiS6",False,False,https://twitter.com/python_tip/status/1312523832297582594,"[{'url': 'https://t.co/38avVIvoBc', 'expanded_url': 'https://medium.com/better-programming/introducing-autoscraper-a-smart-fast-and-lightweight-web-scraper-for-python-20987f52c749', 'display_url': 'medium.com/better-program…'}]","[{'url': 'https://t.co/gFXQWvsiS6', 'media_url': 'http://pbs.twimg.com/media/EjcE70ZXsAESsVb.png', 'display_url': 'pic.twitter.com/gFXQWvsiS6'}]",5.817111159963204,1338 days 01:46:40,1338,4.602069387305408,5.602069387305408
1311683042067480578,2020-10-01 15:03:01+00:00,64,22,"To create a zip/tar archive of a folder, use shutil.make_archive:

>>> import shutil
>>> shutil.make_archive(output_filename, 'zip', dir_name)

Thanks @pndrej for the tip.",False,False,https://twitter.com/python_tip/status/1311683042067480578,[],[],4.875197323201151,1335 days 18:05:40,1335,4.602374657733237,5.602374657733237
1311406200270053377,2020-09-30 20:42:57+00:00,143,41,"bpython = fancy interface to the Python interactive interpreter (with auto completion, highlighting, auto indent)

See https://t.co/FYwPvTC0Pr https://t.co/HMcE366K41",False,False,https://twitter.com/python_tip/status/1311406200270053377,"[{'url': 'https://t.co/FYwPvTC0Pr', 'expanded_url': 'https://bpython-interpreter.org/', 'display_url': 'bpython-interpreter.org'}]","[{'url': 'https://t.co/HMcE366K41', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/EjMMtEVWsAQrXbS.jpg', 'display_url': 'pic.twitter.com/HMcE366K41'}]",5.58724865840025,1334 days 23:45:36,1334,4.60247631633673,5.60247631633673
1311069231182753793,2020-09-29 22:23:57+00:00,95,27,"You can save memory by fixing types in your #pandas DataFrame

https://t.co/HjD4toofDM https://t.co/v1iu8IqWWr",False,False,https://twitter.com/python_tip/status/1311069231182753793,"[{'url': 'https://t.co/HjD4toofDM', 'expanded_url': 'https://www.kaggle.com/python10pm/pandas-100-tricks#Trick-94:-Save-memory-by-fixing-your-date', 'display_url': 'kaggle.com/python10pm/pan…'}]","[{'url': 'https://t.co/v1iu8IqWWr', 'media_url': 'http://pbs.twimg.com/media/EjHafqBXsAMpEZy.png', 'display_url': 'pic.twitter.com/v1iu8IqWWr'}]",5.176149732573829,1334 days 01:26:36,1334,4.60247631633673,5.60247631633673
1309070062393978881,2020-09-24 09:59:58+00:00,126,31,">>> a = 1
>>> b = 5
>>> a, b = b, a
>>> a
5
>>> b
1

#Python https://t.co/r5Tr75i3pJ",False,False,https://twitter.com/python_tip/status/1309070062393978881,[],"[{'url': 'https://t.co/r5Tr75i3pJ', 'media_url': 'http://pbs.twimg.com/media/EirAMl9WkAA4Xzg.jpg', 'display_url': 'pic.twitter.com/r5Tr75i3pJ'}]",5.393627546352361,1328 days 13:02:37,1328,4.603085181155481,5.603085181155481
1308676662494662656,2020-09-23 07:56:45+00:00,112,22,"Guess the result:

>>> lst = [0, 1, 2]
>>> lst[-1] += lst.pop()
>>> lst

#python_tip by @irdb",False,False,https://twitter.com/python_tip/status/1308676662494662656,[],[],5.187385805840755,1327 days 10:59:24,1327,4.6031864682438695,5.6031864682438695
1308124412210802690,2020-09-21 19:22:18+00:00,60,18,"#Python3 Tip from @rickjdon: To zip 2 lists of different lengths use ‘zip_longest()’.

from itertools import zip_longest 
x =[1, 2] ; y =[3] 
list(zip_longest(x, y))
[(1, 3), (2, None)]

https://t.co/Ar5otciOxS",False,False,https://twitter.com/python_tip/status/1308124412210802690,"[{'url': 'https://t.co/Ar5otciOxS', 'expanded_url': 'https://docs.python.org/3/library/itertools.html', 'display_url': 'docs.python.org/3/library/iter…'}]",[],4.74493212836325,1325 days 22:24:57,1325,4.603388870244208,5.603388870244208
1307306189886312449,2020-09-19 13:10:58+00:00,51,18,"Programming in @TensorFlow by example. 

This might sound like magic but with TF-Coder, you provide an input/output example, and TF-Coder finds the appropriate TensorFlow code for this transformation.

Try it out → https://t.co/88CHbucR6G https://t.co/IM3I75UroF",False,False,https://twitter.com/python_tip/status/1307306189886312449,"[{'url': 'https://t.co/88CHbucR6G', 'expanded_url': 'https://goo.gle/3gtexPX', 'display_url': 'goo.gle/3gtexPX'}]","[{'url': 'https://t.co/IM3I75UroF', 'media_url': 'http://pbs.twimg.com/media/EiR7osEXsAA_ufE.png', 'display_url': 'pic.twitter.com/IM3I75UroF'}]",4.663439094112067,1323 days 16:13:37,1323,4.6035910340607025,5.6035910340607025
1306228363766435840,2020-09-16 13:48:05+00:00,174,35,"#pythontip by @NurmeAve:

You can use an asterisk for unpacking and with any separator (for printing) you like. 

A few examples shown below. https://t.co/kXN3JMVvTU",False,False,https://twitter.com/python_tip/status/1306228363766435840,[],"[{'url': 'https://t.co/kXN3JMVvTU', 'media_url': 'http://pbs.twimg.com/media/EiCncHaWoAEZk7-.jpg', 'display_url': 'pic.twitter.com/kXN3JMVvTU'}]",5.634789603169249,1320 days 16:50:44,1320,4.603893809316336,5.603893809316336
1305950746962264066,2020-09-15 19:24:56+00:00,47,19,"Is conda package manager too slow for you? Try a drop-in replacement mamba:

conda install mamba -c conda-forge

and you can then install conda packages as follows

mamba install PACKAGE_NAME -c conda-forge

https://t.co/QFvd6QVA5m",False,False,https://twitter.com/python_tip/status/1305950746962264066,"[{'url': 'https://t.co/QFvd6QVA5m', 'expanded_url': 'https://github.com/mamba-org/mamba', 'display_url': 'github.com/mamba-org/mamba'}]",[],4.653960350157523,1319 days 22:27:35,1319,4.603994603330832,5.603994603330832
1304067102685294592,2020-09-10 14:40:00+00:00,60,14,"#python_tip  from @NurmeAve:

Python's divmod() is one way to convert months into years and months:

divmod(1, 12)     # (0, 1)   -> 0 years & 1 month
divmod(12, 12)   # (1, 0)   -> 1 year  & 0 months
divmod(55, 12)   # (4, 7)   -> 4 years & 7 months",False,False,https://twitter.com/python_tip/status/1304067102685294592,[],[],4.634728988229636,1314 days 17:42:39,1314,4.604497518112742,5.604497518112742
1303702449669111815,2020-09-09 14:31:00+00:00,78,21,"Create a zip archive in #python:

from zipfile import ZipFile 

with ZipFile('https://t.co/6ASg62olYM', 'w') as zip_ref:
   zip_ref.write('data.csv')
   zip_ref.write('test.log')",False,False,https://twitter.com/python_tip/status/1303702449669111815,"[{'url': 'https://t.co/6ASg62olYM', 'expanded_url': 'http://my.zip', 'display_url': 'my.zip'}]",[],4.955827057601261,1313 days 17:33:39,1313,4.604597878698007,5.604597878698007
1303329692913668101,2020-09-08 13:49:48+00:00,273,67,"Use handcalcs as  #Jupyter cell magic to render python calculation code in LaTeX 

https://t.co/aWIriXDfyw https://t.co/hNWPIA5ZxT",False,False,https://twitter.com/python_tip/status/1303329692913668101,"[{'url': 'https://t.co/aWIriXDfyw', 'expanded_url': 'https://github.com/connorferster/handcalcs', 'display_url': 'github.com/connorferster/…'}]","[{'url': 'https://t.co/hNWPIA5ZxT', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/EhZbRSrWkAEVKC5.jpg', 'display_url': 'pic.twitter.com/hNWPIA5ZxT'}]",6.163314804034641,1312 days 16:52:27,1312,4.604698161695892,5.604698161695892
1302964972352417793,2020-09-07 13:40:31+00:00,68,23,"#python_tip by @raymondh:

several ways to interactively display results of a calculation:

# Two liner
>>> q = 3.5 * 1.5
>>> q
5.25

# Second expression
>>> q = 3.5 * 1.5; q
5.25

# Walrus
>>> (q := 3.5 * 1.5)
5.25

# Invisible
>>> q = 3.5 * 1.5",False,False,https://twitter.com/python_tip/status/1302964972352417793,[],[],4.927253685157205,1311 days 16:43:10,1311,4.60479836553233,5.60479836553233
1301039905347231749,2020-09-02 06:11:00+00:00,207,68,"Python 3.9 is coming!

Check the new features:
* Dictionary merge (|) and update (|=) operators
* removeprefix() and removesuffix() string methods
* Easier type annotations for lists and dicts
* ...

https://t.co/lEP9z8Yuvj",False,False,https://twitter.com/python_tip/status/1301039905347231749,"[{'url': 'https://t.co/lEP9z8Yuvj', 'expanded_url': 'https://docs.python.org/3.9/whatsnew/3.9.html', 'display_url': 'docs.python.org/3.9/whatsnew/3…'}]",[],6.021023349349527,1306 days 09:13:39,1306,4.605298131247691,5.605298131247691
1300793389802233856,2020-09-01 13:51:26+00:00,519,164,"handcalcs - a library to render Python calculation code automatically in Latex (+some extra magic allowing numeric substitutions into formula) -- via @omarsar0

https://t.co/aWIriXDfyw https://t.co/C8LOYm301K",False,False,https://twitter.com/python_tip/status/1300793389802233856,"[{'url': 'https://t.co/aWIriXDfyw', 'expanded_url': 'https://github.com/connorferster/handcalcs', 'display_url': 'github.com/connorferster/…'}]","[{'url': 'https://t.co/C8LOYm301K', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/Eg1Yr2TXsAAYxRL.jpg', 'display_url': 'pic.twitter.com/C8LOYm301K'}]",6.919683849847411,1305 days 16:54:05,1305,4.605397820777341,5.605397820777341
1298730513042157570,2020-08-26 21:14:18+00:00,174,28,"#python lists have the count() method that returns the number of occurrences of an element:

>>> lst = [1, 1, 2, 3, 4, 5, 1, 3, 3, 3, 7, 9, 3]
>>> lst.count(2)
1

Most common item:
>>> max(lst, key=lst.count) 
3",False,False,https://twitter.com/python_tip/status/1298730513042157570,[],[],5.556828061699537,1300 days 00:16:57,1300,4.605894859256118,5.605894859256118
1296690999171772416,2020-08-21 06:10:00+00:00,166,40,"Tqdm is a well known tool for progress bars. But did you know you can have double progress bars and name them?

Colab: 👇👇
https://t.co/gIWJ2e9jAJ https://t.co/v2ltoUDK15",False,False,https://twitter.com/python_tip/status/1296690999171772416,"[{'url': 'https://t.co/gIWJ2e9jAJ', 'expanded_url': 'https://gist.github.com/simecek/0ee10e9d1fbc54c156b566386ca6806f', 'display_url': 'gist.github.com/simecek/0ee10e…'}]","[{'url': 'https://t.co/v2ltoUDK15', 'media_url': 'http://pbs.twimg.com/media/EftfFpDWkAgXYJM.png', 'display_url': 'pic.twitter.com/v2ltoUDK15'}]",5.659482215759621,1294 days 09:12:39,1294,4.606487977681138,5.606487977681138
1295975534783090688,2020-08-19 06:47:00+00:00,78,20,"To get memory usage of DataFrame and its every column:

https://t.co/8vD3tlajX5(memory_usage = ""deep"")
df.memory_usage(deep = True)

https://t.co/tkf1jzdSoC

#pandas",False,False,https://twitter.com/python_tip/status/1295975534783090688,"[{'url': 'https://t.co/8vD3tlajX5', 'expanded_url': 'http://df.info', 'display_url': 'df.info'}, {'url': 'https://t.co/tkf1jzdSoC', 'expanded_url': 'https://www.kaggle.com/python10pm/pandas-100-tricks#Trick-19:-Show-memory-usage-of-a-df-and-every-column', 'display_url': 'kaggle.com/python10pm/pan…'}]",[],4.9344739331306915,1292 days 09:49:39,1292,4.6066848177550686,5.6066848177550686
1295723815952166912,2020-08-18 14:06:45+00:00,61,16,"By default, Python objects are evaluated as true. Sometimes, it might bite you.

def muFunc():
    return False

>>> if myFunc:
               print(""OMG!"")
OMG! https://t.co/kZDwNyC6Dh",False,False,https://twitter.com/python_tip/status/1295723815952166912,"[{'url': 'https://t.co/kZDwNyC6Dh', 'expanded_url': 'https://twitter.com/raymondh/status/1278477169237176320', 'display_url': 'twitter.com/raymondh/statu…'}]",[],4.700480365792417,1291 days 17:09:24,1291,4.606783068266409,5.606783068266409
1294033102738722816,2020-08-13 22:08:28+00:00,58,16,"type() - what is this object?
dir() - what can I do with it?
help()

>>> type(df)
<class 'pandas.core.frame.DataFrame'>
>>> dir(df)
>>> help(https://t.co/yGT52QVczk_latex)

#Python",False,False,https://twitter.com/python_tip/status/1294033102738722816,"[{'url': 'https://t.co/yGT52QVczk', 'expanded_url': 'http://df.to', 'display_url': 'df.to'}]",[],4.672828834461906,1287 days 01:11:07,1287,4.607174900783606,5.607174900783606
1293667821562593281,2020-08-12 21:56:58+00:00,64,15,"When maxsplit is specified in str.split(), it will limit the number of splits:

>>> s = 'a,,b, c, d,e'
>>> s.split(',')
['a', '', 'b', ' c', ' d', 'e']
>>> s.split(',', maxsplit=2)
['a', '', 'b, c, d,e']
>>> s.split(maxsplit=2)
['a,,b,', 'c,', 'd,e']

https://t.co/o3YxgkOwUj",False,False,https://twitter.com/python_tip/status/1293667821562593281,"[{'url': 'https://t.co/o3YxgkOwUj', 'expanded_url': 'https://docs.python.org/3/library/stdtypes.html#str.split', 'display_url': 'docs.python.org/3/library/stdt…'}]",[],4.700480365792417,1286 days 00:59:37,1286,4.607272558353787,5.607272558353787
1293314816480878592,2020-08-11 22:34:15+00:00,103,24,"Table in pdf? No problem :-)

>>> from tabula import read_pdf
>>> df_lst = read_pdf(""some.pdf"", pages = ""all"")

https://t.co/3zd1DHySjz",False,False,https://twitter.com/python_tip/status/1293314816480878592,"[{'url': 'https://t.co/3zd1DHySjz', 'expanded_url': 'https://pypi.org/project/tabula-py/', 'display_url': 'pypi.org/project/tabula…'}]",[],5.170483995038151,1285 days 01:36:54,1285,4.607370092451855,5.607370092451855
1290393929221918722,2020-08-03 21:07:41+00:00,196,54,"Youtube-dl: Python package to download YouTube videos (also a command line tool).

https://t.co/MCAMQcpRVc https://t.co/VRYDEPYqrr",False,False,https://twitter.com/python_tip/status/1290393929221918722,"[{'url': 'https://t.co/MCAMQcpRVc', 'expanded_url': 'https://github.com/ytdl-org/youtube-dl#embedding-youtube-dl', 'display_url': 'github.com/ytdl-org/youtu…'}]","[{'url': 'https://t.co/VRYDEPYqrr', 'media_url': 'http://pbs.twimg.com/media/EehmAABWAAEyja7.png', 'display_url': 'pic.twitter.com/VRYDEPYqrr'}]",5.883322388488279,1277 days 00:10:20,1277,4.608145702683054,5.608145702683054
1287755095686471681,2020-07-27 14:21:54+00:00,51,17,"use dtypes=None in numpy.genfromtxt() to auto detect data types by column. 

#numpy #python https://t.co/flFSTEiyKi",False,False,https://twitter.com/python_tip/status/1287755095686471681,[],"[{'url': 'https://t.co/flFSTEiyKi', 'media_url': 'http://pbs.twimg.com/media/Ed8GZYuWkAA68Ks.png', 'display_url': 'pic.twitter.com/flFSTEiyKi'}]",4.634728988229636,1269 days 17:24:33,1269,4.6089124091359315,5.6089124091359315
1286179738059280386,2020-07-23 06:02:00+00:00,62,16,"Style #pandas DataFrame (using formatting dictionary):

https://t.co/fDsq4B3JD0 https://t.co/j5NFi1FBml",False,False,https://twitter.com/python_tip/status/1286179738059280386,"[{'url': 'https://t.co/fDsq4B3JD0', 'expanded_url': 'https://www.kaggle.com/python10pm/pandas-100-tricks#Trick-26:-Formatting-different-columns-of-a-df-(using-dictionaries)', 'display_url': 'kaggle.com/python10pm/pan…'}]","[{'url': 'https://t.co/j5NFi1FBml', 'media_url': 'http://pbs.twimg.com/media/Edb_RuYXoAESM88.png', 'display_url': 'pic.twitter.com/j5NFi1FBml'}]",4.709530201312334,1265 days 09:04:39,1265,4.6092921811308,5.6092921811308
1285815840013615104,2020-07-22 05:56:00+00:00,87,25,"To find the index of minimum element in a list:
> a = [2, 1, 3]
> a.index(min(a))
1
> # another solution (single pass) 
> min(enumerate(a), key=lambda x: x[1])[0]
1

To get all positions of minima:
> a = [2, 1, 3, 1]
> m = min(a)
> [i for i, j in enumerate(a) if j == m]
[1, 3]",False,False,https://twitter.com/python_tip/status/1285815840013615104,[],[],5.093750200806762,1264 days 08:58:39,1264,4.609386737201018,5.609386737201018
1285484781850038272,2020-07-21 08:00:29+00:00,68,20,"To download (large) files from Google drive without mounting the drive: 

from google_drive_downloader import GoogleDriveDownloader as gdd

https://t.co/E7HjHdAma5_file_from_google_drive(file_id='**GDRIVE_FILE_ID**', dest_path='local.pkl')

https://t.co/5VGUc18KVU",False,False,https://twitter.com/python_tip/status/1285484781850038272,"[{'url': 'https://t.co/E7HjHdAma5', 'expanded_url': 'http://gdd.download', 'display_url': 'gdd.download'}, {'url': 'https://t.co/5VGUc18KVU', 'expanded_url': 'https://stackoverflow.com/a/47761459', 'display_url': 'stackoverflow.com/a/47761459'}]",[],4.859812404361672,1263 days 11:03:08,1263,4.609481136262289,5.609481136262289
1284114089975918594,2020-07-17 13:13:51+00:00,88,26,"Trying to print() a large nested structure? 
pretty-print will look better.
https://t.co/dzFJQLErQG

#python

>>> import requests
>>> from pprint import pprint
>>> url = 'https://t.co/3kfWu2Eq3H'
>>> res = requests.get(url).json()
>>> pprint(res) https://t.co/K2CZVOICvK",False,False,https://twitter.com/python_tip/status/1284114089975918594,"[{'url': 'https://t.co/dzFJQLErQG', 'expanded_url': 'https://docs.python.org/3/library/pprint.html', 'display_url': 'docs.python.org/3/library/ppri…'}, {'url': 'https://t.co/3kfWu2Eq3H', 'expanded_url': 'https://www.ebi.ac.uk/mi/impc/solr/statistical-result/select?q=marker_symbol:Car4', 'display_url': 'ebi.ac.uk/mi/impc/solr/s…'}]","[{'url': 'https://t.co/K2CZVOICvK', 'media_url': 'http://pbs.twimg.com/media/EdIWxUhX0AAdA1k.png', 'display_url': 'pic.twitter.com/K2CZVOICvK'}]",5.117993812416755,1259 days 16:16:30,1259,4.609857138091696,5.609857138091696
1283759556284252162,2020-07-16 13:45:03+00:00,94,19,"Parse #pandas dataframe to #markdown:
>>> df = pd.DataFrame({'a': [1, 2], 'b': ['x', 'y']})
>>> https://t.co/yGT52QVczk_markdown()
'|    |   a | b   |\n|---:|----:|:----|\n|  0 |   1 | x   |\n|  1 |   2 | y   |' https://t.co/GWoOzGGPAL",False,False,https://twitter.com/python_tip/status/1283759556284252162,"[{'url': 'https://t.co/yGT52QVczk', 'expanded_url': 'http://df.to', 'display_url': 'df.to'}]","[{'url': 'https://t.co/GWoOzGGPAL', 'media_url': 'http://pbs.twimg.com/media/EdDUd5-WkAE5lqM.png', 'display_url': 'pic.twitter.com/GWoOzGGPAL'}]",5.0238805208462765,1258 days 16:47:42,1258,4.609950733883654,5.609950733883654
1283323069013131269,2020-07-15 08:50:37+00:00,111,19,"frequency count:

>>> from collections import Counter
>>> a = 'dfjkdfjkaaabckdjfoe'
>>> Counter(a)
Counter({'d': 3, 'f': 3, 'j': 3, 'k': 3, 'a': 3, 'b': 1, 'c': 1, 'o': 1, 'e': 1})

#python",False,False,https://twitter.com/python_tip/status/1283323069013131269,[],[],5.1298987149230735,1257 days 11:53:16,1257,4.610044165194529,5.610044165194529
1282962835765694464,2020-07-14 08:59:11+00:00,102,31,"for loops may have an else clause - it is executed after the loop completes normally, but not when the loop is terminated by a break statement.

for item in items:
    if something(item):
        do_st(item)
        break
else:
   print(""Not found."")

https://t.co/sVf67lSdCL",False,False,https://twitter.com/python_tip/status/1282962835765694464,"[{'url': 'https://t.co/sVf67lSdCL', 'expanded_url': 'https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops', 'display_url': 'docs.python.org/3/tutorial/con…'}]",[],5.278114659230518,1256 days 12:01:50,1256,4.610137430467734,5.610137430467734
1281467437154807810,2020-07-10 05:57:00+00:00,90,11,"Finding the index of an item in a list:

>>> a = ['car', 'bike', 'scooter']
>>> a.index('bike')
1",False,False,https://twitter.com/python_tip/status/1281467437154807810,[],[],4.820281565605037,1252 days 08:59:39,1252,4.610508794159168,5.610508794159168
1280018643632324609,2020-07-06 06:00:00+00:00,135,21,"FastAPI = web framework for building APIs in Python 3.6+

* type hints
* automatic interactive API documentation 
* asynchronous
 https://t.co/tzy1yf7dNY https://t.co/2XTJU6iVnG",False,False,https://twitter.com/python_tip/status/1280018643632324609,"[{'url': 'https://t.co/tzy1yf7dNY', 'expanded_url': 'https://fastapi.tiangolo.com/#example', 'display_url': 'fastapi.tiangolo.com/#example'}]","[{'url': 'https://t.co/2XTJU6iVnG', 'media_url': 'http://pbs.twimg.com/media/EbzcBWAXYAcOM84.jpg', 'display_url': 'pic.twitter.com/2XTJU6iVnG'}]",5.293304824724492,1248 days 09:02:39,1248,4.610877349214551,5.610877349214551
1278934937803141120,2020-07-03 06:13:45+00:00,96,15,"You can sort using a tuple as a key:
scores = [{'score': 20, 'id':11}, {'score': 1, 'id': 10}, {'score': 20, 'id': 3}]
print(sorted(scores, key=lambda k: (k['score'], k['id'])))

[{'score': 1, 'id': 10}, {'score': 20, 'id': 3}, {'score': 20, 'id': 11}]

#Python",False,False,https://twitter.com/python_tip/status/1278934937803141120,[],[],4.955827057601261,1245 days 09:16:24,1245,4.611151852736577,5.611151852736577
1278388902345224192,2020-07-01 18:04:00+00:00,259,43,">>> import calendar
>>> print(calendar.month(2020, 7)) https://t.co/XQTc4mNtgJ",False,False,https://twitter.com/python_tip/status/1278388902345224192,[],"[{'url': 'https://t.co/XQTc4mNtgJ', 'media_url': 'http://pbs.twimg.com/media/Eb0Wl0cWAAE-8F2.png', 'display_url': 'pic.twitter.com/XQTc4mNtgJ'}]",5.963579343618446,1243 days 21:06:39,1243,4.611333916501409,5.611333916501409
1278198251284508672,2020-07-01 05:26:25+00:00,202,38,"zip magic

>>> a = ['a', 'b', 'c']
>>> b = [1, 2, 3]

>>> c = list(zip(a,b))
>>> c
[('a', 1), ('b', 2), ('c', 3)]

>>> list(zip(*c))
[('a', 'b', 'c'), (1, 2, 3)]

>>> dict(zip(a, b))
{'a': 1, 'b': 2, 'c': 3}

#python",False,False,https://twitter.com/python_tip/status/1278198251284508672,[],[],5.75890177387728,1243 days 08:29:04,1243,4.611333916501409,5.611333916501409
1277713248750575619,2020-06-29 21:19:11+00:00,89,25,"slicing in #python:
s[start:end] 
s[start:end:step]

>>> lst = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
>>> lst[2:4]
[2, 3]
>>> lst[8:2:-1]
[8, 7, 6, 5, 4, 3]
>>> lst[1:8:2]
[1, 3, 5, 7]
>>> lst[:-2:3]
[0, 3, 6]
>>> lst[::-2]
[9, 7, 5, 3, 1]",False,False,https://twitter.com/python_tip/status/1277713248750575619,[],[],5.10594547390058,1242 days 00:21:50,1242,4.611424661252094,5.611424661252094
1276035394400706560,2020-06-25 06:12:00+00:00,252,44,"Zip is its own inverse!

a = (1, 2, 3, 4)
b = (5, 6, 7, 8)

ab_zip = zip(a, b)
# ab_zip = [(1, 5), (2, 6), (3, 7), (4, 8)]

zip(*ab_zip)
# returns [(1, 2, 3, 4), (5, 6, 7, 8)] https://t.co/tTGUM5d0eT",False,False,https://twitter.com/python_tip/status/1276035394400706560,[],"[{'url': 'https://t.co/tTGUM5d0eT', 'media_url': 'http://pbs.twimg.com/media/EbJCQV6WoAgaeKN.png', 'display_url': 'pic.twitter.com/tTGUM5d0eT'}]",5.953243334287785,1237 days 09:14:39,1237,4.611875418960051,5.611875418960051
1275669988284784642,2020-06-24 06:00:00+00:00,94,32,"Did you know you can now use plotly/bokeh backends for #pandas (interactive) plots?

E.g. just set
pd.options.plotting.backend = ""plotly""

https://t.co/g3QvHfW28a",False,False,https://twitter.com/python_tip/status/1275669988284784642,"[{'url': 'https://t.co/g3QvHfW28a', 'expanded_url': 'https://towardsdatascience.com/plotting-in-pandas-just-got-prettier-289d0e0fe5c0', 'display_url': 'towardsdatascience.com/plotting-in-pa…'}]",[],5.25227342804663,1236 days 09:02:39,1236,4.6119649596038155,5.6119649596038155
1275424368168800256,2020-06-23 13:44:00+00:00,87,22,"Importing functions from a local file is easy, just

>>> import file

But what if the file is not in the same folder/subfolder? This is the workaround:

>>> import sys
>>> sys.path.insert(1, '/path/to/the/file')
>>> import file

Details at
https://t.co/P1j5Xyhne5 https://t.co/EhU4pBye4a",False,False,https://twitter.com/python_tip/status/1275424368168800256,"[{'url': 'https://t.co/P1j5Xyhne5', 'expanded_url': 'https://stackoverflow.com/questions/4383571/importing-files-from-different-folder', 'display_url': 'stackoverflow.com/questions/4383…'}]","[{'url': 'https://t.co/EhU4pBye4a', 'media_url': 'http://pbs.twimg.com/media/EbHpGWvU8AAKRDS.png', 'display_url': 'pic.twitter.com/EhU4pBye4a'}]",5.0369526024136295,1235 days 16:46:39,1235,4.612054290731835,5.612054290731835
1275053451488215041,2020-06-22 13:10:06+00:00,54,17,"Do you need to do statistics in Python? Are statmodels / scipy.stats too much / not enough at the same time? Try pingouin!

https://t.co/dUi8Ij96ob

Several examples here 👇👇
https://t.co/reV9rd8FTG https://t.co/YkYitMkfeo",False,False,https://twitter.com/python_tip/status/1275053451488215041,"[{'url': 'https://t.co/dUi8Ij96ob', 'expanded_url': 'https://pingouin-stats.org/index.html', 'display_url': 'pingouin-stats.org/index.html'}, {'url': 'https://t.co/reV9rd8FTG', 'expanded_url': 'https://towardsdatascience.com/new-python-library-for-statistical-tests-simpler-than-statsmodels-richer-than-scipy-stats-ff380d4673c0', 'display_url': 'towardsdatascience.com/new-python-lib…'}]","[{'url': 'https://t.co/YkYitMkfeo', 'media_url': 'http://pbs.twimg.com/media/EbHmNqcWsAIsl28.png', 'display_url': 'pic.twitter.com/YkYitMkfeo'}]",4.663439094112067,1234 days 16:12:45,1234,4.612143409531359,5.612143409531359
1272625742417997824,2020-06-15 20:23:15+00:00,123,24,"str.startswith() accepts also a tuple of prefixes to look for:
>>> ""somestring"".startswith((""aa"", ""xx"", ""z"", ""som""))
True
#python
https://t.co/0bM41Fb5p3",False,False,https://twitter.com/python_tip/status/1272625742417997824,"[{'url': 'https://t.co/0bM41Fb5p3', 'expanded_url': 'https://docs.python.org/3/library/stdtypes.html#str.startswith', 'display_url': 'docs.python.org/3/library/stdt…'}]",[],5.278114659230518,1227 days 23:25:54,1227,4.612761048210273,5.612761048210273
1271214668506431488,2020-06-11 22:56:09+00:00,61,14,"tqdm() gives you a progress bar for any iterable. But what about pd.Series.apply function? Use pd.Series.progress_apply instead.

Example:
df = pd.DataFrame(range(1000), columns=['numbers'])
df.numbers.progress_apply(lambda x: x**2)

https://t.co/4HYWggzcxh",False,False,https://twitter.com/python_tip/status/1271214668506431488,"[{'url': 'https://t.co/4HYWggzcxh', 'expanded_url': 'https://colab.research.google.com/gist/simecek/f3a30b2b4cd590c31e35f0e4e1fb3462/untitled1.ipynb', 'display_url': 'colab.research.google.com/gist/simecek/f…'}]",[],4.6443908991413725,1224 days 01:58:48,1224,4.6130222836608,5.6130222836608
1268919215295209472,2020-06-05 14:54:50+00:00,77,18,"#pythontip by @1adityajoshi

Use f-strings for string formatting:

lives = ""Black""
print(f""{lives} lives matter"") 
>> ""Black lives matter""

As opposed to 
lives = ""Black""
print(f""{lives} lives matter"".format(lives))
>> ""Black lives matter""",False,False,https://twitter.com/python_tip/status/1268919215295209472,[],[],4.882801922586371,1217 days 17:57:29,1217,4.613623234581774,5.613623234581774
1268168638047100930,2020-06-03 13:12:19+00:00,103,36,"If you are new to #python and #github, you can follow @github's introduction and intermediate tutorials.

https://t.co/5g2eLrsNa6
https://t.co/Yrv6aGOxKs",False,False,https://twitter.com/python_tip/status/1268168638047100930,"[{'url': 'https://t.co/5g2eLrsNa6', 'expanded_url': 'https://lab.github.com/everydeveloper/introduction-to-python', 'display_url': 'lab.github.com/everydeveloper…'}, {'url': 'https://t.co/Yrv6aGOxKs', 'expanded_url': 'https://lab.github.com/everydeveloper/intermediate-python', 'display_url': 'lab.github.com/everydeveloper…'}]",[],5.356586274672012,1215 days 16:14:58,1215,4.613792637295748,5.613792637295748
1265523126718222336,2020-05-27 06:00:00+00:00,84,26,"ipywidgets = interactive HTML widgets for Jupyter notebooks (JN)

voilà = JNs turned into web applications

binder = run JN in a reproducible way online

ipywidgets + voilà + binder = turn your JN into a web app accessible for anybody 

Example: https://t.co/INx50UE8Uv",False,False,https://twitter.com/python_tip/status/1265523126718222336,"[{'url': 'https://t.co/INx50UE8Uv', 'expanded_url': 'https://github.com/voila-gallery/gaussian-density', 'display_url': 'github.com/voila-gallery/…'}]",[],5.093750200806762,1208 days 09:02:39,1208,4.614377130377296,5.614377130377296
1264794827163447296,2020-05-25 05:46:00+00:00,119,21,"#pandas Split a string column into multiple columns with Series.str.split(..., expand = True) 

Example: 👇👇
https://t.co/5ujM9kDFRd https://t.co/ldGtFby6Xs",False,False,https://twitter.com/python_tip/status/1264794827163447296,"[{'url': 'https://t.co/5ujM9kDFRd', 'expanded_url': 'https://www.kaggle.com/python10pm/pandas-100-tricks#Trick-21:-Split-a-string-column-into-multiple-columns', 'display_url': 'kaggle.com/python10pm/pan…'}]","[{'url': 'https://t.co/ldGtFby6Xs', 'media_url': 'http://pbs.twimg.com/media/EYz0DZaXQAAVc5L.jpg', 'display_url': 'pic.twitter.com/ldGtFby6Xs'}]",5.209486152841421,1206 days 08:48:39,1206,4.614541653528362,5.614541653528362
1263788523590684676,2020-05-22 11:07:18+00:00,73,11,">>> s = ""Große""
>>> s.upper()
'GROSSE'
>>> s.lower()
'große'
>>> s.casefold()
'grosse'",False,False,https://twitter.com/python_tip/status/1263788523590684676,[],[],4.672828834461906,1203 days 14:09:57,1203,4.614786313213646,5.614786313213646
1262973579181817856,2020-05-20 05:09:00+00:00,147,28,#Jupyter notebook magic %history gives you a list of all the commands run in the notebook. https://t.co/Uwy5s8d64V,False,False,https://twitter.com/python_tip/status/1262973579181817856,[],"[{'url': 'https://t.co/Uwy5s8d64V', 'media_url': 'http://pbs.twimg.com/media/EYb7m1zXQAImXPP.jpg', 'display_url': 'pic.twitter.com/Uwy5s8d64V'}]",5.44673737166631,1201 days 08:11:39,1201,4.614947977099834,5.614947977099834
1262725016153661440,2020-05-19 12:41:18+00:00,62,15,"Normalize, normalize,... and normalize.

>>> 'mañana' == 'mañana'
False
>>> from unicodedata import normalize
>>> normalize('NFC', 'mañana') == normalize('NFC', 'mañana')
True
>>>",False,False,https://twitter.com/python_tip/status/1262725016153661440,[],[],4.68213122712422,1200 days 15:43:57,1200,4.615028369445184,5.615028369445184
1261567058539511808,2020-05-16 08:00:00+00:00,134,32,"Simple animations with #celluloid. Just call camera.snap() after each plot

fig = plt.figure()
camera = https://t.co/O2fo1IwBR6(fig)

t = np.linspace(0, 2*np.pi, 128, endpoint=False)
for i in t:
    plt.plot(t, np.sin(t+i), color='blue')
    camera.snap()

https://t.co/ZuB4oUiGFo https://t.co/CFHUctSw7a",False,False,https://twitter.com/python_tip/status/1261567058539511808,"[{'url': 'https://t.co/O2fo1IwBR6', 'expanded_url': 'http://celluloid.Camera', 'display_url': 'celluloid.Camera'}, {'url': 'https://t.co/ZuB4oUiGFo', 'expanded_url': 'https://github.com/jwkvam/celluloid/', 'display_url': 'github.com/jwkvam/cellulo…'}]","[{'url': 'https://t.co/CFHUctSw7a', 'media_url': 'http://pbs.twimg.com/ext_tw_video_thumb/1261379229729595394/pu/img/MFvI3fwjx9kvMv-b.jpg', 'display_url': 'pic.twitter.com/CFHUctSw7a'}]",5.442417710521793,1197 days 11:02:39,1197,4.615267758291921,5.615267758291921
1259981022252408835,2020-05-11 22:57:39+00:00,114,36,"#Pandas https://t.co/ZTlyyXqxn1 enables you to
a) hide index (hide_index)
b) set caption (set_caption)
c) formatting and highlighting of columns (format, highlight_min, highlight_max, background_gradient)

For examples, see
https://t.co/zLX99Kb8FP https://t.co/aU2r0nFxIN",False,False,https://twitter.com/python_tip/status/1259981022252408835,"[{'url': 'https://t.co/ZTlyyXqxn1', 'expanded_url': 'http://DataFrame.style', 'display_url': 'DataFrame.style'}, {'url': 'https://t.co/zLX99Kb8FP', 'expanded_url': 'https://towardsdatascience.com/style-pandas-dataframe-like-a-master-6b02bf6468b0', 'display_url': 'towardsdatascience.com/style-pandas-d…'}]","[{'url': 'https://t.co/aU2r0nFxIN', 'media_url': 'http://pbs.twimg.com/media/EXxZ2csWkAIZQuL.png', 'display_url': 'pic.twitter.com/aU2r0nFxIN'}]",5.407171771460119,1193 days 02:00:18,1193,4.615582674073961,5.615582674073961
1258886266055266306,2020-05-08 22:27:29+00:00,109,33,"Rich:  #Python library for rendering rich text and beautiful formatting to the terminal. Compatible with Linux, OSX and Windows. Version 1.0 just released. 
https://t.co/f9C2D4MpCv",False,False,https://twitter.com/python_tip/status/1258886266055266306,"[{'url': 'https://t.co/f9C2D4MpCv', 'expanded_url': 'https://github.com/willmcgugan/rich', 'display_url': 'github.com/willmcgugan/ri…'}]",[],5.342334251964811,1190 days 01:30:08,1190,4.615815571288703,5.615815571288703
1258297158207451136,2020-05-07 07:26:35+00:00,81,19,"Do you need something like range() but with float numbers? Try numpy.arange()

>>> range(0, 5, 0.5) #Error!

>>> np.arange(0, 5, 0.5)
array([0. , 0.5, 1. , 1.5, 2. , 2.5, 3. , 3.5, 4. , 4.5])

#numpy",False,False,https://twitter.com/python_tip/status/1258297158207451136,[],[],4.9344739331306915,1188 days 10:29:14,1188,4.615969232627175,5.615969232627175
1257645833174028290,2020-05-05 12:18:27+00:00,66,12,"Apart of converting strings to lowercase or uppercase, you can use the swapcase() method. 

>>> s = 'Python is aWeSome.'
>>> s.upper()
'PYTHON IS AWESOME.'
>>> s.lower()
'python is awesome.'
>>> s.swapcase()
'pYTHON IS AwEsOME.'

https://t.co/wFce5kNyF9

#Python",False,False,https://twitter.com/python_tip/status/1257645833174028290,"[{'url': 'https://t.co/wFce5kNyF9', 'expanded_url': 'https://docs.python.org/3/library/stdtypes.html#str.swapcase', 'display_url': 'docs.python.org/3/library/stdt…'}]",[],4.634728988229636,1186 days 15:21:06,1186,4.616121586189051,5.616121586189051
1255981809814441984,2020-04-30 22:06:13+00:00,79,15,"Use `subplots=True` to plot columns of #pandas DataFrame into separate subfigures (and `subplots=False` to combine them into one figure). 

Example: 👇👇
https://t.co/jC6KjzAQez https://t.co/L1TPfaQjXC",False,False,https://twitter.com/python_tip/status/1255981809814441984,"[{'url': 'https://t.co/jC6KjzAQez', 'expanded_url': 'https://gist.github.com/simecek/7aa4bbfafdb5df4e21f4581b5843c69c', 'display_url': 'gist.github.com/simecek/7aa4bb…'}]","[{'url': 'https://t.co/L1TPfaQjXC', 'media_url': 'http://pbs.twimg.com/media/EW4fjmMXgAIPByH.png', 'display_url': 'pic.twitter.com/L1TPfaQjXC'}]",4.8283137373023015,1182 days 01:08:52,1182,4.616422281422255,5.616422281422255
1255376267928571905,2020-04-29 06:00:00+00:00,68,13,"Interpolate missing values in your series with pd.Series.interpolate.

Example: 👇👇 https://t.co/9Zp5efRa8k",False,False,https://twitter.com/python_tip/status/1255376267928571905,[],"[{'url': 'https://t.co/9Zp5efRa8k', 'media_url': 'http://pbs.twimg.com/media/EWkPms4WsAEOzCv.png', 'display_url': 'pic.twitter.com/9Zp5efRa8k'}]",4.68213122712422,1180 days 09:02:39,1180,4.616570579013782,5.616570579013782
1255013374653587456,2020-04-28 05:58:00+00:00,48,18,"Find Errors Faster and Write Simpler Functions with Sonarlint
- identify uncalled code
- security risks
- cognitive complexity
More info: weapon #3 at
https://t.co/9e8pIXbDoj

VS code extension:
https://t.co/a6UsoEnhwx",False,False,https://twitter.com/python_tip/status/1255013374653587456,"[{'url': 'https://t.co/9e8pIXbDoj', 'expanded_url': 'https://towardsdatascience.com/the-3-secret-weapons-that-changed-my-python-editor-forever-c99f7b2e0084', 'display_url': 'towardsdatascience.com/the-3-secret-w…'}, {'url': 'https://t.co/a6UsoEnhwx', 'expanded_url': 'https://www.sonarlint.org/vscode/', 'display_url': 'sonarlint.org/vscode/'}]",[],4.634728988229636,1179 days 09:00:39,1179,4.616644205720822,5.616644205720822
1254733346908901381,2020-04-27 11:25:16+00:00,111,55,"Thanks, Springer, for releasing many Python/ML/DS books for free:

https://t.co/p3PcoWmIRQ

Including...

Data Structures and Algorithms with Python, https://t.co/zzbeTudBF1

Python Programming Fundamentals, https://t.co/Ca5sUwyWVG

Python For ArcGIS, https://t.co/0UsuDYmYN8",False,False,https://twitter.com/python_tip/status/1254733346908901381,"[{'url': 'https://t.co/p3PcoWmIRQ', 'expanded_url': 'https://towardsdatascience.com/springer-has-released-65-machine-learning-and-data-books-for-free-961f8181f189', 'display_url': 'towardsdatascience.com/springer-has-r…'}, {'url': 'https://t.co/zzbeTudBF1', 'expanded_url': 'https://link.springer.com/book/10.1007/978-3-319-13072-9', 'display_url': 'link.springer.com/book/10.1007/9…'}, {'url': 'https://t.co/Ca5sUwyWVG', 'expanded_url': 'https://link.springer.com/book/10.1007/978-1-4471-6642-9', 'display_url': 'link.springer.com/book/10.1007/9…'}, {'url': 'https://t.co/0UsuDYmYN8', 'expanded_url': 'https://link.springer.com/book/10.1007/978-3-319-18398-5', 'display_url': 'link.springer.com/book/10.1007/9…'}]",[],5.6240175061873385,1178 days 14:27:55,1178,4.61671748071002,5.61671748071002
1252371754581803008,2020-04-20 23:01:08+00:00,47,27,"Have you tried PyCaret?  
An open source, low-code #MachineLearning library. Share your experience with us.

https://t.co/GisEOQk7XX",False,False,https://twitter.com/python_tip/status/1252371754581803008,"[{'url': 'https://t.co/GisEOQk7XX', 'expanded_url': 'https://towardsdatascience.com/announcing-pycaret-an-open-source-low-code-machine-learning-library-in-python-4a1f1aad8d46', 'display_url': 'towardsdatascience.com/announcing-pyc…'}]",[],4.859812404361672,1172 days 02:03:47,1172,4.617149589120042,5.617149589120042
1251533428098555904,2020-04-18 15:29:56+00:00,84,17,"Get 1% random sample of a huge CSV file (+ other 99 #pandas tricks):

df = https://t.co/KBWVZaKP7L_csv(""YOUR_BIG_FILE.csv"", skiprows = lambda x: x>0 and np.random.rand() > 0.01)

https://t.co/iiDCjk3oOX",False,False,https://twitter.com/python_tip/status/1251533428098555904,"[{'url': 'https://t.co/KBWVZaKP7L', 'expanded_url': 'http://pd.read', 'display_url': 'pd.read'}, {'url': 'https://t.co/iiDCjk3oOX', 'expanded_url': 'https://www.kaggle.com/python10pm/pandas-100-tricks#Trick-100:-Loading-sample-of-big-data', 'display_url': 'kaggle.com/python10pm/pan…'}]",[],4.912654885736052,1169 days 18:32:35,1169,4.617360672253989,5.617360672253989
1250198338152128514,2020-04-14 23:04:46+00:00,107,20,"Use `parse` package as an alternative to string parsing with regular expressions. In short, parse() is the opposite of format().

https://t.co/lUQObe6umZ

Examples: 👇👇 https://t.co/Z7Sh4jQyoz",False,False,https://twitter.com/python_tip/status/1250198338152128514,"[{'url': 'https://t.co/lUQObe6umZ', 'expanded_url': 'https://pypi.org/project/parse/', 'display_url': 'pypi.org/project/parse/'}]","[{'url': 'https://t.co/Z7Sh4jQyoz', 'media_url': 'http://pbs.twimg.com/media/EVmYwAVXYAQr1NC.png', 'display_url': 'pic.twitter.com/Z7Sh4jQyoz'}]",5.123963979403259,1166 days 02:07:25,1166,4.617568345674438,5.617568345674438
1240534469850914819,2020-03-19 07:04:00+00:00,107,18,"Plot diagrams with #graphviz

Example: 👇
(`gv` code copied from fastai utils)

import graphviz
def gv(s): return graphviz.Source('digraph G{ rankdir=""LR""' + s + '; }')

gv('diagrams[shape=box3d width=1 height=0.7] my->diagrams->are->very; diagrams->very->complex; my->complex') https://t.co/QtrLayMWkl",False,False,https://twitter.com/python_tip/status/1240534469850914819,[],"[{'url': 'https://t.co/QtrLayMWkl', 'media_url': 'http://pbs.twimg.com/media/ETbe5xkXYAMfnby.png', 'display_url': 'pic.twitter.com/QtrLayMWkl'}]",5.087596335232384,1139 days 10:06:39,1139,4.619275654007226,5.619275654007226
1240016313881448449,2020-03-17 20:45:02+00:00,167,80,"Do you want to analyze COVID-19 data in Python?

a)  Johns Hopkins CSSE dataset https://t.co/uSKsTyFYqD

b) COVID-19 Dashboards (click on ""View on Github"" to see Python code producing dashboards) https://t.co/cKk6Jqj3aL

c) Lots of inspiration on Kaggle
https://t.co/yQO9Mqf6Go",False,False,https://twitter.com/python_tip/status/1240016313881448449,"[{'url': 'https://t.co/uSKsTyFYqD', 'expanded_url': 'https://github.com/CSSEGISandData/COVID-19', 'display_url': 'github.com/CSSEGISandData…'}, {'url': 'https://t.co/cKk6Jqj3aL', 'expanded_url': 'http://covid19dashboards.com/', 'display_url': 'covid19dashboards.com'}, {'url': 'https://t.co/yQO9Mqf6Go', 'expanded_url': 'https://www.kaggle.com/search?q=coronavirus+in%3Anotebooks', 'display_url': 'kaggle.com/search?q=coron…'}]",[],6.0112671744041615,1137 days 23:47:41,1137,4.619390328644121,5.619390328644121
1238465351895171075,2020-03-13 14:02:04+00:00,74,12,"Number of values that meet a condition:
(df.rating > 90).sum()
df.somecol.isnull().sum()

Proportion of values that meet a condition:
(df.rating > 90).mean()

#Pandas",False,False,https://twitter.com/python_tip/status/1238465351895171075,[],[],4.709530201312334,1133 days 17:04:43,1133,4.6196149080829665,5.6196149080829665
1237862587586338816,2020-03-11 22:06:53+00:00,97,25,"from pathlib import Path

file_path = ""/path/to/myfile.png""

file_name = Path(file_path).name  # myfile.png
file_stem = Path(file_path).stem  # myfile
file_ext = Path(file_path).suffix # .png",False,False,https://twitter.com/python_tip/status/1237862587586338816,[],[],5.153291594497779,1132 days 01:09:32,1132,4.619670069691213,5.619670069691213
1237117902488305664,2020-03-09 20:47:47+00:00,121,21,">>> numbers = ['9', '44', '8', '222']
>>> max(numbers)
'9'
>>> max(numbers, key=int)
'222'
#python",False,False,https://twitter.com/python_tip/status/1237117902488305664,[],[],5.220355825078325,1129 days 23:50:26,1129,4.6198332246384295,5.6198332246384295
1235551355038765056,2020-03-05 13:02:53+00:00,91,18,"Do you need to remove a column from `DataFrame` and store it separately? (for example to remove the target from training data) Use `pop` method!

target = train_data.pop('target_col_name')

https://t.co/cCs9eZv8lJ

#pandas https://t.co/oa79VtJ2IE",False,False,https://twitter.com/python_tip/status/1235551355038765056,"[{'url': 'https://t.co/cCs9eZv8lJ', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.pop.html', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}]","[{'url': 'https://t.co/oa79VtJ2IE', 'media_url': 'http://pbs.twimg.com/media/ESWPKziWAAEIRBw.png', 'display_url': 'pic.twitter.com/oa79VtJ2IE'}]",4.983606621708336,1125 days 16:05:32,1125,4.620045397910212,5.620045397910212
1234224117160857604,2020-03-01 21:08:54+00:00,163,42,"Enable interactive features of #matplotlib plots in #jupyter notebook by adding 

%matplotlib widget

https://t.co/68RC48uDuG https://t.co/EOhI6kegoY",False,False,https://twitter.com/python_tip/status/1234224117160857604,"[{'url': 'https://t.co/68RC48uDuG', 'expanded_url': 'https://github.com/matplotlib/jupyter-matplotlib/', 'display_url': 'github.com/matplotlib/jup…'}]","[{'url': 'https://t.co/EOhI6kegoY', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/ESDYPj2WsAEAky-.jpg', 'display_url': 'pic.twitter.com/EOhI6kegoY'}]",5.66988092298052,1122 days 00:11:33,1122,4.620200572881333,5.620200572881333
1233423222940618755,2020-02-28 16:06:26+00:00,105,32,">>> a = 1
>>> b = 2
>>> a, b = b, a
>>> a
2
>>> b
1

#python #tgif https://t.co/4Q4O70Dll0",False,False,https://twitter.com/python_tip/status/1233423222940618755,[],"[{'url': 'https://t.co/4Q4O70Dll0', 'media_url': 'http://pbs.twimg.com/media/ER3_vXlXkAEmf42.jpg', 'display_url': 'pic.twitter.com/4Q4O70Dll0'}]",5.308267697401205,1119 days 19:09:05,1119,4.6203524221852055,5.6203524221852055
1232775052267065345,2020-02-26 21:10:50+00:00,36,23,"D-Tale: visualize #pandas datastructures both in #jupyter notebook and #python terminal

https://t.co/iLq7cHAlYe

Demo: https://t.co/OZn2clpc7j",False,False,https://twitter.com/python_tip/status/1232775052267065345,"[{'url': 'https://t.co/iLq7cHAlYe', 'expanded_url': 'https://github.com/man-group/dtale', 'display_url': 'github.com/man-group/dtale'}, {'url': 'https://t.co/OZn2clpc7j', 'expanded_url': 'http://andrewschonfeld.pythonanywhere.com/', 'display_url': 'andrewschonfeld.pythonanywhere.com'}]",[],4.663439094112067,1118 days 00:13:29,1118,4.620402310109672,5.620402310109672
1232062185586798593,2020-02-24 21:58:10+00:00,92,34,"Calculate memory used by a #pandas dataframe:

df.memory_usage(deep=True).sum()",False,False,https://twitter.com/python_tip/status/1232062185586798593,[],[],5.272999558563747,1116 days 01:00:49,1116,4.620501006414308,5.620501006414308
1231725159297536012,2020-02-23 23:38:56+00:00,223,62,"Do you want to do yourself a favor? Learn how to use #PDB debugger.

For Jupyter notebooks, it is easy. If you get an error...

1) Type %debug into a new cell and run it

2) To examine the code, this cheatsheet might help:
https://t.co/SVIxoBI6ab https://t.co/VJSJpaOCLx",False,False,https://twitter.com/python_tip/status/1231725159297536012,"[{'url': 'https://t.co/SVIxoBI6ab', 'expanded_url': 'https://appletree.or.kr/quick_reference_cards/Python/Python%20Debugger%20Cheatsheet.pdf', 'display_url': 'appletree.or.kr/quick_referenc…'}]","[{'url': 'https://t.co/VJSJpaOCLx', 'media_url': 'http://pbs.twimg.com/media/ERf3Qy0WkAAEAuZ.jpg', 'display_url': 'pic.twitter.com/VJSJpaOCLx'}]",6.016157159698354,1115 days 02:41:35,1115,4.620549819136442,5.620549819136442
1229869917538836482,2020-02-18 20:46:52+00:00,119,27,"#Pendulum = Python dates made easy

https://t.co/ZyFwEmYu2u https://t.co/AXX2M385Ex",False,False,https://twitter.com/python_tip/status/1229869917538836482,"[{'url': 'https://t.co/ZyFwEmYu2u', 'expanded_url': 'https://pendulum.eustace.io/', 'display_url': 'pendulum.eustace.io'}]","[{'url': 'https://t.co/AXX2M385Ex', 'media_url': 'http://pbs.twimg.com/media/ERFgGRfXUAEJxTj.png', 'display_url': 'pic.twitter.com/AXX2M385Ex'}]",5.303304908059076,1109 days 23:49:31,1109,4.62083532630528,5.62083532630528
1228308951734915073,2020-02-14 13:24:09+00:00,107,23,"Get last n lines of a file:

from collections import deque

def tail(filename, n=10):
    with open(filename) as f:
        return deque(f, n)

#python",False,False,https://twitter.com/python_tip/status/1228308951734915073,[],[],5.176149732573829,1105 days 16:26:48,1105,4.621018799045107,5.621018799045107
1224976238676205568,2020-02-05 08:41:08+00:00,125,54,"There are 69 built-in functions in Python. How many of them can you name?

You might have used `print`, `range` and `enumerate.` But have you ever heard about `frozenset`? 

Hint: It makes a set immutable (see 👇👇👇)

(Thanks @ilyaschurov for pointing to mistake in prev. tweet.) https://t.co/JNe6vCxJen",False,False,https://twitter.com/python_tip/status/1224976238676205568,[],"[{'url': 'https://t.co/JNe6vCxJen', 'media_url': 'http://pbs.twimg.com/media/EP_8-DkXsAAn-2v.png', 'display_url': 'pic.twitter.com/JNe6vCxJen'}]",5.662960480135946,1096 days 11:43:47,1096,4.621412377889629,5.621412377889629
1223316767856103424,2020-01-31 18:47:00+00:00,55,18,"pip install that
python -m that

#TGIF https://t.co/JURcKEx08c",False,False,https://twitter.com/python_tip/status/1223316767856103424,[],"[{'url': 'https://t.co/JURcKEx08c', 'media_url': 'http://pbs.twimg.com/media/EPeplMcX4AYGCxy.png', 'display_url': 'pic.twitter.com/JURcKEx08c'}]",4.700480365792417,1091 days 21:49:39,1091,4.62162009678417,5.62162009678417
1221897262932078593,2020-01-27 20:46:23+00:00,81,14,"Guess what will be the result of the following line:

>>> {True: ""Hello"", 1: ""Good night"", 1.0: ""Bye""}

#wtfpython",False,False,https://twitter.com/python_tip/status/1221897262932078593,[],[],4.820281565605037,1087 days 23:49:02,1087,4.621781019464587,5.621781019464587
1220244272399691778,2020-01-23 07:18:00+00:00,93,22,"Coming to Python from #rstats and miss the `which` function? (=a function giving the TRUE indices of a logical object).

This is the best Python implementation I found:
https://t.co/1NMfGqiHLh https://t.co/vykfJ9QiYB",False,False,https://twitter.com/python_tip/status/1220244272399691778,"[{'url': 'https://t.co/1NMfGqiHLh', 'expanded_url': 'https://alex.miller.im/posts/python-pandas-which-function-indices-similar-to-R/', 'display_url': 'alex.miller.im/posts/python-p…'}]","[{'url': 'https://t.co/vykfJ9QiYB', 'media_url': 'http://pbs.twimg.com/media/EOhY7I8WAAEMnE6.png', 'display_url': 'pic.twitter.com/vykfJ9QiYB'}]",5.075173815233827,1083 days 10:20:39,1083,4.621937566349621,5.621937566349621
1219407760477036544,2020-01-20 23:54:00+00:00,122,28,"Old 🧓 but Gold 🏆: In #Jupyter notebook, type double question marks to view the source code where a particular function is defined. https://t.co/DEgJfBs9z6",False,False,https://twitter.com/python_tip/status/1219407760477036544,[],"[{'url': 'https://t.co/DEgJfBs9z6', 'media_url': 'http://pbs.twimg.com/media/EOhTRISX4AEeEh3.jpg', 'display_url': 'pic.twitter.com/DEgJfBs9z6'}]",5.332718793265369,1081 days 02:56:39,1081,4.622014291227434,5.622014291227434
1219149055630217216,2020-01-20 06:46:00+00:00,62,13,"#pandas 1.0.0 is coming, see the NEWS

https://t.co/0i5FiPI84b

I am looking forward to `https://t.co/kKksLTtTy3` scalar and the three-valued logic. The current implementation of missing values can be counter-intuitive if you are coming from a different language. https://t.co/sMjNfDRlVO",False,False,https://twitter.com/python_tip/status/1219149055630217216,"[{'url': 'https://t.co/0i5FiPI84b', 'expanded_url': 'https://dev.pandas.io/docs/whatsnew/v1.0.0.html', 'display_url': 'dev.pandas.io/docs/whatsnew/…'}, {'url': 'https://t.co/kKksLTtTy3', 'expanded_url': 'http://pd.NA', 'display_url': 'pd.NA'}]","[{'url': 'https://t.co/sMjNfDRlVO', 'media_url': 'http://pbs.twimg.com/media/EOhRKNHX4AAZUdo.png', 'display_url': 'pic.twitter.com/sMjNfDRlVO'}]",4.624972813284271,1080 days 09:48:39,1080,4.622052283368536,5.622052283368536
1218107811483267072,2020-01-17 09:48:28+00:00,100,27,"#pythontip from @raymondh:
Another interesting use of #python's walrus operator is to compute differences between successive values in a data stream. 

>>> data = [10, 14, 34, 49, 70, 77]
>>> prev = 0; [-prev + (prev := x) for x in data]
[10, 4, 20, 15, 21, 7]",False,False,https://twitter.com/python_tip/status/1218107811483267072,[],[],5.204006687076795,1077 days 12:51:07,1077,4.622164838360058,5.622164838360058
1217697058842447872,2020-01-16 06:36:17+00:00,94,17,"any(iterable) returns True if any item is True
all(iterable) returns True if all items are True

>>> lst = [3, 6, 9, 12]
>>> any(n % 2 == 0 for n in lst)
True
>>> any(n % 5 == 0 for n in lst)
False
>>> all(n % 2 == 0 for n in lst)
False
>>> all(n % 3 == 0 for n in lst)
True",False,False,https://twitter.com/python_tip/status/1217697058842447872,[],[],4.983606621708336,1076 days 09:38:56,1076,4.622201900117288,5.622201900117288
1217218591231225856,2020-01-14 22:55:01+00:00,123,32,"You can pass a default value to the dict.get method to be returned if the key is not found:

>>> mydict = {'a': 1, 'b': 33, 'c': 'x'}
>>> mydict.get('a')
1
>>> mydict.get('d')
>>> mydict.get('d', 0)
0

vs.

>>> mydict['d'] # KeyError

#python",False,False,https://twitter.com/python_tip/status/1217218591231225856,[],[],5.393627546352361,1075 days 01:57:40,1075,4.622238742339815,5.622238742339815
1216839743184437248,2020-01-13 21:49:37+00:00,166,35,"Get every n-th item of the list: 

>>> lst =  [1, 2, 3, 4, 5, 6, 7, 8, 9]
>>> n = 3
>>> lst[n - 1::n]
[3, 6, 9]
>>> n = 4
>>> lst[n - 1::n]
[4, 8]

#python",False,False,https://twitter.com/python_tip/status/1216839743184437248,[],[],5.605802066295998,1074 days 00:52:16,1074,4.62227537027415,5.62227537027415
1215578861011984386,2020-01-10 10:19:19+00:00,78,20,"To iterate through pairs of DataFrame columns,  you can use `combinations` function from `itertools` module.

Example: 👇👇👇

Full code (runnable in Colab):
https://t.co/3NMtk16ORN
#itertools #pandas https://t.co/gwxFix1kLY",False,False,https://twitter.com/python_tip/status/1215578861011984386,"[{'url': 'https://t.co/3NMtk16ORN', 'expanded_url': 'https://gist.github.com/simecek/65e80cf9693099c7ec062bd7e52c9d0d', 'display_url': 'gist.github.com/simecek/65e80c…'}]","[{'url': 'https://t.co/gwxFix1kLY', 'media_url': 'http://pbs.twimg.com/media/EN6ZuuBWAAIrZ_u.png', 'display_url': 'pic.twitter.com/gwxFix1kLY'}]",4.9344739331306915,1070 days 13:21:58,1070,4.622419840031206,5.622419840031206
1214803924370239488,2020-01-08 07:00:00+00:00,94,24,"For DataFrame df, `df.corr` computes pairwise correlation of columns.

Extra tips:
* If your data contains outliers, use rank based Spearman correlation. `df.corr(method=‘spearman’)`
* For better readability, do not print all digits but `df.corr().round(decimals=3)`.

#pandas https://t.co/qQ3RQrdO9n",False,False,https://twitter.com/python_tip/status/1214803924370239488,[],"[{'url': 'https://t.co/qQ3RQrdO9n', 'media_url': 'http://pbs.twimg.com/media/ENd4QO6U4AAaMZ1.png', 'display_url': 'pic.twitter.com/qQ3RQrdO9n'}]",5.117993812416755,1068 days 10:02:39,1068,4.622490920526299,5.622490920526299
1214441538035617794,2020-01-07 07:00:00+00:00,137,22,"#numpy position functions; for an array `a`
* np.argmax(a) = index of maximum
* np.argmin(a) = index of minimum
* np.argwhere(condition(a)) =  indices that satisfies the condition
* np.argsort(a) = indices that would sort an array `a` https://t.co/WGpQk3f6ci",False,False,https://twitter.com/python_tip/status/1214441538035617794,[],"[{'url': 'https://t.co/WGpQk3f6ci', 'media_url': 'http://pbs.twimg.com/media/ENdussjXsAAfuXZ.png', 'display_url': 'pic.twitter.com/WGpQk3f6ci'}]",5.318119993844216,1067 days 10:02:39,1067,4.622526190379751,5.622526190379751
1214079150312452099,2020-01-06 07:00:00+00:00,66,16,"Welcome to a new year, happy 50 years since Unix epoch! #python

>>> from time import time
>>> time() / 365.25 / 24 / 3600
50.009161545126794

#happynewyear2020 https://t.co/iMmVcu80I8",False,False,https://twitter.com/python_tip/status/1214079150312452099,"[{'url': 'https://t.co/iMmVcu80I8', 'expanded_url': 'https://twitter.com/rafalab/status/1212073560786833408', 'display_url': 'twitter.com/rafalab/status…'}]",[],4.74493212836325,1066 days 10:02:39,1066,4.622561287031985,5.622561287031985
1212855064223768577,2020-01-02 21:55:55+00:00,136,22,"Working with currency? Issues with floating point arithmetics? Use decimal.

>>> x = 0.1*3
>>> x == 0.3
False
>>> from decimal import Decimal
>>> y = Decimal('0.1')*3
>>> y == Decimal('0.3')
True

#python",False,False,https://twitter.com/python_tip/status/1212855064223768577,[],[],5.313205979041787,1063 days 00:58:34,1063,4.622665589622465,5.622665589622465
1212421969704095744,2020-01-01 17:14:57+00:00,56,31,"Say goodbye to #python 2.7. 

https://t.co/ZaI4tm8h9d",False,False,https://twitter.com/python_tip/status/1212421969704095744,"[{'url': 'https://t.co/ZaI4tm8h9d', 'expanded_url': 'https://pythonclock.org/', 'display_url': 'pythonclock.org'}]",[],5.0106352940962555,1061 days 20:17:36,1061,4.622734354485233,5.622734354485233
1210455270784024576,2019-12-27 07:00:00+00:00,68,20,"a.all() vs. np.all(a) vs. all(a)

If `a` is np.array, then np.all/a.all is faster then a python bulit-in `all` function.

Explanation: https://t.co/3W7OS7NYOo https://t.co/BBavDzK0Di",False,False,https://twitter.com/python_tip/status/1210455270784024576,"[{'url': 'https://t.co/3W7OS7NYOo', 'expanded_url': 'https://stackoverflow.com/questions/43382237/numpy-ndarray-all-vs-np-allndarray-vs-allndarray', 'display_url': 'stackoverflow.com/questions/4338…'}]","[{'url': 'https://t.co/BBavDzK0Di', 'media_url': 'http://pbs.twimg.com/media/EMv9qbBX0AE453M.png', 'display_url': 'pic.twitter.com/BBavDzK0Di'}]",4.859812404361672,1056 days 10:02:39,1056,4.622903879291838,5.622903879291838
1210336206329974785,2019-12-26 23:06:53+00:00,95,16,"Another tool useful for Jupyter Notebooks: Recycle useful parts of your notebook with #importnb package. 

https://t.co/yHrhTBzLXQ https://t.co/nNmgrzJ9zk",False,False,https://twitter.com/python_tip/status/1210336206329974785,"[{'url': 'https://t.co/yHrhTBzLXQ', 'expanded_url': 'https://pypi.org/project/importnb', 'display_url': 'pypi.org/project/import…'}]","[{'url': 'https://t.co/nNmgrzJ9zk', 'media_url': 'http://pbs.twimg.com/media/EMv6DQMXkAAk-77.png', 'display_url': 'pic.twitter.com/nNmgrzJ9zk'}]",4.969813299576001,1056 days 02:09:32,1056,4.622903879291838,5.622903879291838
1209245191430975488,2019-12-23 22:51:34+00:00,80,23,"The Norway Problem and the differences between YAML parsers

https://t.co/2MwdFLrY40

#pyyaml #strictyaml #ruamel https://t.co/2NgV9ZLg8H",False,False,https://twitter.com/python_tip/status/1209245191430975488,"[{'url': 'https://t.co/2MwdFLrY40', 'expanded_url': 'https://hitchdev.com/strictyaml/why/implicit-typing-removed/', 'display_url': 'hitchdev.com/strictyaml/why…'}]","[{'url': 'https://t.co/2NgV9ZLg8H', 'media_url': 'http://pbs.twimg.com/media/EMgZ_3sX0AIRzJ-.png', 'display_url': 'pic.twitter.com/2NgV9ZLg8H'}]",5.0106352940962555,1053 days 01:54:13,1053,4.623004174304547,5.623004174304547
1208860479986315264,2019-12-22 21:22:52+00:00,76,12,"Working with #fractions? Explore the fractions module:

>>> from fractions import Fraction as frac
>>> print(frac(3, 10))
3/10
>>> print(frac(0.33).limit_denominator(100))
33/100
>>> print(frac('1/4') + frac(1, 5))
9/20

https://t.co/PLaAGRK8LG",False,False,https://twitter.com/python_tip/status/1208860479986315264,"[{'url': 'https://t.co/PLaAGRK8LG', 'expanded_url': 'https://docs.python.org/3/library/fractions.html', 'display_url': 'docs.python.org/3/library/frac…'}]",[],4.727387818712341,1052 days 00:25:31,1052,4.623037402648812,5.623037402648812
1208006114597638144,2019-12-20 12:47:56+00:00,120,28,"Get information about the underlying system with the platform module:

>>> import platform
>>> platform.architecture()
('64bit', '')
>>> platform.machine()
'x86_64'
>>> platform.system()
'Linux'

https://t.co/KJY7BEsrtd",False,False,https://twitter.com/python_tip/status/1208006114597638144,"[{'url': 'https://t.co/KJY7BEsrtd', 'expanded_url': 'https://docs.python.org/3/library/platform.html', 'display_url': 'docs.python.org/3/library/plat…'}]",[],5.3230099791384085,1049 days 15:50:35,1049,4.623136556789165,5.623136556789165
1207578845890699264,2019-12-19 08:30:07+00:00,64,14,"#pathlib Path.stat().st_size prints size of the file in bytes

https://t.co/PjvTXRNciN https://t.co/OIgpXxS0I9",False,False,https://twitter.com/python_tip/status/1207578845890699264,"[{'url': 'https://t.co/PjvTXRNciN', 'expanded_url': 'https://docs.python.org/3/library/pathlib.html#pathlib.Path.stat', 'display_url': 'docs.python.org/3/library/path…'}]","[{'url': 'https://t.co/OIgpXxS0I9', 'media_url': 'http://pbs.twimg.com/media/EMIuiUGWsAAU5MY.png', 'display_url': 'pic.twitter.com/OIgpXxS0I9'}]",4.672828834461906,1048 days 11:32:46,1048,4.623169450403272,5.623169450403272
1206963913084018689,2019-12-17 15:46:35+00:00,210,29,">>> ""a""*10
'aaaaaaaaaa'
>>> [""a""]*10
['a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']

#python",False,False,https://twitter.com/python_tip/status/1206963913084018689,[],[],5.697093486505405,1046 days 18:49:14,1046,4.623235035662663,5.623235035662663
1206597167982489603,2019-12-16 15:29:16+00:00,96,20,"Do you need some hints for using #pandas? Dovpanda is your friend.
https://t.co/HPrPtZJTjk https://t.co/Ri5v0LbS6a",False,False,https://twitter.com/python_tip/status/1206597167982489603,"[{'url': 'https://t.co/HPrPtZJTjk', 'expanded_url': 'https://github.com/dovpanda-dev/dovpanda', 'display_url': 'github.com/dovpanda-dev/d…'}]","[{'url': 'https://t.co/Ri5v0LbS6a', 'media_url': 'http://pbs.twimg.com/media/EL6xpsDWsAwR3fg.png', 'display_url': 'pic.twitter.com/Ri5v0LbS6a'}]",5.056245805348308,1045 days 18:31:55,1045,4.623267738944208,5.623267738944208
1206344010027208705,2019-12-15 22:43:19+00:00,181,37,"The Python visualization world can be sometimes a frustrating place. It helps if you understand basic building blocks - see ""Effectively Using #Matplotlib"" tutorial

https://t.co/13KtUwHZrd https://t.co/eGldoUkymM",False,False,https://twitter.com/python_tip/status/1206344010027208705,"[{'url': 'https://t.co/13KtUwHZrd', 'expanded_url': 'https://pbpython.com/effective-matplotlib.html', 'display_url': 'pbpython.com/effective-matp…'}]","[{'url': 'https://t.co/eGldoUkymM', 'media_url': 'http://pbs.twimg.com/media/EL3LL3oWkAcm2Zr.jpg', 'display_url': 'pic.twitter.com/eGldoUkymM'}]",5.680172609017068,1045 days 01:45:58,1045,4.623267738944208,5.623267738944208
1204655327167299584,2019-12-11 06:53:06+00:00,113,29,"x += a is not always the same as x = x + a

>>> x = y = [1] 
>>> x += [2]
>>> x, y   # return ([1, 2], [1, 2])
>>> x = x + [3]
>>> x,y   # return ([1, 2, 3], [1, 2])

That is because `+=` calls __iadd__ method while `+` calls __add__.

https://t.co/8a3qV6SQiX

Another example 👇 https://t.co/9sz2y5xqYz",False,False,https://twitter.com/python_tip/status/1204655327167299584,"[{'url': 'https://t.co/8a3qV6SQiX', 'expanded_url': 'https://stackoverflow.com/questions/9766387/different-behaviour-for-list-iadd-and-list-add', 'display_url': 'stackoverflow.com/questions/9766…'}, {'url': 'https://t.co/9sz2y5xqYz', 'expanded_url': 'https://twitter.com/zzzeek/status/1203439552507076609', 'display_url': 'twitter.com/zzzeek/status/…'}]",[],5.303304908059076,1040 days 09:55:45,1040,4.6234305825120705,5.6234305825120705
1202978726495084546,2019-12-06 15:50:53+00:00,104,31,"Need some fake data? Faker package will generate them for you.

https://t.co/5lrlbHLu4B

#python",False,False,https://twitter.com/python_tip/status/1202978726495084546,"[{'url': 'https://t.co/5lrlbHLu4B', 'expanded_url': 'https://pypi.org/project/Faker/', 'display_url': 'pypi.org/project/Faker/'}]",[],5.288267030694535,1035 days 18:53:32,1035,4.6235928148064085,5.6235928148064085
1202260895260446720,2019-12-04 16:18:29+00:00,56,19,"Use np.isnan(), pd.isna() or math.isnan() to check for nan values:

>>> np.nan == np.nan
False
>>> np.nan is math.nan
False
>>> math.isnan(np.nan)
True
>>> pd.isna(float('nan'))
True
>>> np.isnan(math.nan)
True

https://t.co/8pQEvegGtK

#python #pandas #numpy",False,False,https://twitter.com/python_tip/status/1202260895260446720,"[{'url': 'https://t.co/8pQEvegGtK', 'expanded_url': 'https://towardsdatascience.com/navigating-the-hell-of-nans-in-python-71b12558895b', 'display_url': 'towardsdatascience.com/navigating-the…'}]",[],4.736198448394496,1033 days 19:21:08,1033,4.6236577036392745,5.6236577036392745
1201126011942965248,2019-12-01 13:08:51+00:00,399,97,"Do you run long, time-demanding calculations in Jupyter Notebook?

With `jupyter-notify` extension, you will get a browser notification when your calculation is done (=when the cell is completed)

https://t.co/2xjocGl2S4

Example: 👇 https://t.co/uugYC26qCk",False,False,https://twitter.com/python_tip/status/1201126011942965248,"[{'url': 'https://t.co/2xjocGl2S4', 'expanded_url': 'https://github.com/ShopRunner/jupyter-notify', 'display_url': 'github.com/ShopRunner/jup…'}]","[{'url': 'https://t.co/uugYC26qCk', 'media_url': 'http://pbs.twimg.com/media/EKtBnMOXUAw0HEW.png', 'display_url': 'pic.twitter.com/uugYC26qCk'}]",6.53813982376767,1030 days 16:11:30,1030,4.623755191813986,5.623755191813986
1199438984381915137,2019-11-26 21:25:13+00:00,154,39,"ADTK = new Python library for time series anomaly detection

https://t.co/IwpYyNEuGP

(from the same group `tsaug` = a Python package for time series augmentation, https://t.co/fNWx5CWW1x) https://t.co/CdZ1nCkpdV",False,False,https://twitter.com/python_tip/status/1199438984381915137,"[{'url': 'https://t.co/IwpYyNEuGP', 'expanded_url': 'https://github.com/arundo/adtk', 'display_url': 'github.com/arundo/adtk'}, {'url': 'https://t.co/fNWx5CWW1x', 'expanded_url': 'https://github.com/arundo/tsaug', 'display_url': 'github.com/arundo/tsaug'}]","[{'url': 'https://t.co/CdZ1nCkpdV', 'media_url': 'http://pbs.twimg.com/media/EKVDWkqWsAAK9Fo.png', 'display_url': 'pic.twitter.com/CdZ1nCkpdV'}]",5.605802066295998,1026 days 00:27:52,1026,4.62388574812149,5.62388574812149
1198747702953234433,2019-11-24 23:38:18+00:00,123,29,"If you want to get multiple items from a dictionary, you might either use a list comprehension

>>> [mydict[x] for x in mykeys]

or you can use `operator.itemgetter` as follows

>>> from operator import itemgetter
>>> itemgetter(*mykeys)(mydict)  

#pythontip from @IDryer 👇 https://t.co/B34eaYdeqF",False,False,https://twitter.com/python_tip/status/1198747702953234433,"[{'url': 'https://t.co/B34eaYdeqF', 'expanded_url': 'https://twitter.com/IDryer/status/1196526211796783110', 'display_url': 'twitter.com/IDryer/status/…'}]",[],5.351858133476067,1024 days 02:40:57,1024,4.623951400374046,5.623951400374046
1197551348457320448,2019-11-21 16:24:25+00:00,172,25,">>> x, *y, z = 0, 1, 2, 3, 4, 5
>>> x
0
>>> y
[1, 2, 3, 4]
>>> z
5

#python",False,False,https://twitter.com/python_tip/status/1197551348457320448,[],[],5.5134287461649825,1020 days 19:27:04,1020,4.624083759608766,5.624083759608766
1197274885380288513,2019-11-20 22:05:51+00:00,117,24,"In #python3_8, f-strings support the = specifier:

>>> a = 42
>>> f""{a=}""
'a=42'
>>> f""{a/7=}""
'a/7=6.0'",False,False,https://twitter.com/python_tip/status/1197274885380288513,[],[],5.247024072160486,1020 days 01:08:30,1020,4.624083759608766,5.624083759608766
1196529487934115841,2019-11-18 20:43:55+00:00,89,20,"Recursive folder globbing is easy in #python3

imgs = glob.glob('/path/**/*.png')
or 
imgs = pathlib.Path('/path').glob('**/*.png')

https://t.co/HjmOW04Tal
https://t.co/jyNqpHaJXi

#python",False,False,https://twitter.com/python_tip/status/1196529487934115841,"[{'url': 'https://t.co/HjmOW04Tal', 'expanded_url': 'https://docs.python.org/3/library/glob.html', 'display_url': 'docs.python.org/3/library/glob…'}, {'url': 'https://t.co/jyNqpHaJXi', 'expanded_url': 'https://docs.python.org/3/library/pathlib.html#basic-use', 'display_url': 'docs.python.org/3/library/path…'}]",[],5.0106352940962555,1017 days 23:46:34,1017,4.624184199229662,5.624184199229662
1195126249368240128,2019-11-14 23:47:56+00:00,83,14,"#pandas Three ways to convert one set of values to another 👇

See other 84 @justmarkham's pandas tricks at https://t.co/26BvCDC4ex https://t.co/ibvxnETc5V",False,False,https://twitter.com/python_tip/status/1195126249368240128,"[{'url': 'https://t.co/26BvCDC4ex', 'expanded_url': 'https://www.dataschool.io/python-pandas-tips-and-tricks/', 'display_url': 'dataschool.io/python-pandas-…'}, {'url': 'https://t.co/ibvxnETc5V', 'expanded_url': 'https://twitter.com/justmarkham/status/1194708511546105858', 'display_url': 'twitter.com/justmarkham/st…'}]",[],4.836281906951478,1014 days 02:50:35,1014,4.624285880611023,5.624285880611023
1194542119270199296,2019-11-13 09:06:49+00:00,109,20,"VS Code now supports editing and running Jupyter notebooks

https://t.co/X1IRIzJAhw

Honestly, I still did not switch from classical NB but better autocompletion and variable explorer seem tempting.

#vscode #jupyter https://t.co/jhB53gxA6j",False,False,https://twitter.com/python_tip/status/1194542119270199296,"[{'url': 'https://t.co/X1IRIzJAhw', 'expanded_url': 'https://towardsdatascience.com/jupyter-notebook-in-visual-studio-code-3fc21a36fe43', 'display_url': 'towardsdatascience.com/jupyter-notebo…'}]","[{'url': 'https://t.co/jhB53gxA6j', 'media_url': 'http://pbs.twimg.com/media/EJPdo2qXYAEHzTB.png', 'display_url': 'pic.twitter.com/jhB53gxA6j'}]",5.135798437050262,1012 days 12:09:28,1012,4.6243544674654355,5.6243544674654355
1194150584384815106,2019-11-12 07:11:00+00:00,133,19,"Easy way to get stock market prices (and others economic data):

>>> from pandas_datareader import data as wb
>>>  ticker_name = '^GSPC'
>>> ticker = wb.DataReader(ticker_name, start='2010-1-1', data_source='yahoo')

More info:
https://t.co/3Sx13D5VVg https://t.co/IZUKnSQyrC",False,False,https://twitter.com/python_tip/status/1194150584384815106,"[{'url': 'https://t.co/3Sx13D5VVg', 'expanded_url': 'https://pandas-datareader.readthedocs.io/en/latest/remote_data.html', 'display_url': 'pandas-datareader.readthedocs.io/en/latest/remo…'}]","[{'url': 'https://t.co/IZUKnSQyrC', 'media_url': 'http://pbs.twimg.com/media/EJIiNrBXsAA6JRM.jpg', 'display_url': 'pic.twitter.com/IZUKnSQyrC'}]",5.25227342804663,1011 days 10:13:39,1011,4.624389026187581,5.624389026187581
1192938647588409349,2019-11-08 22:55:11+00:00,279,65,"With the walrus operator

while True:
    line = fp.readline()
    if not line:
        break
    do_something(line)

can be written as:

while line := fp.readline():
    do_something(line)

More examples: https://t.co/4WCBSdizFF

#python3_8 #walrusoperator",False,False,https://twitter.com/python_tip/status/1192938647588409349,"[{'url': 'https://t.co/4WCBSdizFF', 'expanded_url': 'https://www.python.org/dev/peps/pep-0572/#examples', 'display_url': 'python.org/dev/peps/pep-0…'}]",[],6.163314804034641,1008 days 01:57:50,1008,4.624493867707955,5.624493867707955
1192214829257363458,2019-11-06 22:59:00+00:00,78,15,"Use beautiful_date when need to create date/datetime objects in a simple way.

pip install beautiful-date

from beautiful_date import *

>>> d = 5/Mar/2019
BeautifulDate(2019, 3, 5)

>>> d[4:13]
datetime.datetime(2019, 3, 5, 4, 13)

#pythontip from @KuzmovychBox",False,False,https://twitter.com/python_tip/status/1192214829257363458,[],[],4.820281565605037,1006 days 02:01:39,1006,4.624564822288695,5.624564822288695
1192055718075088897,2019-11-06 12:26:45+00:00,249,65,"Do you need to extract tables from a pdf document? Try camelot.
>>> import camelot
>>> tables = https://t.co/ttwuRpFpGR_pdf('foo.pdf')
>>> tables[0].to_csv('foo.csv') 
>>> tables[0].df # get a pandas DataFrame!

https://t.co/p7ckqIoC46",False,False,https://twitter.com/python_tip/status/1192055718075088897,"[{'url': 'https://t.co/ttwuRpFpGR', 'expanded_url': 'http://camelot.read', 'display_url': 'camelot.read'}, {'url': 'https://t.co/p7ckqIoC46', 'expanded_url': 'https://camelot-py.readthedocs.io/en/master/', 'display_url': 'camelot-py.readthedocs.io/en/master/'}]",[],6.09807428216624,1005 days 15:29:24,1005,4.624600644854108,5.624600644854108
1190407280111628288,2019-11-01 23:16:26+00:00,210,64,"Data-to-Viz will help you to choose the visualization for your data. It provides the code to reproduce the graph, not only for #python, but for #rstats and #d3 as well.

https://t.co/X3G3oePfp3
https://t.co/RSQiHuUv2y https://t.co/ONZY0WbDFK",False,False,https://twitter.com/python_tip/status/1190407280111628288,"[{'url': 'https://t.co/X3G3oePfp3', 'expanded_url': 'https://www.data-to-viz.com/', 'display_url': 'data-to-viz.com'}, {'url': 'https://t.co/RSQiHuUv2y', 'expanded_url': 'https://python-graph-gallery.com/', 'display_url': 'python-graph-gallery.com'}]","[{'url': 'https://t.co/ONZY0WbDFK', 'media_url': 'http://pbs.twimg.com/media/EIUq6u8WwAAHBCP.jpg', 'display_url': 'pic.twitter.com/ONZY0WbDFK'}]",5.998936561946683,1001 days 02:19:05,1001,4.624746456158597,5.624746456158597
1189072624372125696,2019-10-29 06:53:00+00:00,155,38,"Chip Huyen (@chipro) 'python-is-cool' collection of tips

https://t.co/ZxAR72A8eG https://t.co/eCMX5JqZt6",False,False,https://twitter.com/python_tip/status/1189072624372125696,"[{'url': 'https://t.co/ZxAR72A8eG', 'expanded_url': 'https://github.com/chiphuyen/python-is-cool', 'display_url': 'github.com/chiphuyen/pyth…'}]","[{'url': 'https://t.co/eCMX5JqZt6', 'media_url': 'http://pbs.twimg.com/media/EHw7kx2WoAAo2W5.png', 'display_url': 'pic.twitter.com/eCMX5JqZt6'}]",5.598421958998375,997 days 09:55:39,997,4.624896769375884,5.624896769375884
1187614763813167104,2019-10-25 06:19:59+00:00,253,71,"convert two lists into dictionary:

>>> a = ['a', 'b', 'c']
>>> b = [1, 2, 3]
>>> dict(zip(a, b))
{'a': 1, 'b': 2, 'c': 3}

#python",False,False,https://twitter.com/python_tip/status/1187614763813167104,[],[],6.1463292576688975,993 days 09:22:38,993,4.625052244959092,5.625052244959092
1186857483572305920,2019-10-23 04:10:49+00:00,102,15,">>> mylst = [1, 2, 3]
>>> a, b, c =  mylst
>>> a
1
>>> b
2
>>> c
3

#python",False,False,https://twitter.com/python_tip/status/1186857483572305920,[],[],4.997212273764115,991 days 07:13:28,991,4.625132137931628,5.625132137931628
1186389928520962048,2019-10-21 21:12:55+00:00,76,18,"os.fspath normalizes both path strings and Path objects to string:

>>> from pathlib import Path
>>> import os.path
>>> p1 = os.path.join('Downloads', 'zzz')
>>> p2 = Path('Downloads/zzz')
>>> from os import fspath
>>> fspath(p1), fspath(p2)
('Downloads/zzz', 'Downloads/zzz')",False,False,https://twitter.com/python_tip/status/1186389928520962048,[],[],4.875197323201151,990 days 00:15:34,990,4.625172662854052,5.625172662854052
1184860661601275909,2019-10-17 15:56:10+00:00,88,15,"#pandas 0.25 comes with `Series.explode` functionality to split list-like values to rows.

Example:

df = pd.DataFrame([{'var1': 'a,b,c', 'var2': 1}, {'var1': 'd,e,f', 'var2': 2}])

df.assign(var1=df.var1.str.split(',')).explode('var1') https://t.co/OShhGVwTQa",False,False,https://twitter.com/python_tip/status/1184860661601275909,[],"[{'url': 'https://t.co/OShhGVwTQa', 'media_url': 'http://pbs.twimg.com/media/EHF4TC0UUAAEIpn.png', 'display_url': 'pic.twitter.com/OShhGVwTQa'}]",4.897839799950911,985 days 18:58:49,985,4.625381539273334,5.625381539273334
1184243873700147200,2019-10-15 23:05:16+00:00,88,39,"The final version of Python 3.8.0 is out!  Here is the list of new cool features:

https://t.co/HIXAf4UX54

Wanna try out? #pyenv enables you to manage multiple Python versions on a single machine.

https://t.co/wCyNX5XJ9K

To get a new Python 3.8 environment with #pyenv 👇 https://t.co/BjiSiiPuM6",False,False,https://twitter.com/python_tip/status/1184243873700147200,"[{'url': 'https://t.co/HIXAf4UX54', 'expanded_url': 'https://deepsource.io/blog/python-3-8-whats-new/', 'display_url': 'deepsource.io/blog/python-3-…'}, {'url': 'https://t.co/wCyNX5XJ9K', 'expanded_url': 'https://realpython.com/intro-to-pyenv/', 'display_url': 'realpython.com/intro-to-pyenv/'}]","[{'url': 'https://t.co/BjiSiiPuM6', 'media_url': 'http://pbs.twimg.com/media/EG9HWFKUUAAk2zD.png', 'display_url': 'pic.twitter.com/BjiSiiPuM6'}]",5.327876168789581,984 days 02:07:55,984,4.625424650463388,5.625424650463388
1182365356683345922,2019-10-10 18:40:42+00:00,67,19,"Turn your #jupyter notebook into a reveal.js-based slides with RISE extension.

https://t.co/usQhx6tTNe",False,False,https://twitter.com/python_tip/status/1182365356683345922,"[{'url': 'https://t.co/usQhx6tTNe', 'expanded_url': 'https://rise.readthedocs.io/en/maint-5.5/', 'display_url': 'rise.readthedocs.io/en/maint-5.5/'}]",[],4.8283137373023015,978 days 21:43:21,978,4.625693794056808,5.625693794056808
1181958913283018753,2019-10-09 15:45:39+00:00,167,32,"List comprehensions can contain more then one for and if clauses:

[
(x, y) 
for x in range(4) 
for y in range (x + 2) 
if x != 0 
if y != x
]",False,False,https://twitter.com/python_tip/status/1181958913283018753,[],[],5.575949103146316,977 days 18:48:18,977,4.625740533350203,5.625740533350203
1181669340317388806,2019-10-08 20:34:59+00:00,133,27,"enumerate() takes a second parameter to change the starting count:

>>> names = [""Alice"", ""Bob"", ""Charlie""]
>>> list(enumerate(names, start=101))
[(101, 'Alice'), (102, 'Bob'), (103, 'Charlie')]

https://t.co/SECAO6sci5

#python",False,False,https://twitter.com/python_tip/status/1181669340317388806,"[{'url': 'https://t.co/SECAO6sci5', 'expanded_url': 'https://docs.python.org/3/library/functions.html#enumerate', 'display_url': 'docs.python.org/3/library/func…'}]",[],5.3706380281276624,976 days 23:37:38,976,4.625787851379546,5.625787851379546
1180744616175394816,2019-10-06 07:20:28+00:00,135,31,"Saving objects from Jupyter notebook session into a single compressed file (i.e. Python version of #rstats function `save`):

https://t.co/GtHcfgts9j #selfpromo #pickle

Example: https://t.co/NIApyh9wAR",False,False,https://twitter.com/python_tip/status/1180744616175394816,"[{'url': 'https://t.co/GtHcfgts9j', 'expanded_url': 'https://gist.github.com/simecek/19588c61c3430834bec01c67effa9c4a', 'display_url': 'gist.github.com/simecek/19588c…'}]","[{'url': 'https://t.co/NIApyh9wAR', 'media_url': 'http://pbs.twimg.com/media/EGLYzsFXkAA5_Ca.png', 'display_url': 'pic.twitter.com/NIApyh9wAR'}]",5.43372200355424,974 days 10:23:07,974,4.625884286240141,5.625884286240141
1179210881865076737,2019-10-02 01:45:57+00:00,66,22,"Ever wanted to use data from OpenStreetMap?

1. Start with an easy to use web-based Overpass API

https://t.co/uU5ri37Z2Z

2. Automate with Python and overpy package

For details and examples, see Vojtěch Filipec's #PyConCZ slides

https://t.co/1eaFThaClj https://t.co/FL9Kb5M25W",False,False,https://twitter.com/python_tip/status/1179210881865076737,"[{'url': 'https://t.co/uU5ri37Z2Z', 'expanded_url': 'http://overpass-turbo.eu/', 'display_url': 'overpass-turbo.eu'}, {'url': 'https://t.co/1eaFThaClj', 'expanded_url': 'https://github.com/vojtech-filipec/PyConCZ-OSM-API/blob/master/OSM%20for%20PyConCZ%202019.pdf', 'display_url': 'github.com/vojtech-filipe…'}]","[{'url': 'https://t.co/FL9Kb5M25W', 'media_url': 'http://pbs.twimg.com/media/EF1mCwzX0AAlg3A.png', 'display_url': 'pic.twitter.com/FL9Kb5M25W'}]",4.890349128221754,970 days 04:48:36,970,4.626084798919084,5.626084798919084
1177335055628275724,2019-09-26 21:32:05+00:00,128,22,"With the #python sting replace() method, you can specify the number of occurrences to replace:
string.replace(searchString, replaceString, count)

>>> s1 = 'aaaaaaaaa'
>>> s1.replace('a', 'b')
'bbbbbbbbb'
>>> s1.replace('a', 'b', 3)
'bbbaaaaaa'",False,False,https://twitter.com/python_tip/status/1177335055628275724,[],[],5.272999558563747,965 days 00:34:44,965,4.626351169366563,5.626351169366563
1176571922387263489,2019-09-24 18:59:40+00:00,68,21,"In #python, you can use chained assignment:
>>> x = y = 42
>>> x, y
(42, 42)

However, be careful:
>>> a = b = []
>>> a.append(33)
>>> b
[33]",False,False,https://twitter.com/python_tip/status/1176571922387263489,[],[],4.882801922586371,962 days 22:02:19,962,4.626520268614989,5.626520268614989
1176232106562924552,2019-09-23 20:29:22+00:00,67,25,"30 seconds of #Python: curated collection of useful Python snippets you can understand in 30 seconds or less.
https://t.co/gDKYfNxcf5 #pythontip",False,False,https://twitter.com/python_tip/status/1176232106562924552,"[{'url': 'https://t.co/gDKYfNxcf5', 'expanded_url': 'http://bit.ly/2O4uAt5', 'display_url': 'bit.ly/2O4uAt5'}]",[],4.962844630259907,961 days 23:32:01,961,4.6265783001781715,5.6265783001781715
1174949234937745408,2019-09-20 07:31:41+00:00,78,9,"Weekend Reading: Implementing resumable exceptions 

https://t.co/vcutH6FrUk https://t.co/8cYuA3KgXV",False,False,https://twitter.com/python_tip/status/1174949234937745408,"[{'url': 'https://t.co/vcutH6FrUk', 'expanded_url': 'https://github.com/Aprillion/algebraic-effects/blob/master/python/Resumable%20Exceptions%20and%20Python.ipynb', 'display_url': 'github.com/Aprillion/alge…'}]","[{'url': 'https://t.co/8cYuA3KgXV', 'media_url': 'http://pbs.twimg.com/media/EE5B8w4VAAAUB4d.jpg', 'display_url': 'pic.twitter.com/8cYuA3KgXV'}]",4.663439094112067,958 days 10:34:20,958,4.626757682745343,5.626757682745343
1174129423148355584,2019-09-18 01:14:03+00:00,59,16,"Do you need to warn the user? 

warnings.warn('I smell something fishy! 🐟')

Do you want to suppress all 'fishy' warnings?

from warnings import catch_warnings, filterwarnings

with catch_warnings():
   filterwarnings('ignore', message='.*fishy.*')
   …

https://t.co/tJdqyhfNfV https://t.co/jBEXgGzdYa",False,False,https://twitter.com/python_tip/status/1174129423148355584,"[{'url': 'https://t.co/tJdqyhfNfV', 'expanded_url': 'https://docs.python.org/3/library/warnings.html', 'display_url': 'docs.python.org/3/library/warn…'}]","[{'url': 'https://t.co/jBEXgGzdYa', 'media_url': 'http://pbs.twimg.com/media/EEtYAseX4AEhzhD.png', 'display_url': 'pic.twitter.com/jBEXgGzdYa'}]",4.68213122712422,956 days 04:16:42,956,4.626881894061632,5.626881894061632
1173712263066243072,2019-09-16 21:36:24+00:00,70,16,"#pythontip by @mgalalen:

You can use parentheses around the multi-line data pipeline and avoid the need to add '\'s

https://t.co/DxYnmhY6KS

Examples: https://t.co/JI73cBRAWj",False,False,https://twitter.com/python_tip/status/1173712263066243072,"[{'url': 'https://t.co/DxYnmhY6KS', 'expanded_url': 'https://stackoverflow.com/a/33944618', 'display_url': 'stackoverflow.com/a/33944618'}]","[{'url': 'https://t.co/JI73cBRAWj', 'media_url': 'http://pbs.twimg.com/media/EEncpjmXYAEUvMB.png', 'display_url': 'pic.twitter.com/JI73cBRAWj'}]",4.77912349311153,955 days 00:39:03,955,4.626945453775159,5.626945453775159
1173363459196706817,2019-09-15 22:30:23+00:00,73,31,"#Numpy broadcasting can be tricky

>>> import numpy as np
>>>
>>> (np.ones((32,)) + np.ones((32,1))).shape
(32, 32)
>>> (np.ones((32,)) + np.ones((1,32))).shape
(1, 32)
>>> (np.ones((4,1,3)) + np.ones((7,1))).shape
(4, 7, 3)

Why? Read two simple rules at https://t.co/iAnh62xI1h https://t.co/iL7s9DyJHI",False,False,https://twitter.com/python_tip/status/1173363459196706817,"[{'url': 'https://t.co/iAnh62xI1h', 'expanded_url': 'https://docs.scipy.org/doc/numpy/user/basics.broadcasting.html#general-broadcasting-rules', 'display_url': 'docs.scipy.org/doc/numpy/user…'}, {'url': 'https://t.co/iL7s9DyJHI', 'expanded_url': 'https://twitter.com/fchollet/status/1173306347175075841', 'display_url': 'twitter.com/fchollet/statu…'}]",[],5.117993812416755,954 days 01:33:02,954,4.627010013744481,5.627010013744481
1171187002890489857,2019-09-09 22:21:55+00:00,109,22,"#Python3 pathlib is awesome. You can join paths by '/' operator:

data_folder = Path(""my_project/data/"")
file_to_open = data_folder/""raw_data.txt""

Moreover, you can directly get content of the file:

print(file_to_open.read_text())

https://t.co/MnvcCCtbHz",False,False,https://twitter.com/python_tip/status/1171187002890489857,"[{'url': 'https://t.co/MnvcCCtbHz', 'expanded_url': 'https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f', 'display_url': 'medium.com/@ageitgey/pyth…'}]",[],5.170483995038151,948 days 01:24:34,948,4.627419721789281,5.627419721789281
1169852731449847808,2019-09-06 06:00:00+00:00,111,21,"What day is today?
> from datetime import date
> today = https://t.co/DAMy3gbWaN()

Which day of the week/month/year is it?
> today.weekday(), https://t.co/PkzxaCSmg7, today.strftime('%j')

Finally, how many days is it till Xmas
> xmas = date(2019, 12, 25)
> (xmas - today).days",False,False,https://twitter.com/python_tip/status/1169852731449847808,"[{'url': 'https://t.co/DAMy3gbWaN', 'expanded_url': 'http://date.today', 'display_url': 'date.today'}, {'url': 'https://t.co/PkzxaCSmg7', 'expanded_url': 'http://today.day', 'display_url': 'today.day'}]",[],5.1647859739235145,944 days 09:02:39,944,4.627716033380463,5.627716033380463
1169490593468375040,2019-09-05 06:01:00+00:00,74,17,"#pythontip from @ShivamKotwalia:

Multiprocess your #pandas with #swifter and #dask
https://t.co/qXYxFcuqPK
https://t.co/lCQ1Q1XnK8

Do you have any #pythontip you want to share? Just tag @python_tip in your tweet or send it to https://t.co/mfUQ9teK5k https://t.co/YyV1Ysyfrg",False,False,https://twitter.com/python_tip/status/1169490593468375040,"[{'url': 'https://t.co/qXYxFcuqPK', 'expanded_url': 'https://twitter.com/deliprao/status/1165044020977922049', 'display_url': 'twitter.com/deliprao/statu…'}, {'url': 'https://t.co/lCQ1Q1XnK8', 'expanded_url': 'https://github.com/jmcarpenter2/swifter', 'display_url': 'github.com/jmcarpenter2/s…'}, {'url': 'https://t.co/mfUQ9teK5k', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]","[{'url': 'https://t.co/YyV1Ysyfrg', 'media_url': 'http://pbs.twimg.com/media/EDUAM7vW4AMGcs1.png', 'display_url': 'pic.twitter.com/YyV1Ysyfrg'}]",4.836281906951478,943 days 09:03:39,943,4.627793261322084,5.627793261322084
1168403179077173248,2019-09-02 06:00:00+00:00,140,20,"New in #pandas 0.25 - Groupby aggregation with relabeling

https://t.co/TVTQeinhbk https://t.co/JB9w7mEqAc",False,False,https://twitter.com/python_tip/status/1168403179077173248,"[{'url': 'https://t.co/TVTQeinhbk', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/version/0.25/whatsnew/v0.25.0.html#groupby-aggregation-with-relabeling', 'display_url': 'pandas.pydata.org/pandas-docs/ve…'}]","[{'url': 'https://t.co/JB9w7mEqAc', 'media_url': 'http://pbs.twimg.com/media/EDT5nHLXsAIGW00.jpg', 'display_url': 'pic.twitter.com/JB9w7mEqAc'}]",5.303304908059076,940 days 09:02:39,940,4.628032969950878,5.628032969950878
1166827139502616579,2019-08-28 21:37:23+00:00,138,31,"Compare lists without taking their order into account:

>>> from collections import Counter
>>> a = [1, 2, 3]
>>> b = [2, 1, 3]
>>> Counter(a) == Counter(b) 
True
>>> c = [1, 1, 2, 3]
>>> Counter(a) == Counter(c) # duplicates matter
False

#python",False,False,https://twitter.com/python_tip/status/1166827139502616579,[],[],5.44673737166631,936 days 00:40:02,936,4.628372427016588,5.628372427016588
1166460268613967872,2019-08-27 21:19:34+00:00,95,26,"Implicit string concatenation in #python is nice when you have long strings...

>>> s = ('some very very very '
... 'long long long string')
>>> s
'some very very very long long long string'

...but it can surprise you:

>>> lst = [""a"", ""b"" ""c"", ""d""]
>>> lst
['a', 'bc', 'd']",False,False,https://twitter.com/python_tip/status/1166460268613967872,[],[],5.159055299214529,935 days 00:22:13,935,4.628461040070856,5.628461040070856
1166079081424838658,2019-08-26 20:04:52+00:00,92,20,"Read all sheets in an Excel file with #pandas at once:

all_dfs = https://t.co/KBWVZaKP7L_excel('myexcel.xlsx', sheet_name= None)

# returns a collection.OrderedDict object",False,False,https://twitter.com/python_tip/status/1166079081424838658,"[{'url': 'https://t.co/KBWVZaKP7L', 'expanded_url': 'http://pd.read', 'display_url': 'pd.read'}]",[],5.030437921392435,933 days 23:07:31,933,4.628642985657749,5.628642985657749
1164416913276993536,2019-08-22 06:00:00+00:00,113,27,"Does all your Jupyter notebooks start with the same import statements?

import numpy as np
import pandas as pd
...

They do not have to thanks to `pyforest` package that  lazy-imports popular Python Data Science libraries.

https://t.co/dEOSGwyrqz https://t.co/w4eobcflfW",False,False,https://twitter.com/python_tip/status/1164416913276993536,"[{'url': 'https://t.co/dEOSGwyrqz', 'expanded_url': 'https://github.com/8080labs/pyforest', 'display_url': 'github.com/8080labs/pyfor…'}]","[{'url': 'https://t.co/w4eobcflfW', 'media_url': 'http://pbs.twimg.com/ext_tw_video_thumb/1164188088861679616/pu/img/k8iMMKvmJYFnYOLj.jpg', 'display_url': 'pic.twitter.com/w4eobcflfW'}]",5.272999558563747,929 days 09:02:39,929,4.6290266472257615,5.6290266472257615
1163329749055229952,2019-08-19 06:00:00+00:00,50,18,"Deepcopy can be extremely slow.  So much that 

pickle.loads(pickle.dumps(my_object))

is actually faster. See example from @Dementophobia https://t.co/KIQBsyyBmJ

Another option is to define your own__deepcopy__ method as shown here https://t.co/7xmevJyQ80

#deepcopy https://t.co/tIn1dKfAgV",False,False,https://twitter.com/python_tip/status/1163329749055229952,"[{'url': 'https://t.co/KIQBsyyBmJ', 'expanded_url': 'https://twitter.com/Dementophobia/status/1160532561849913346', 'display_url': 'twitter.com/Dementophobia/…'}, {'url': 'https://t.co/7xmevJyQ80', 'expanded_url': 'https://stackoverflow.com/questions/24756712/deepcopy-is-extremely-slow', 'display_url': 'stackoverflow.com/questions/2475…'}]","[{'url': 'https://t.co/tIn1dKfAgV', 'media_url': 'http://pbs.twimg.com/media/ECQyU-JWsAAfbFK.png', 'display_url': 'pic.twitter.com/tIn1dKfAgV'}]",4.653960350157523,926 days 09:02:39,926,4.629332711954145,5.629332711954145
1162485252813725697,2019-08-16 22:04:16+00:00,177,43,"print() function's sep and end arguments may come in handy:

>>> lst = [""a"", ""b"", ""c""]
>>> print(*lst)
a b c
>>> print(*lst, sep="", "")
a, b, c
>>> print(*lst, sep="", "", end=""!!!\n"")
a, b, c!!!

#python",False,False,https://twitter.com/python_tip/status/1162485252813725697,[],[],5.726847747587197,924 days 01:06:55,924,4.629545977141005,5.629545977141005
1162047046427140097,2019-08-15 17:03:00+00:00,65,14,">>> a = ""dog""
>>> b = ""dog""
>>> a is b
True
>>> c = ""d"" + ""og""
>>> a is c
True
>>> d = """".join([""d"", ""og""])
>>> a is d
False
>>> a = ""d@g""
>>> b = ""d@g""
>>> a is b
False

Read more about string interning in #python: 
https://t.co/YMVUUs6rXb",False,False,https://twitter.com/python_tip/status/1162047046427140097,"[{'url': 'https://t.co/YMVUUs6rXb', 'expanded_url': 'https://medium.com/@bdov_/https-medium-com-bdov-python-objects-part-iii-string-interning-625d3c7319de', 'display_url': 'medium.com/@bdov_/https-m…'}]",[],4.68213122712422,922 days 20:05:39,922,4.6297669374175445,5.6297669374175445
1161886780041437184,2019-08-15 06:26:09+00:00,115,24,"Worth a try:
Python Handout by  @daniarh lets you create docs with inline figures, images, videos directly from #Python scripts. No hidden state, supports any text editor. 

https://t.co/miwoWlhbqK https://t.co/guSjuA19fk",False,False,https://twitter.com/python_tip/status/1161886780041437184,"[{'url': 'https://t.co/miwoWlhbqK', 'expanded_url': 'https://github.com/danijar/handout', 'display_url': 'github.com/danijar/handout'}]","[{'url': 'https://t.co/guSjuA19fk', 'media_url': 'http://pbs.twimg.com/media/EB_ZzkbW4AEdHyV.jpg', 'display_url': 'pic.twitter.com/guSjuA19fk'}]",5.236441962829949,922 days 09:28:48,922,4.6297669374175445,5.6297669374175445
1161015163589468160,2019-08-12 20:42:40+00:00,121,30,"Skip the beginning of an iterable with itertools.dropwhile():

with open(""story.txt"") as txt:
    for L in itertools.dropwhile(lambda L: L.startswith(""#""), txt.readlines()):
        do something https://t.co/BXqcdVYdEp",False,False,https://twitter.com/python_tip/status/1161015163589468160,[],"[{'url': 'https://t.co/BXqcdVYdEp', 'media_url': 'http://pbs.twimg.com/media/EBzBGMgXsAITLnM.jpg', 'display_url': 'pic.twitter.com/BXqcdVYdEp'}]",5.356586274672012,919 days 23:45:19,919,4.6301133982702325,5.6301133982702325
1159707631075958784,2019-08-09 06:07:00+00:00,86,21,"Unlike in Haskell or R, you cannot define your own operators in Python.

However, this litter hack gets you pretty far

>>> @Infix
... def add(x,y):
...   return x+y
... 
>>> 5 |add| 3
8

https://t.co/EIw6RfhbD6 https://t.co/CLPcayvGwk",False,False,https://twitter.com/python_tip/status/1159707631075958784,"[{'url': 'https://t.co/EIw6RfhbD6', 'expanded_url': 'http://tomerfiliba.com/blog/Infix-Operators/', 'display_url': 'tomerfiliba.com/blog/Infix-Ope…'}]","[{'url': 'https://t.co/CLPcayvGwk', 'media_url': 'http://pbs.twimg.com/media/EA_91T-W4AAJtzR.png', 'display_url': 'pic.twitter.com/CLPcayvGwk'}]",5.0106352940962555,916 days 09:09:39,916,4.630478701927505,5.630478701927505
1159342978294374400,2019-08-08 05:58:00+00:00,136,38,"By default, Python enables us to add new attributes during runtime. However, if you fix the set of attributes with __slots__ magic, you can potentially save a lot of memory.

See https://t.co/2CjGqwhb6m or watch @LivePython video at  https://t.co/O4aMocIwLr https://t.co/Y26tDUXS2p",False,False,https://twitter.com/python_tip/status/1159342978294374400,"[{'url': 'https://t.co/2CjGqwhb6m', 'expanded_url': 'http://book.pythontips.com/en/latest/__slots__magic.html', 'display_url': 'book.pythontips.com/en/latest/__sl…'}, {'url': 'https://t.co/O4aMocIwLr', 'expanded_url': 'https://www.youtube.com/watch?v=8Jz8VH6Gwlg', 'display_url': 'youtube.com/watch?v=8Jz8VH…'}]","[{'url': 'https://t.co/Y26tDUXS2p', 'media_url': 'http://pbs.twimg.com/media/EA_7HRaXUAAwHUa.png', 'display_url': 'pic.twitter.com/Y26tDUXS2p'}]",5.5254529391317835,915 days 09:00:39,915,4.630604819350161,5.630604819350161
1158621725757624320,2019-08-06 06:12:00+00:00,59,15,"A nice shortcut for unpacking a tuple in Python by @IDryer:

https://t.co/TBT3qxYbvy https://t.co/IophHTz91V",False,False,https://twitter.com/python_tip/status/1158621725757624320,"[{'url': 'https://t.co/TBT3qxYbvy', 'expanded_url': 'https://twitter.com/IDryer/status/1154387819009363970', 'display_url': 'twitter.com/IDryer/status/…'}]","[{'url': 'https://t.co/IophHTz91V', 'media_url': 'http://pbs.twimg.com/media/EA_xH7cXUAEDaxh.png', 'display_url': 'pic.twitter.com/IophHTz91V'}]",4.653960350157523,913 days 09:14:39,913,4.630863791821121,5.630863791821121
1157272812412899328,2019-08-02 12:51:54+00:00,145,24,#Python tip by @RaphaelVallat: one of my favorite thing about #Pandas is combining groupby/aggregate to create a ready-to-publish table:  #Statistics https://t.co/miQA5qhCm0,False,False,https://twitter.com/python_tip/status/1157272812412899328,[],"[{'url': 'https://t.co/miQA5qhCm0', 'media_url': 'http://pbs.twimg.com/media/EA91fJ1XkAQJZCT.png', 'display_url': 'pic.twitter.com/miQA5qhCm0'}]",5.384495062789089,909 days 15:54:33,909,4.63140973759121,5.63140973759121
1156783020675915776,2019-08-01 04:25:38+00:00,92,23,"List Slicing with None as argument:  

>>> a = [0, 1, 2, 3, 4, 5] 
>>> LASTTHREE = slice(-3, None) 
>>> a[LASTTHREE] 
[3, 4, 5]  

#python",False,False,https://twitter.com/python_tip/status/1156783020675915776,[],[],5.087596335232384,908 days 07:28:17,908,4.631448992673121,5.631448992673121
1155949192243585024,2019-07-29 21:12:18+00:00,124,20,"Use pandas_profiling.ProfileReport(df) to explore your data.

#pandas #pandas-profiling https://t.co/Mu5yyiGUhK",False,False,https://twitter.com/python_tip/status/1155949192243585024,[],"[{'url': 'https://t.co/Mu5yyiGUhK', 'media_url': 'http://pbs.twimg.com/media/EArBqLAU8AA0UmF.jpg', 'display_url': 'pic.twitter.com/Mu5yyiGUhK'}]",5.220355825078325,906 days 00:14:57,906,4.63152650282474,5.63152650282474
1153943018891857920,2019-07-24 08:20:29+00:00,76,27,"#pythontip from @GullumLuvl

There is a difference between numpy and pandas in std. dev. calculation: default ddof value is 0 in np.std, but 1 in pd.Series.std.

>>> pd.Series([1,2,3]).std()
1.0
>>> np.std([1,2,3])
0.816…
>>> np.std([1,2,3], ddof=1)
1.0

Careful with your stats! https://t.co/kqLfmDBlpY",False,False,https://twitter.com/python_tip/status/1153943018891857920,[],"[{'url': 'https://t.co/kqLfmDBlpY', 'media_url': 'http://pbs.twimg.com/media/EAOg5_FX4AEe0YJ.png', 'display_url': 'pic.twitter.com/kqLfmDBlpY'}]",5.062595033026967,900 days 11:23:08,900,4.631748632871173,5.631748632871173
1153545275673153538,2019-07-23 06:00:00+00:00,121,37,"You might know that ! in #JupyterNotebook, calls a shell command.

But do you know you can insert the value of Python variable in curly braces into this command?

>>> !head -n3 {path}/{myfile}

Or collect the output from shell?

>>> first_four_lines = !head -n4 myfile

Example: https://t.co/KTOKeRPKFJ",False,False,https://twitter.com/python_tip/status/1153545275673153538,[],"[{'url': 'https://t.co/KTOKeRPKFJ', 'media_url': 'http://pbs.twimg.com/media/D_6mKZVXsAAuEa9.png', 'display_url': 'pic.twitter.com/KTOKeRPKFJ'}]",5.4510384535657,899 days 09:02:39,899,4.631783734071777,5.631783734071777
1152327599336517632,2019-07-19 21:21:23+00:00,152,23,"#pandas 0.25.0 is out. 
Try exploding the list-like columns: https://t.co/lr6WwUnBYg

#python https://t.co/GxTYc43GDP",False,False,https://twitter.com/python_tip/status/1152327599336517632,"[{'url': 'https://t.co/lr6WwUnBYg', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/version/0.25/user_guide/reshaping.html#reshaping-explode', 'display_url': 'pandas.pydata.org/pandas-docs/ve…'}]","[{'url': 'https://t.co/GxTYc43GDP', 'media_url': 'http://pbs.twimg.com/media/D_3j15eWwAIOsGI.png', 'display_url': 'pic.twitter.com/GxTYc43GDP'}]",5.402677381872279,896 days 00:24:02,896,4.63200192536091,5.63200192536091
1151963082593329161,2019-07-18 21:12:55+00:00,98,23,"Use sets for intersection of lists:
>>> a = [1,2,3,4,5,9,10,11]
>>> b = [4,5,6,7]
>>> set(a).intersection(b)
{4, 5}
#python",False,False,https://twitter.com/python_tip/status/1151963082593329161,[],[],5.123963979403259,895 days 00:15:34,895,4.631916835359813,5.631916835359813
1151584666866081792,2019-07-17 20:09:14+00:00,96,32,"#pythontip from @KarolinaBzdusek:

There are two ways to create a set from a list:
a) set([1, 2, 3, 4, 5, 6, 7, 8, 9, 0])
b) {*[1, 2, 3, 4, 5, 6, 7, 8, 9, 0]}

b) is faster, here is why
https://t.co/rVDPMpoHJD",False,False,https://twitter.com/python_tip/status/1151584666866081792,"[{'url': 'https://t.co/rVDPMpoHJD', 'expanded_url': 'https://bassi.li/blog/2019/07/15/set-vs-literal-in-python-3.html', 'display_url': 'bassi.li/blog/2019/07/1…'}]",[],5.262690188904886,893 days 23:11:53,893,4.632099028100065,5.632099028100065
1149565847054233600,2019-07-12 06:27:10+00:00,96,18,"Do you need to use passwords or other secrets in your code? 

With the `keyring` module, you can save them to your OS password store (OS X Keychain,  Windows Credential Vault, ...)

https://t.co/IQbNBXT9lO

Example: https://t.co/DtAe0olZ9a",False,False,https://twitter.com/python_tip/status/1149565847054233600,"[{'url': 'https://t.co/IQbNBXT9lO', 'expanded_url': 'https://alexwlchan.net/2016/11/you-should-use-keyring/', 'display_url': 'alexwlchan.net/2016/11/you-sh…'}]","[{'url': 'https://t.co/DtAe0olZ9a', 'media_url': 'http://pbs.twimg.com/media/D_JzF7GXsAEyzhM.png', 'display_url': 'pic.twitter.com/DtAe0olZ9a'}]",5.017279836814924,888 days 09:29:49,888,4.632239559917341,5.632239559917341
1148819134500577284,2019-07-10 05:00:00+00:00,152,31,"Is the CSV file too large to fit into memory? #pandas

1) Read only first few rows:
url = ""https://t.co/8klXo11L20""
https://t.co/KBWVZb2pZj_csv(url, nrows=10)

2) Read only selected columns
https://t.co/KBWVZb2pZj_csv(url, usecols=['name', 'sex'])

3) Process the file by chunks https://t.co/3r3TDnDMco",False,False,https://twitter.com/python_tip/status/1148819134500577284,"[{'url': 'https://t.co/8klXo11L20', 'expanded_url': 'http://bit.ly/2XCFEys', 'display_url': 'bit.ly/2XCFEys'}, {'url': 'https://t.co/KBWVZb2pZj', 'expanded_url': 'http://pd.read', 'display_url': 'pd.read'}, {'url': 'https://t.co/KBWVZb2pZj', 'expanded_url': 'http://pd.read', 'display_url': 'pd.read'}]","[{'url': 'https://t.co/3r3TDnDMco', 'media_url': 'http://pbs.twimg.com/media/D_D2q44XUAEYkDp.png', 'display_url': 'pic.twitter.com/3r3TDnDMco'}]",5.5053315359323625,886 days 08:02:39,886,4.632286832181966,5.632286832181966
1148020517523337217,2019-07-08 00:06:35+00:00,87,25,"A Visual Intro to #NumPy by @jalammar 

https://t.co/xbFmMJviKI https://t.co/b7lEvzl6Ni",False,False,https://twitter.com/python_tip/status/1148020517523337217,"[{'url': 'https://t.co/xbFmMJviKI', 'expanded_url': 'https://jalammar.github.io/visual-numpy/', 'display_url': 'jalammar.github.io/visual-numpy/'}]","[{'url': 'https://t.co/b7lEvzl6Ni', 'media_url': 'http://pbs.twimg.com/media/D-6Wkv-X4AAR_v-.jpg', 'display_url': 'pic.twitter.com/b7lEvzl6Ni'}]",5.093750200806762,884 days 03:09:14,884,4.63259245367692,5.63259245367692
1146899187176546304,2019-07-04 21:50:49+00:00,83,21,"ast.literal_eval() allows you to evaluate a string containing a #Python literal or container:

>>> import ast
>>> x = ""[1, 2, 3]""
>>> type(x)
<class 'str'>
>>> ast.literal_eval(x)
[1, 2, 3]
>>> type(ast.literal_eval(x))
<class 'list'>",False,False,https://twitter.com/python_tip/status/1146899187176546304,[],[],4.990432586778736,881 days 00:53:28,881,4.632649833015681,5.632649833015681
1144477023038914561,2019-06-28 05:26:00+00:00,88,12,"The itertools.cycle creates an iterator that will cycle through a series of values infinitely:

>>> from itertools import cycle
>>> alternating_ones = cycle([1, -1])
>>> next(alternating_ones)
1
>>> next(alternating_ones)
-1
>>> next(alternating_ones)
1
...

#itertools",False,False,https://twitter.com/python_tip/status/1144477023038914561,[],[],4.8283137373023015,874 days 08:28:39,874,4.632575560105675,5.632575560105675
1144110860039852033,2019-06-27 05:11:00+00:00,133,40,"Recognize and manipulate faces from Python with ""the world's simplest face recognition library"" face_recognition

https://t.co/zE0Bg7KMR4 https://t.co/FrhKM0xkHR",False,False,https://twitter.com/python_tip/status/1144110860039852033,"[{'url': 'https://t.co/zE0Bg7KMR4', 'expanded_url': 'https://github.com/ageitgey/face_recognition', 'display_url': 'github.com/ageitgey/face_…'}]","[{'url': 'https://t.co/FrhKM0xkHR', 'media_url': 'http://pbs.twimg.com/media/D96_4irX4AA4xmo.png', 'display_url': 'pic.twitter.com/FrhKM0xkHR'}]",5.537334267018537,873 days 08:13:39,873,4.632431009972076,5.632431009972076
1143754763449749505,2019-06-26 05:36:00+00:00,85,13,"#pythontip from @eocampo1986:

>>> value = 1234567890.88
>>> print(""{:,}"".format(value))
1,234,567,890.88

Do you have any #pythontip to share? Just mention @python_tip in your tweet or send it to https://t.co/mfUQ9twkWS",False,False,https://twitter.com/python_tip/status/1143754763449749505,"[{'url': 'https://t.co/mfUQ9twkWS', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]",[],4.8283137373023015,872 days 08:38:39,872,4.632574439059429,5.632574439059429
1143079911990681600,2019-06-24 08:54:23+00:00,92,23,"Six ways to debug your Python code from @stribny:

https://t.co/pp6Fbx0gib

#fstrings #PySnooper #logging #breakpoint #VSCode #stackprinter https://t.co/pz9drE45by",False,False,https://twitter.com/python_tip/status/1143079911990681600,"[{'url': 'https://t.co/pp6Fbx0gib', 'expanded_url': 'https://stribny.name/blog/2019/06/debugging-python-programs', 'display_url': 'stribny.name/blog/2019/06/d…'}]","[{'url': 'https://t.co/pz9drE45by', 'media_url': 'http://pbs.twimg.com/media/D90ImBlW4AA1_Vr.png', 'display_url': 'pic.twitter.com/pz9drE45by'}]",5.087596335232384,870 days 11:57:02,870,4.6327126565769525,5.6327126565769525
1142088088153403398,2019-06-21 15:13:13+00:00,67,14,"pyjokes: jokes as a service. Command line tool or #python api. Enjoy!

https://t.co/VyCoAj4pPq
#tgif https://t.co/B7AFYx1koB",False,False,https://twitter.com/python_tip/status/1142088088153403398,"[{'url': 'https://t.co/VyCoAj4pPq', 'expanded_url': 'https://pyjok.es/', 'display_url': 'pyjok.es'}]","[{'url': 'https://t.co/B7AFYx1koB', 'media_url': 'http://pbs.twimg.com/media/D9mDCFQWwAAyWob.png', 'display_url': 'pic.twitter.com/B7AFYx1koB'}]",4.700480365792417,867 days 18:15:52,867,4.632682964981807,5.632682964981807
1139412149011435521,2019-06-14 06:00:00+00:00,66,17,Use `pip search <your_keyword>` to search PyPI for all packages with <your_keyword> in the short description.,False,False,https://twitter.com/python_tip/status/1139412149011435521,[],[],4.770684624465665,860 days 09:02:39,860,4.632523293607407,5.632523293607407
1137962597423013888,2019-06-10 06:00:00+00:00,320,93,"Adding __call__ method makes an object callable.

class add_n:
    def __init__(self, n):
        self.n = n
    
    def __call__(self, x):
        return x + self.n

>>> add3 = add_n(n=3)
>>> add3(9)
12

This can be really useful for decorators:
https://t.co/dsfsdN6um2 https://t.co/rxpezDXkFV",False,False,https://twitter.com/python_tip/status/1137962597423013888,"[{'url': 'https://t.co/dsfsdN6um2', 'expanded_url': 'https://gist.github.com/simecek/8a3f579037dc31d9e91c5043f91e4509', 'display_url': 'gist.github.com/simecek/8a3f57…'}]","[{'url': 'https://t.co/rxpezDXkFV', 'media_url': 'http://pbs.twimg.com/media/D8mb9TfW4AUyATM.jpg', 'display_url': 'pic.twitter.com/rxpezDXkFV'}]",6.396929655216146,856 days 09:02:39,856,4.63237044415675,5.63237044415675
1137260736093282304,2019-06-08 07:31:03+00:00,97,33,"The %pastebin #Jupyter notebook magic uploads code to dpaste’s paste bin and returns the url

%pastebin 1-7
%pastebin -d ""my file"" https://t.co/6bNG4wpw2r https://t.co/DyrsdB6GGl",False,False,https://twitter.com/python_tip/status/1137260736093282304,"[{'url': 'https://t.co/6bNG4wpw2r', 'expanded_url': 'http://file.py', 'display_url': 'file.py'}]","[{'url': 'https://t.co/DyrsdB6GGl', 'media_url': 'http://pbs.twimg.com/media/D8hcmYgXoAAWqDz.png', 'display_url': 'pic.twitter.com/DyrsdB6GGl'}]",5.2832037287379885,854 days 10:33:42,854,4.632276105125408,5.632276105125408
1135999713625411585,2019-06-04 20:00:12+00:00,49,22,"Panel: build interactive dashboards within #Jupyter notebook, deploy them on #bokeh server 
…can’t wait to try it! 🤩
https://t.co/VKkIZfyegB
https://t.co/4hrMuIGwDB
#python",False,False,https://twitter.com/python_tip/status/1135999713625411585,"[{'url': 'https://t.co/VKkIZfyegB', 'expanded_url': 'https://medium.com/@philipp.jfr/panel-announcement-2107c2b15f52', 'display_url': 'medium.com/@philipp.jfr/p…'}, {'url': 'https://t.co/4hrMuIGwDB', 'expanded_url': 'https://panel.pyviz.org/index.html', 'display_url': 'panel.pyviz.org/index.html'}]",[],4.7535901911063645,850 days 23:02:51,850,4.631878782818523,5.631878782818523
1133613943178420224,2019-05-29 06:00:00+00:00,121,37,"*args and **kwargs in Python:

>>> def f(*args, **kwargs):
    print(f""args: {args}, kwargs: {kwargs}"")

>>> f(1)
args: (1,), kwargs: {}
>>> f(1, 2, a=3, d=4)
args: (1, 2), kwargs: {'a': 3, 'd': 4}

https://t.co/B4zNB1re7W",False,False,https://twitter.com/python_tip/status/1133613943178420224,"[{'url': 'https://t.co/B4zNB1re7W', 'expanded_url': 'https://pythontips.com/2013/08/04/args-and-kwargs-in-python-explained/', 'display_url': 'pythontips.com/2013/08/04/arg…'}]",[],5.4510384535657,844 days 09:02:39,844,4.631435332081169,5.631435332081169
1132889167304597504,2019-05-27 06:00:00+00:00,87,20,"In #numpy index,  ""..."" stands for  ""as many : as needed"".

Example:
>>> a = np.array([[[1,2,3],[4,5,6]],[[7,8,9],[10,11,12]]])
>>> a.shape
(2,2,3)

* a[..., 1] is equivalent to a[:, :, 1]
* a[1, ...] is equivalent to a[1, :, :], or a[1]
* a[0, ..., 0] is equivalent to a[0, :, 0] https://t.co/FEgrlYXtLH",False,False,https://twitter.com/python_tip/status/1132889167304597504,[],"[{'url': 'https://t.co/FEgrlYXtLH', 'media_url': 'http://pbs.twimg.com/media/D7hLKXKXYAEl07p.png', 'display_url': 'pic.twitter.com/FEgrlYXtLH'}]",4.997212273764115,842 days 09:02:39,842,4.631440367643288,5.631440367643288
1132267097277566977,2019-05-25 12:48:07+00:00,53,17,Python libraries worth learning by @treyhunner https://t.co/SHVDZzGyvK,False,False,https://twitter.com/python_tip/status/1132267097277566977,"[{'url': 'https://t.co/SHVDZzGyvK', 'expanded_url': 'https://treyhunner.com/2019/05/python-builtins-worth-learning/?fbclid=IwAR085UJPmsWnReQfPr5lb5dG4-CDDQvm_I1cK1t1zQeIL6nxy9Z4_n460q4', 'display_url': 'treyhunner.com/2019/05/python…'}]",[],4.653960350157523,840 days 15:50:46,840,4.631253483030438,5.631253483030438
1131672706213130240,2019-05-23 21:26:13+00:00,95,11,"list_name.count() returns the number of times a given object occurs in list

>>> lst = ['a', 'a', 'b', 'b', 'c', 'b', 'e']
>>> lst.count('b')
3

#python",False,False,https://twitter.com/python_tip/status/1131672706213130240,[],[],4.859812404361672,839 days 00:28:52,839,4.63133725031053,5.63133725031053
1131217626770882560,2019-05-22 15:17:53+00:00,107,21,"Style #pandas output in  #jupyter notebooks:
https://t.co/M7hh27SB3H
https://t.co/PgKnnxsa2i https://t.co/uZa9heXeeT",False,False,https://twitter.com/python_tip/status/1131217626770882560,"[{'url': 'https://t.co/M7hh27SB3H', 'expanded_url': 'https://pbpython.com/styling-pandas.html', 'display_url': 'pbpython.com/styling-pandas…'}, {'url': 'https://t.co/PgKnnxsa2i', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/stable/user_guide/style.html', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}]","[{'url': 'https://t.co/uZa9heXeeT', 'media_url': 'http://pbs.twimg.com/media/D7LkS1AX4AErNLS.png', 'display_url': 'pic.twitter.com/uZa9heXeeT'}]",5.14166355650266,837 days 18:20:32,837,4.630946169157199,5.630946169157199
1130591723980316673,2019-05-20 21:50:47+00:00,78,19,"Else Clauses on Loop Statements

>>> x = [1,2]
>>> while x:
...     print(""Then"")
...     x.pop()
... else:
...     print(""Else"")
... 
Then
2
Then
1
Else

#python",False,False,https://twitter.com/python_tip/status/1130591723980316673,[],[],4.912654885736052,836 days 00:53:26,836,4.630836386738967,5.630836386738967
1126967452859019264,2019-05-10 21:49:13+00:00,127,27,"Slice assignment:
>>> a = list(range(5))
>>> a
[0, 1, 2, 3, 4]
>>> a[1:-1] = []
>>> a
[0, 4]

#python",False,False,https://twitter.com/python_tip/status/1126967452859019264,[],[],5.342334251964811,826 days 00:51:52,826,4.629525688872582,5.629525688872582
1126588889060319234,2019-05-09 20:44:56+00:00,106,21,"Print list as separate elements in #python3  
 >>> L = ['print', 'is', 'fun'] 
 >>> print(*L)  
print is fun  
>>> print(*L, sep=',')  
print,is,fun",False,False,https://twitter.com/python_tip/status/1126588889060319234,[],[],5.135798437050262,824 days 23:47:35,824,4.6292147934905366,5.6292147934905366
1126235819109429248,2019-05-08 21:21:58+00:00,110,21,"Sort list of strings ignoring the case:
>>> lst = ['bob', 'Mark', 'david', 'Peter']
>>> sorted(lst, key=str.lower)
['bob', 'david', 'Mark', 'Peter']

Compare:
>>> sorted(lst)
['Mark', 'Peter', 'bob', 'david']

#python",False,False,https://twitter.com/python_tip/status/1126235819109429248,[],[],5.159055299214529,824 days 00:24:37,824,4.6292147934905366,5.6292147934905366
1123829473512759296,2019-05-02 06:00:00+00:00,80,21,"Check out `blist`, a drop-in replacement for the Python list, that provides a better performance when modifying large lists:

https://t.co/A2KH3nCZnY https://t.co/ci27jOsjPQ",False,False,https://twitter.com/python_tip/status/1123829473512759296,"[{'url': 'https://t.co/A2KH3nCZnY', 'expanded_url': 'https://pypi.org/project/blist/', 'display_url': 'pypi.org/project/blist/'}]","[{'url': 'https://t.co/ci27jOsjPQ', 'media_url': 'http://pbs.twimg.com/media/D5gkacNXoAAq6ar.jpg', 'display_url': 'pic.twitter.com/ci27jOsjPQ'}]",4.969813299576001,817 days 09:02:39,817,4.628194174765462,5.628194174765462
1123464314579329024,2019-05-01 05:49:00+00:00,157,40,"When developing your script, try

python -i your_script.py

Python will run your script but then stays in the interpreter, getting you a chance to inspect if anything goes wrong.

https://t.co/uCgC4yg5K8",False,False,https://twitter.com/python_tip/status/1123464314579329024,"[{'url': 'https://t.co/uCgC4yg5K8', 'expanded_url': 'http://www.bnikolic.co.uk/blog/python-running-cline.html', 'display_url': 'bnikolic.co.uk/blog/python-ru…'}]",[],5.627621113690637,816 days 08:51:39,816,4.628206652701124,5.628206652701124
1121722631231815683,2019-04-26 10:28:10+00:00,251,40,">>> df.isnull().mean()*100

Find percentage of missing values in each column of a #pandas dataframe. https://t.co/08RTREuusi",False,False,https://twitter.com/python_tip/status/1121722631231815683,[],"[{'url': 'https://t.co/08RTREuusi', 'media_url': 'http://pbs.twimg.com/media/D5EouFWWAAAES6G.png', 'display_url': 'pic.twitter.com/08RTREuusi'}]",5.918893854273146,811 days 13:30:49,811,4.626970566104655,5.626970566104655
1121499642011758593,2019-04-25 19:42:05+00:00,124,28,"use all() to check if all elements match a condition:

>>> items = [[1, 2, 0], [1, 2, 0], [1, 2, 0]]
>>> all(item[2] == 0 for item in items)
True

#python",False,False,https://twitter.com/python_tip/status/1121499642011758593,[],[],5.342334251964811,810 days 22:44:44,810,4.626959957759091,5.626959957759091
1121020021357076482,2019-04-24 11:56:15+00:00,93,24,"Compare two dictionaries:

>>> a = {'x' : 0, 'y': 1, 'z' : 3}
>>> b = {'x' : 0, 'y': 1, 'z' : 2, 'q' : 4}
>>> a.items() & b.items()
{('y', 1), ('x', 0)}
>>> a.items() ^ b.items()
{('z', 3), ('q', 4), ('z', 2)}
>>> a.items() - b.items()
{('z', 3)}

https://t.co/ZlqurKbIxr

#python",False,False,https://twitter.com/python_tip/status/1121020021357076482,"[{'url': 'https://t.co/ZlqurKbIxr', 'expanded_url': 'https://chrisalbon.com/python/basics/compare_two_dictionaries/', 'display_url': 'chrisalbon.com/python/basics/…'}]",[],5.111987788356544,809 days 14:58:54,809,4.626735129666788,5.626735129666788
1118998136922439683,2019-04-18 22:02:00+00:00,73,23,"Beginner’s guide to parallel programming: Threads and processes in Python

https://t.co/dB264EtxJz

#GIL #Python",False,False,https://twitter.com/python_tip/status/1118998136922439683,"[{'url': 'https://t.co/dB264EtxJz', 'expanded_url': 'https://medium.com/@bfortuner/python-multithreading-vs-multiprocessing-73072ce5600b', 'display_url': 'medium.com/@bfortuner/pyt…'}]",[],4.962844630259907,804 days 01:04:39,804,4.625320117441131,5.625320117441131
1118636503238754304,2019-04-17 22:05:00+00:00,63,18,"How to get a column index from a column name? 

Thanks @Smit65176116 for this tip. #pandas #DataFrame https://t.co/2u7TwdKidk",False,False,https://twitter.com/python_tip/status/1118636503238754304,[],"[{'url': 'https://t.co/2u7TwdKidk', 'media_url': 'http://pbs.twimg.com/media/D4EN5YoW0AAKap8.png', 'display_url': 'pic.twitter.com/2u7TwdKidk'}]",4.770684624465665,803 days 01:07:39,803,4.625279658068455,5.625279658068455
1115630193702395904,2019-04-09 14:59:00+00:00,90,17,"Generator expressions can be chained together into pipelines:
>>> a  = range(9)
>>> b = (i + i for i in a)
>>> c = (i * i for i in b)
>>> d = (i - 5 for i in c)
>>> list(d)
[-5, -1, 11, 31, 59, 95, 139, 191, 251]

For more examples see @dabeaz's  tutorial:
https://t.co/4iS9JdwQUu",False,False,https://twitter.com/python_tip/status/1115630193702395904,"[{'url': 'https://t.co/4iS9JdwQUu', 'expanded_url': 'https://github.com/dabeaz/generators', 'display_url': 'github.com/dabeaz/generat…'}]",[],4.955827057601261,794 days 18:01:39,794,4.622958828840668,5.622958828840668
1113924462016061440,2019-04-04 22:01:02+00:00,79,16,"The line

if __name__ == ""__main__ ""

is one of those things you often see in Python scripts. What is it and how to use it? 

https://t.co/DardXNz15C https://t.co/oV2cpN6rbu",False,False,https://twitter.com/python_tip/status/1113924462016061440,"[{'url': 'https://t.co/DardXNz15C', 'expanded_url': 'https://towardsdatascience.com/learn-enough-python-to-be-useful-part-2-34f0e9e3fc9d', 'display_url': 'towardsdatascience.com/learn-enough-p…'}]","[{'url': 'https://t.co/oV2cpN6rbu', 'media_url': 'http://pbs.twimg.com/media/D25vfTYX4AAQIjX.png', 'display_url': 'pic.twitter.com/oV2cpN6rbu'}]",4.852030263919617,790 days 01:03:41,790,4.621467815995039,5.621467815995039
1111349676106833920,2019-03-28 19:29:45+00:00,128,40,"Use pandas.ExcelFile() to read complex #Excel files.

xlfile = pd.ExcelFile(filename)
df = xlfile.parse(xlfile.sheet_names[1])

#pandas #python https://t.co/8hg718ULmW",False,False,https://twitter.com/python_tip/status/1111349676106833920,[],"[{'url': 'https://t.co/8hg718ULmW', 'media_url': 'http://pbs.twimg.com/media/D2xOo1pXQAgwLoB.png', 'display_url': 'pic.twitter.com/8hg718ULmW'}]",5.517452896464707,782 days 22:32:24,782,4.618875811220159,5.618875811220159
1110598681517015041,2019-03-26 17:45:34+00:00,112,27,"Create a dictionary with list comprehension:
>>> keys = ['a',  'b',  'c']
>>> values = [1,  2,  3]
>>> dict((key, val) for key, val in zip(keys, values))
{'a': 1, 'b': 2, 'c': 3}

#python",False,False,https://twitter.com/python_tip/status/1110598681517015041,[],[],5.267858159063328,780 days 20:48:13,780,4.618115212108096,5.618115212108096
1110280631802576902,2019-03-25 20:41:45+00:00,114,26,"Combine columns of #pandas #dataframe using groupby and a dictionary mapping

>>> df.groupby(mapping, axis=1).sum() https://t.co/kvfdKAvBo8",False,False,https://twitter.com/python_tip/status/1110280631802576902,[],"[{'url': 'https://t.co/kvfdKAvBo8', 'media_url': 'http://pbs.twimg.com/media/D2iCWSsWkAkASmK.png', 'display_url': 'pic.twitter.com/kvfdKAvBo8'}]",5.262690188904886,779 days 23:44:24,779,4.617503210575182,5.617503210575182
1108141347951665152,2019-03-19 23:01:00+00:00,116,27,"Sometimes, you need to save your data to a temporary file because a library or service requires a path as an input. You can use

tempfile.NamedTemporaryFile()

Examples:
https://t.co/vghW8b84u5
#pythontip #tempfile https://t.co/zvIBhNLEd3",False,False,https://twitter.com/python_tip/status/1108141347951665152,"[{'url': 'https://t.co/vghW8b84u5', 'expanded_url': 'https://stackabuse.com/the-python-tempfile-module/', 'display_url': 'stackabuse.com/the-python-tem…'}]","[{'url': 'https://t.co/zvIBhNLEd3', 'media_url': 'http://pbs.twimg.com/media/D13IqKyXgAAq6oc.png', 'display_url': 'pic.twitter.com/zvIBhNLEd3'}]",5.288267030694535,774 days 02:03:39,774,4.615473048741433,5.615473048741433
1107917164542074880,2019-03-19 08:10:10+00:00,64,19,"Are you coming to Python from Java and miss abstract classes and interfaces?

Check Python built-in #abc library
https://t.co/9jeic1BofA

And if you want more informative error messages and checking at class creation time, try #interface library.
https://t.co/YrOuDgHRaX https://t.co/o7uZ4gWBQg",False,False,https://twitter.com/python_tip/status/1107917164542074880,"[{'url': 'https://t.co/9jeic1BofA', 'expanded_url': 'http://www.thedigitalcatonline.com/blog/2014/09/04/python-3-oop-part-6-abstract-base-classes/', 'display_url': 'thedigitalcatonline.com/blog/2014/09/0…'}, {'url': 'https://t.co/YrOuDgHRaX', 'expanded_url': 'https://interface.readthedocs.io/en/latest/abc.html', 'display_url': 'interface.readthedocs.io/en/latest/abc.…'}]","[{'url': 'https://t.co/o7uZ4gWBQg', 'media_url': 'http://pbs.twimg.com/media/D2AbHcHXQAEneV4.png', 'display_url': 'pic.twitter.com/o7uZ4gWBQg'}]",4.804021044733257,773 days 11:12:49,773,4.615273085916426,5.615273085916426
1106228439131009024,2019-03-14 16:19:47+00:00,65,13,"Select a subset of #pandas #dataframe with numerical columns:

https://t.co/aUIGkWKOMU_dtypes(include=['float', 'int'])

https://t.co/Eobmsd6STZ https://t.co/1EsBDkMs3u",False,False,https://twitter.com/python_tip/status/1106228439131009024,"[{'url': 'https://t.co/aUIGkWKOMU', 'expanded_url': 'http://df.select', 'display_url': 'df.select'}, {'url': 'https://t.co/Eobmsd6STZ', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.select_dtypes.html', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}]","[{'url': 'https://t.co/1EsBDkMs3u', 'media_url': 'http://pbs.twimg.com/media/D1oc2NZX0AAy3CX.png', 'display_url': 'pic.twitter.com/1EsBDkMs3u'}]",4.653960350157523,768 days 19:22:26,768,4.613072883797598,5.613072883797598
1105473155139846144,2019-03-12 14:18:33+00:00,141,40,"Output large numbers in a human friendly way:

>>> n = 123123123
>>> format(n, "","") 
'123,123,123'

#python",False,False,https://twitter.com/python_tip/status/1105473155139846144,[],[],5.568344503761097,766 days 17:21:12,766,4.612153391744223,5.612153391744223
1103242802861871104,2019-03-06 10:35:56+00:00,70,27,"> import pandas as pd
> False in pd.Series([True, True])
True
> 123 in pd.Series([123, 456])
False

Be aware that `in` operator looks through index, not values!

> False in pd.Series([True, True]).values
False
> 123 in pd.Series([123, 456]).values
True

https://t.co/OrCwVQ3qIl",False,False,https://twitter.com/python_tip/status/1103242802861871104,"[{'url': 'https://t.co/OrCwVQ3qIl', 'expanded_url': 'https://stackoverflow.com/questions/42684161/why-does-false-in-pandas-seriestrue-true-return-true/', 'display_url': 'stackoverflow.com/questions/4268…'}]",[],5.0238805208462765,760 days 13:38:35,760,4.609261152908806,5.609261152908806
1102343142781652993,2019-03-03 23:01:00+00:00,99,25,"Adjust a string to a fixed length with ljust, rjust and center:

text = ""I love Mondays!""
text.ljust(30)
text.rjust(30, ""*"")
https://t.co/aaMFlN8Alq(30, ""~"")

Thanks @PyPrinciples for the tip.
https://t.co/RWDBkB05pc https://t.co/vKvVS6KMNI",False,False,https://twitter.com/python_tip/status/1102343142781652993,"[{'url': 'https://t.co/aaMFlN8Alq', 'expanded_url': 'http://text.center', 'display_url': 'text.center'}, {'url': 'https://t.co/RWDBkB05pc', 'expanded_url': 'https://twitter.com/PyPrinciples/status/1089989887821000704', 'display_url': 'twitter.com/PyPrinciples/s…'}]","[{'url': 'https://t.co/vKvVS6KMNI', 'media_url': 'http://pbs.twimg.com/media/D0w_bu9WsAAYDTl.png', 'display_url': 'pic.twitter.com/vKvVS6KMNI'}]",5.1647859739235145,758 days 02:03:39,758,4.608252823662402,5.608252823662402
1101511420141846528,2019-03-01 15:56:02+00:00,122,26,Need a listing of variables you've defined in a #Jupyter notebook?  Try the %whos magic. https://t.co/yG3hXXgaY6,False,False,https://twitter.com/python_tip/status/1101511420141846528,[],"[{'url': 'https://t.co/yG3hXXgaY6', 'media_url': 'http://pbs.twimg.com/media/D0lavzoXQAENSEF.png', 'display_url': 'pic.twitter.com/yG3hXXgaY6'}]",5.303304908059076,755 days 18:58:41,755,4.606699222432354,5.606699222432354
1101218800635129864,2019-02-28 20:33:16+00:00,98,29,"With the functools.lru_cache decorator, repeated function calls become O(1) table lookups. 
You can it when you want to reuse previously computed values. 

https://t.co/rthK3jMD2l

#functools #python https://t.co/1KmOPfiiRP",False,False,https://twitter.com/python_tip/status/1101218800635129864,"[{'url': 'https://t.co/rthK3jMD2l', 'expanded_url': 'https://docs.python.org/3/library/functools.html#functools.lru_cache', 'display_url': 'docs.python.org/3/library/func…'}]","[{'url': 'https://t.co/1KmOPfiiRP', 'media_url': 'http://pbs.twimg.com/media/D0hQqPCWwAE9h1Q.png', 'display_url': 'pic.twitter.com/1KmOPfiiRP'}]",5.225746673713202,754 days 23:35:55,754,4.606170455910966,5.606170455910966
1100786859817414656,2019-02-27 15:56:53+00:00,81,28,"animatplot - #python package for making interactive animated plots. Built on top of #matplotlib. 

https://t.co/vN4ffgXZvd

https://t.co/ulivQ1dARi

#dataviz https://t.co/agCGIMGea7",False,False,https://twitter.com/python_tip/status/1100786859817414656,"[{'url': 'https://t.co/vN4ffgXZvd', 'expanded_url': 'https://github.com/t-makaro/animatplot', 'display_url': 'github.com/t-makaro/anima…'}, {'url': 'https://t.co/ulivQ1dARi', 'expanded_url': 'https://animatplot.readthedocs.io/en/stable/gallery/scatter.html', 'display_url': 'animatplot.readthedocs.io/en/stable/gall…'}]","[{'url': 'https://t.co/agCGIMGea7', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/D0bHwL_WsAAFQTR.jpg', 'display_url': 'pic.twitter.com/agCGIMGea7'}]",5.111987788356544,753 days 18:59:32,753,4.60563626559057,5.60563626559057
1100034429529993216,2019-02-25 14:07:00+00:00,59,17,"str() takes an optional encoding argument for decoding bytes:

>>> str(b'x\xc2\xb2 \xF0\x9F\x98\xB1', 'utf-8')
'x² 😱'

https://t.co/YE6E06N0xe

#python",False,False,https://twitter.com/python_tip/status/1100034429529993216,"[{'url': 'https://t.co/YE6E06N0xe', 'expanded_url': 'https://docs.python.org/3/library/stdtypes.html#bytes.decode', 'display_url': 'docs.python.org/3/library/stdt…'}]",[],4.709530201312334,751 days 17:09:39,751,4.604551675990179,5.604551675990179
1098719263785971713,2019-02-21 23:01:00+00:00,99,21,"Are you feeling stressed?
Let's get rid of it

>>> you = ""stressed""
>>> you[::-1]
""desserts""

Thanks @Saandipt for pointing us to  https://t.co/bfmnGmf1dK

Do you have any #pythontip you want to share? Just mention @python_tip in your tweet or send it to https://t.co/mfUQ9teK5k https://t.co/b1sL68RtUM",False,False,https://twitter.com/python_tip/status/1098719263785971713,"[{'url': 'https://t.co/bfmnGmf1dK', 'expanded_url': 'https://www.quora.com/What-is-the-best-trick-in-python-you-know-which-most-of-us-dont', 'display_url': 'quora.com/What-is-the-be…'}, {'url': 'https://t.co/mfUQ9teK5k', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]","[{'url': 'https://t.co/b1sL68RtUM', 'media_url': 'http://pbs.twimg.com/media/DziCxXqW0AAUmsK.png', 'display_url': 'pic.twitter.com/b1sL68RtUM'}]",5.093750200806762,748 days 02:03:39,748,4.602884499915071,5.602884499915071
1097995746312212480,2019-02-19 23:06:00+00:00,92,26,"itertools.product gives you a cartesian product of input iterables (lists, tuples...)

Example:

from itertools import product
a = [1, 2, 3]
b = [3, 4]
for x, y in product(a, b):
  print(x, y)

Output:
1 3
1 4
2 3
2 4
3 3
3 4

https://t.co/GchfgzdPH5",False,False,https://twitter.com/python_tip/status/1097995746312212480,"[{'url': 'https://t.co/GchfgzdPH5', 'expanded_url': 'https://docs.python.org/3/library/itertools.html#itertools.product', 'display_url': 'docs.python.org/3/library/iter…'}]",[],5.14166355650266,746 days 02:08:39,746,4.6019587484860045,5.6019587484860045
1097632100323377152,2019-02-18 23:01:00+00:00,82,38,"Python 3.8.0 is coming (schedule: https://t.co/r6DBtgzSgb)

The most discussed feature is PEP572 Assignment Expressions

https://t.co/ptnKgFTwXZ

Regex example:

if (match := https://t.co/83CvqptQMK(data)) is not None:
    result = https://t.co/TNk5fvphYD(1)",False,False,https://twitter.com/python_tip/status/1097632100323377152,"[{'url': 'https://t.co/r6DBtgzSgb', 'expanded_url': 'https://www.python.org/dev/peps/pep-0569/#id6', 'display_url': 'python.org/dev/peps/pep-0…'}, {'url': 'https://t.co/ptnKgFTwXZ', 'expanded_url': 'https://www.blog.pythonlibrary.org/2018/06/12/python-101-assignment-expressions/', 'display_url': 'blog.pythonlibrary.org/2018/06/12/pyt…'}, {'url': 'https://t.co/83CvqptQMK', 'expanded_url': 'http://pattern.search', 'display_url': 'pattern.search'}, {'url': 'https://t.co/TNk5fvphYD', 'expanded_url': 'http://match.group', 'display_url': 'match.group'}]",[],5.2832037287379885,745 days 02:03:39,745,4.601381168634955,5.601381168634955
1096155371436195842,2019-02-14 21:13:00+00:00,64,20,"Roses are red
Violets are blue
Python is awesome
R is great too

https://t.co/ZSu7FHJ3hO
(the code will run both in R and Python)

#PythonValentine #Rvalentine #MakeCodeNotWar #pythontip https://t.co/YZ66JR7n3k",False,False,https://twitter.com/python_tip/status/1096155371436195842,"[{'url': 'https://t.co/ZSu7FHJ3hO', 'expanded_url': 'https://gist.github.com/simecek/e6fc116d0f2ee971b980428568cdf316', 'display_url': 'gist.github.com/simecek/e6fc11…'}]","[{'url': 'https://t.co/YZ66JR7n3k', 'media_url': 'http://pbs.twimg.com/media/DzZSs41WwAMrNrI.png', 'display_url': 'pic.twitter.com/YZ66JR7n3k'}]",4.8283137373023015,741 days 00:15:39,741,4.5990184600601625,5.5990184600601625
1093646337378275329,2019-02-07 23:03:00+00:00,70,19,"Your users do not pay attention to your messages, and you want to print them on red and blinking? 

No problem! (be aware eyes might bleed after seeing this)

import termcolor
termcolor.cprint('Hey, this is important!!!', 'white', 'on_red', attrs=['blink'])

#termcolor #pythontip",False,False,https://twitter.com/python_tip/status/1093646337378275329,[],[],4.852030263919617,734 days 02:05:39,734,4.594686331542699,5.594686331542699
1092921058133491712,2019-02-05 23:01:00+00:00,121,37,"Ups & downs of capitalization:

# all letters
> ""new york"".upper()
'NEW YORK'

# 1st letter
> ""new york"".capitalize()
'New york'

# 1st letters
""new york"".title()
'New York'

# 1st letters & smart
from titlecase import titlecase
titlecase('mchenry')
'McHenry'

Test on US cities: https://t.co/3qnRRx6kDa",False,False,https://twitter.com/python_tip/status/1092921058133491712,[],"[{'url': 'https://t.co/3qnRRx6kDa', 'media_url': 'http://pbs.twimg.com/media/DyaBSZIX4AA3IYM.jpg', 'display_url': 'pic.twitter.com/3qnRRx6kDa'}]",5.4510384535657,732 days 02:03:39,732,4.593403429302867,5.593403429302867
1092186718923415552,2019-02-03 22:23:00+00:00,119,23,"We are celebrating two years of @python_tip existence today. 🎂🥳🎈🎉

I have downloaded our Twitter data and made them publicly available on Github and Kaggle:

https://t.co/5eAFiwwmRw
https://t.co/BdVFcSH25H

Thank you all for your tips, RTs and 💙! https://t.co/5Af3xi1972",False,False,https://twitter.com/python_tip/status/1092186718923415552,"[{'url': 'https://t.co/5eAFiwwmRw', 'expanded_url': 'https://www.kaggle.com/simecek/two-years-of-python-tip', 'display_url': 'kaggle.com/simecek/two-ye…'}, {'url': 'https://t.co/BdVFcSH25H', 'expanded_url': 'https://github.com/simecek/two-years-of-python_tip', 'display_url': 'github.com/simecek/two-ye…'}]","[{'url': 'https://t.co/5Af3xi1972', 'media_url': 'http://pbs.twimg.com/media/DyciutkX0AAgHbR.jpg', 'display_url': 'pic.twitter.com/5Af3xi1972'}]",5.241747015059643,730 days 01:25:39,730,4.592302228385451,5.592302228385451
1091069962570088448,2019-01-31 20:25:24+00:00,140,44,"Add leading zeros to your strings using zfill()

>>> for i in [1, 11, 222, ""aaa"", 1234]:
...     str(i).zfill(4)
... 
'0001'
'0011'
'0222'
'0aaa'
'1234'

https://t.co/IdSTEzqRYi

#python",False,False,https://twitter.com/python_tip/status/1091069962570088448,"[{'url': 'https://t.co/IdSTEzqRYi', 'expanded_url': 'https://docs.python.org/3.7/library/stdtypes.html#str.zfill', 'display_url': 'docs.python.org/3.7/library/st…'}]",[],5.60947179518496,726 days 23:28:03,726,4.5896377459803706,5.5896377459803706
1090630716545789958,2019-01-30 15:20:00+00:00,49,20,"0123456789 are not the only characters treated as digits in #Python3:

>>> s = ""௩௩௩""
>>> int(s)
333
>>> s.isdecimal()
True
>>> re.match('\d', s)
<_sre.SRE_Match object; span=(0, 1), match='௩'>

#unicode
https://t.co/wlE0gl8Nxz",False,False,https://twitter.com/python_tip/status/1090630716545789958,"[{'url': 'https://t.co/wlE0gl8Nxz', 'expanded_url': 'http://www.fileformat.info/info/unicode/category/Nd/list.htm', 'display_url': 'fileformat.info/info/unicode/c…'}]",[],4.700480365792417,725 days 18:22:39,725,4.588959881695288,5.588959881695288
1089985890032734208,2019-01-28 20:37:41+00:00,91,28,"#pandas DataFrame.merge() has an indicator argument that allows you to see the source of each row.

>>> df = df1.merge(df2, on=[‘X’], how='outer', indicator='src')

https://t.co/LkBTtBnHzc

#python https://t.co/5nCnreaIen",False,False,https://twitter.com/python_tip/status/1089985890032734208,"[{'url': 'https://t.co/LkBTtBnHzc', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.merge.html', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}]","[{'url': 'https://t.co/5nCnreaIen', 'media_url': 'http://pbs.twimg.com/media/DyBoYxkXQAotxpI.jpg', 'display_url': 'pic.twitter.com/5nCnreaIen'}]",5.170483995038151,723 days 23:40:20,723,4.587391770697131,5.587391770697131
1087484736430395392,2019-01-21 22:59:00+00:00,73,18,"#pythontip from @singhjayp

getpass.getpass() prompts a user for a password without echoing it.

Example:

import getpass                                                                       
p = getpass.getpass(""Answer to a very secret question:"") https://t.co/JctxdkaGh5",False,False,https://twitter.com/python_tip/status/1087484736430395392,"[{'url': 'https://t.co/JctxdkaGh5', 'expanded_url': 'https://twitter.com/singhjayp/status/1086345930352353281', 'display_url': 'twitter.com/singhjayp/stat…'}]",[],4.852030263919617,717 days 02:01:39,717,4.583374873631708,5.583374873631708
1086388587812319233,2019-01-18 22:23:18+00:00,104,30,"The step parameter in sequence slicing can be negative:

>>> a = [1, 2, 3, 4, 5, 6, 7, 8]
>>> a[::-1] #reverse
[8, 7, 6, 5, 4, 3, 2, 1]
>>> a[::-2]
[8, 6, 4, 2]

#python #pythontip",False,False,https://twitter.com/python_tip/status/1086388587812319233,[],[],5.272999558563747,714 days 01:25:57,714,4.581405539974115,5.581405539974115
1085987380790726658,2019-01-17 19:49:02+00:00,79,26,"Remove duplicates from a list while keeping the order:

>>> from collections import OrderedDict
>>> a = [""foo"", ""Alice"", ""bar"", ""foo"", ""Bob""]
>>> list(OrderedDict.fromkeys(a).keys())
['foo', 'Alice', 'bar', 'Bob']

#python",False,False,https://twitter.com/python_tip/status/1085987380790726658,[],[],5.062595033026967,712 days 22:51:41,712,4.579549034913051,5.579549034913051
1085641510496976906,2019-01-16 20:54:41+00:00,60,19,"Change theme of #jupyter notebook with jupyterthemes.

Command line usage:
List available themes: jt -l
Change theme: jt -t <themename>
Reset to default: jt -r

https://t.co/fMm3IalzUK https://t.co/24oCsEs4z9",False,False,https://twitter.com/python_tip/status/1085641510496976906,"[{'url': 'https://t.co/fMm3IalzUK', 'expanded_url': 'https://github.com/dunovank/jupyter-themes', 'display_url': 'github.com/dunovank/jupyt…'}]","[{'url': 'https://t.co/24oCsEs4z9', 'media_url': 'http://pbs.twimg.com/media/DxD5LJMXQAUGf9D.jpg', 'display_url': 'pic.twitter.com/24oCsEs4z9'}]",4.770684624465665,711 days 23:57:20,711,4.578811170334042,5.578811170334042
1084818415670493186,2019-01-14 14:23:59+00:00,64,13,"Dict update method can get list of pair tuples as an input:

>>> a={1:'1'}
>>> b=[(3,'3'),(4,'4')]
>>> a.update(b)
>>> a
{1: '1', 3: '3', 4: '4'}

It might be problematic if the list contains also non key/pair values. Try this:
>>> c=[(5,'5'), 6, (7,'7')]
>>> a.update(c)
>>> a",False,False,https://twitter.com/python_tip/status/1084818415670493186,[],[],4.6443908991413725,709 days 17:26:38,709,4.577125454375651,5.577125454375651
1083136585829359618,2019-01-09 23:01:00+00:00,75,31,"#pythontip from @singhjayp:

Use shlex.split() to get shell-like splitting:

>>> import re
>>> re.split('\s', ""this is 'my string'"")
['this', 'is', ""'my"", ""string'""]

>>> import shlex
>>> shlex.split(""this is 'my string'"")
['this', 'is', 'my string']

https://t.co/KlueBBcpEX",False,False,https://twitter.com/python_tip/status/1083136585829359618,"[{'url': 'https://t.co/KlueBBcpEX', 'expanded_url': 'https://twitter.com/singhjayp/status/1080901990601949184', 'display_url': 'twitter.com/singhjayp/stat…'}]",[],5.1298987149230735,705 days 02:03:39,705,4.574302778510354,5.574302778510354
1082774197611495426,2019-01-08 23:01:00+00:00,127,35,"#pythontip by @PyPrinciples:

You can use | and & for set union and intersection. 

>>> {1, 2} & {2, 3}
{2}
>>> {1, 2} | {2, 3}
{1, 2, 3}",False,False,https://twitter.com/python_tip/status/1082774197611495426,[],[],5.4510384535657,704 days 02:03:39,704,4.573538238838887,5.573538238838887
1081297369893871616,2019-01-04 21:12:37+00:00,84,18,"You can write #pandas objects directly to compressed format (gzip, bz2, zip, xz).

>>> https://t.co/yGT52QVczk_csv(""data.csv.gz"", compression='gzip’)

#Python",False,False,https://twitter.com/python_tip/status/1081297369893871616,"[{'url': 'https://t.co/yGT52QVczk', 'expanded_url': 'http://df.to', 'display_url': 'df.to'}]",[],4.9344739331306915,700 days 00:15:16,700,4.570644423376988,5.570644423376988
1080200666369441792,2019-01-01 20:34:42+00:00,143,44,"Use #holidays library to check whether a date is holiday or not.

>>> from datetime import date
>>> import holidays
>>> today = https://t.co/DAMy3gbWaN()
>>> today in holidays.Czech()
True

Happy New Year! #Python 
https://t.co/UsuKl4eGLI",False,False,https://twitter.com/python_tip/status/1080200666369441792,"[{'url': 'https://t.co/DAMy3gbWaN', 'expanded_url': 'http://date.today', 'display_url': 'date.today'}, {'url': 'https://t.co/UsuKl4eGLI', 'expanded_url': 'https://www.geeksforgeeks.org/python-holidays-library/', 'display_url': 'geeksforgeeks.org/python-holiday…'}]",[],5.62040086571715,696 days 23:37:21,696,4.567293708451691,5.567293708451691
1079698304244609024,2018-12-31 11:18:30+00:00,172,38,"#python lists have the count() method that returns the number of occurrences of an element:

>>> lst = [1, 1, 2, 3, 4, 5, 1, 3, 3, 3, 7, 9, 3]
>>> lst.count(2)
1

Most common item:
>>> max(lst, key=lst.count) 
3",False,False,https://twitter.com/python_tip/status/1079698304244609024,[],[],5.659482215759621,695 days 14:21:09,695,4.5664976335372325,5.5664976335372325
1076013147142610944,2018-12-21 07:15:00+00:00,78,25,"#pythontip from @singhjayp:

Use difflib.SequenceMatcher to compare strings.

https://t.co/JNcXHBFpBq

Example: https://t.co/ECiN4IwuZz",False,False,https://twitter.com/python_tip/status/1076013147142610944,"[{'url': 'https://t.co/JNcXHBFpBq', 'expanded_url': 'https://docs.python.org/3/library/difflib.html#sequencematcher-examples', 'display_url': 'docs.python.org/3/library/diff…'}]","[{'url': 'https://t.co/ECiN4IwuZz', 'media_url': 'http://pbs.twimg.com/media/Du0V52TWkAAuJNC.jpg', 'display_url': 'pic.twitter.com/ECiN4IwuZz'}]",5.0369526024136295,685 days 10:17:39,685,4.558140027019298,5.558140027019298
1075334585972609024,2018-12-19 10:18:38+00:00,51,16,">>> 0.1 + 0.1 + 0.1 == 0.3
False
>>> 0.1 + 0.1 + 0.1
0.30000000000000004

https://t.co/YrnNf7uk4d 
(via Facebook)",False,False,https://twitter.com/python_tip/status/1075334585972609024,"[{'url': 'https://t.co/YrnNf7uk4d', 'expanded_url': 'https://www.exploringbinary.com/why-0-point-1-does-not-exist-in-floating-point/', 'display_url': 'exploringbinary.com/why-0-point-1-…'}]",[],4.605170185988092,683 days 13:21:17,683,4.556469205064546,5.556469205064546
1074994485162057728,2018-12-18 11:47:12+00:00,53,25,"#Numpy append is slow because it creates a copy. See running times of appending 10,000 values from https://t.co/A7EdFeD8ou:
* list.append: 0.0015
* deque.append: 0.0014
* np.append: 0.05

If possible, it is better to allocate the array beforehand. Example: https://t.co/RWo0BmlJZ6",False,False,https://twitter.com/python_tip/status/1074994485162057728,"[{'url': 'https://t.co/A7EdFeD8ou', 'expanded_url': 'https://www.quora.com/Is-it-better-to-use-np-append-or-list-append', 'display_url': 'quora.com/Is-it-better-t…'}, {'url': 'https://t.co/RWo0BmlJZ6', 'expanded_url': 'https://gist.github.com/simecek/5280e202df1a2b39e412a7f438b2acc1', 'display_url': 'gist.github.com/simecek/5280e2…'}]",[],4.859812404361672,682 days 14:49:51,682,4.55562878149023,5.55562878149023
1072509266882412545,2018-12-11 15:11:50+00:00,69,24,"Use chardet library to guess encoding of your text files.

https://t.co/jf4YZYjnZl

#python https://t.co/C2DVvAQ5Q0",False,False,https://twitter.com/python_tip/status/1072509266882412545,"[{'url': 'https://t.co/jf4YZYjnZl', 'expanded_url': 'https://chardet.readthedocs.io/en/latest/usage.html', 'display_url': 'chardet.readthedocs.io/en/latest/usag…'}]","[{'url': 'https://t.co/C2DVvAQ5Q0', 'media_url': 'http://pbs.twimg.com/media/DuJRdbWWoAITs5O.jpg', 'display_url': 'pic.twitter.com/C2DVvAQ5Q0'}]",4.955827057601261,675 days 18:14:29,675,4.550100700343004,5.550100700343004
1070107248523952128,2018-12-05 00:07:04+00:00,42,23,"Package your #Python Scripts into CLI Commands:

https://t.co/KE0lBodwrb

(#pythontip from @ManuTRILH, the post written by @thegrumpyape)",False,False,https://twitter.com/python_tip/status/1070107248523952128,"[{'url': 'https://t.co/KE0lBodwrb', 'expanded_url': 'https://medium.com/ediblesec/turning-python-scripts-into-cli-commands-aecf56dfda18', 'display_url': 'medium.com/ediblesec/turn…'}]",[],4.718498871295094,669 days 03:09:43,669,4.544628698817786,5.544628698817786
1069728260077031424,2018-12-03 23:01:06+00:00,69,27,"Do you need to deprecate a function or a method? Just use this simple #decorator:

https://t.co/s4SSK006ji

(get more decorator ideas at Python Decorator Library:
https://t.co/BMLNVVh3MI) https://t.co/epFcNSeSYh",False,False,https://twitter.com/python_tip/status/1069728260077031424,"[{'url': 'https://t.co/s4SSK006ji', 'expanded_url': 'https://wiki.python.org/moin/PythonDecoratorLibrary#Generating_Deprecation_Warnings', 'display_url': 'wiki.python.org/moin/PythonDec…'}, {'url': 'https://t.co/BMLNVVh3MI', 'expanded_url': 'https://wiki.python.org/moin/PythonDecoratorLibrary', 'display_url': 'wiki.python.org/moin/PythonDec…'}]","[{'url': 'https://t.co/epFcNSeSYh', 'media_url': 'http://pbs.twimg.com/media/Dthvy-mW4AUU4Ye.jpg', 'display_url': 'pic.twitter.com/epFcNSeSYh'}]",5.017279836814924,668 days 02:03:45,668,4.543975527804146,5.543975527804146
1069367812366483457,2018-12-02 23:08:49+00:00,109,31,"#pythontip from @kenessajr:

To implement a switch-case statement in #Python, you can use a dictionary of lambda functions as in @kenessajr's example. 

https://t.co/GuHwtkEkce",False,False,https://twitter.com/python_tip/status/1069367812366483457,"[{'url': 'https://t.co/GuHwtkEkce', 'expanded_url': 'https://twitter.com/kenessajr/status/1067833853530693632', 'display_url': 'twitter.com/kenessajr/stat…'}]",[],5.313205979041787,667 days 02:11:28,667,4.542852442177268,5.542852442177268
1065380586435555329,2018-11-21 23:05:00+00:00,136,42,"#Python3 pathlib is awesome. You can join paths by '/' operator:

data_folder = Path(""my_project/data/"")
file_to_open = data_folder/""raw_data.txt""

Moreover, you can directly get a content of the file, for example,

print(file_to_open.read_text())

https://t.co/MnvcCCtbHz",False,False,https://twitter.com/python_tip/status/1065380586435555329,"[{'url': 'https://t.co/MnvcCCtbHz', 'expanded_url': 'https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f', 'display_url': 'medium.com/@ageitgey/pyth…'}]",[],5.572154032177765,656 days 02:07:39,656,4.53284408339883,5.53284408339883
1064811349719621633,2018-11-20 09:23:03+00:00,72,21,"Moving files from/to a notebook running on a remote server can be painful. But for Colab (Google's flavor of Jupyter), there is an easy way to connect your Google Drive:

from google.colab import drive
drive.mount('/content/drive')

Now you can even see it in your Files panel. https://t.co/BFEGDo9G1S",False,False,https://twitter.com/python_tip/status/1064811349719621633,[],"[{'url': 'https://t.co/BFEGDo9G1S', 'media_url': 'http://pbs.twimg.com/media/Dsb32LrWsAIBpTl.jpg', 'display_url': 'pic.twitter.com/BFEGDo9G1S'}]",4.912654885736052,654 days 12:25:42,654,4.530981907481642,5.530981907481642
1063446102572179456,2018-11-16 14:58:03+00:00,70,17,"Convert a list containing numbers into string:

lst = [1, 2, 3, 4, 'hello', 'world']
""_"".join([str(item) for item in lst])

or

""_"".join(map(str, lst))

#python",False,False,https://twitter.com/python_tip/status/1063446102572179456,[],[],4.804021044733257,650 days 18:00:42,650,4.527478029571056,5.527478029571056
1063340121410478080,2018-11-16 07:56:55+00:00,125,31,"If your data is in a dictionary, perhaps from a JSON file, then str.format_map() is your best friend

Pretty way
print('{name} works at {status} {company}'.format_map(info))

Less pretty
print(f'{info[""name""]} works at {info[""status""]} {info[""company""]}')

https://t.co/HO9ixnRsrf",False,False,https://twitter.com/python_tip/status/1063340121410478080,"[{'url': 'https://t.co/HO9ixnRsrf', 'expanded_url': 'https://twitter.com/raymondh/status/1060689339703734272', 'display_url': 'twitter.com/raymondh/statu…'}]",[],5.389071729816501,650 days 10:59:34,650,4.527478029571056,5.527478029571056
1062026642950889473,2018-11-12 16:57:37+00:00,48,15,"#python tips & tricks #TipoftheDay by @GeekyTipsTricks

Have u ever wondered which modules are imported in a Python code?

import sys
print(sys.modules)

* sys.modules is a dictionary; keys are imported module names, values are path to those modules

https://t.co/eyoRhdPJym",False,False,https://twitter.com/python_tip/status/1062026642950889473,"[{'url': 'https://t.co/eyoRhdPJym', 'expanded_url': 'https://twitter.com/GeekyTipsTricks/status/1059685421947543553', 'display_url': 'twitter.com/GeekyTipsTrick…'}]",[],4.543294782270004,646 days 20:00:16,646,4.523936815451007,5.523936815451007
1060804433548845056,2018-11-09 08:01:00+00:00,66,19,"#pythontip from @singhjayp:

Sometimes string representations from __repr__ can be too long. Using reprlib module you can help to avoid unwanted items in the log.

Example:
https://t.co/MevyvlgYBB

Send us your Python tips to https://t.co/mfUQ9teK5k
#reprlib https://t.co/PFCKK0Pusv",False,False,https://twitter.com/python_tip/status/1060804433548845056,"[{'url': 'https://t.co/MevyvlgYBB', 'expanded_url': 'https://gist.github.com/simecek/7b49fcddacf89a20f20dc9a537d5b74a', 'display_url': 'gist.github.com/simecek/7b49fc…'}, {'url': 'https://t.co/mfUQ9teK5k', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]","[{'url': 'https://t.co/PFCKK0Pusv', 'media_url': 'http://pbs.twimg.com/media/DrYjVvMU8AEem0b.jpg', 'display_url': 'pic.twitter.com/PFCKK0Pusv'}]",4.820281565605037,643 days 11:03:39,643,4.521055952554029,5.521055952554029
1058856295854264320,2018-11-03 22:59:48+00:00,136,52,"Which line of code is eating all the memory? Discover it with memory_profiler:

$ python -m memory_profiler profiling_memory.py

(Unfortunately, this is a bit hard to do in Jupyter notebook. Either use %memit or see %mprun example from https://t.co/2g58UQpuNc) https://t.co/58JwM0YWsZ",False,False,https://twitter.com/python_tip/status/1058856295854264320,"[{'url': 'https://t.co/2g58UQpuNc', 'expanded_url': 'https://jakevdp.github.io/PythonDataScienceHandbook/01.07-timing-and-profiling.html', 'display_url': 'jakevdp.github.io/PythonDataScie…'}]","[{'url': 'https://t.co/58JwM0YWsZ', 'media_url': 'http://pbs.twimg.com/media/DrHP8ebVYAAhN4t.jpg', 'display_url': 'pic.twitter.com/58JwM0YWsZ'}]",5.680172609017068,638 days 02:02:27,638,4.516196697584433,5.516196697584433
1058474244873601026,2018-11-02 21:41:40+00:00,66,16,"Use expand=True in the str.split() method if you want to split string into several columns in a #pandas dataframe.

s  = pd.Series(['aa-123', 'ff-ds-ds', 'zzz-42', 'xx’])
s.str.split(""-"", 1, expand=True) https://t.co/2s0Epdz5tB",False,False,https://twitter.com/python_tip/status/1058474244873601026,[],"[{'url': 'https://t.co/2s0Epdz5tB', 'media_url': 'http://pbs.twimg.com/media/DrB0q2NXgAUUq9w.jpg', 'display_url': 'pic.twitter.com/2s0Epdz5tB'}]",4.74493212836325,637 days 00:44:19,637,4.515216266699235,5.515216266699235
1058085817309114369,2018-11-01 19:58:11+00:00,45,17,"Use #selenium to get JavaScript rendered web content.

https://t.co/httYRoTsNH https://t.co/m8jYycoHhs",False,False,https://twitter.com/python_tip/status/1058085817309114369,"[{'url': 'https://t.co/httYRoTsNH', 'expanded_url': 'https://medium.freecodecamp.org/better-web-scraping-in-python-with-selenium-beautiful-soup-and-pandas-d6390592e251', 'display_url': 'medium.freecodecamp.org/better-web-scr…'}]","[{'url': 'https://t.co/m8jYycoHhs', 'media_url': 'http://pbs.twimg.com/media/Dq8TVurWsAAGgVf.jpg', 'display_url': 'pic.twitter.com/m8jYycoHhs'}]",4.574710978503383,635 days 23:00:50,635,4.512966824578519,5.512966824578519
1056928098246184960,2018-10-29 15:17:50+00:00,117,34,"Want to know if your string contains any of multiple string patterns? Use any(). 

>>> any(pattern in my_string for pattern in [""hello"", ""world""])

#python https://t.co/hmDohz0so1",False,False,https://twitter.com/python_tip/status/1056928098246184960,[],"[{'url': 'https://t.co/hmDohz0so1', 'media_url': 'http://pbs.twimg.com/media/Dqr2ZfMWsAABUNY.jpg', 'display_url': 'pic.twitter.com/hmDohz0so1'}]",5.393627546352361,632 days 18:20:29,632,4.510271108087756,5.510271108087756
1054991000018579456,2018-10-24 07:00:29+00:00,62,14,"Create HTML profiling report from a pandas DataFrame:

https://t.co/3qRiEdBMTo

Example:
https://t.co/ILVesgDSig

#pandasprofiling",False,False,https://twitter.com/python_tip/status/1054991000018579456,"[{'url': 'https://t.co/3qRiEdBMTo', 'expanded_url': 'https://github.com/pandas-profiling/pandas-profiling', 'display_url': 'github.com/pandas-profili…'}, {'url': 'https://t.co/ILVesgDSig', 'expanded_url': 'http://nbviewer.jupyter.org/github/JosPolfliet/pandas-profiling/blob/master/examples/meteorites.ipynb', 'display_url': 'nbviewer.jupyter.org/github/JosPolf…'}]",[],4.653960350157523,627 days 10:03:08,627,4.504962070475376,5.504962070475376
1054607253251088384,2018-10-23 05:35:37+00:00,433,160,"Finally sorted out! Which came first, the chicken or the egg?

>>> x = ['\U0001F95A',  '\U0001F414']
>>> sorted(x)
['🐔', '🥚'] 
#emoji #python3",False,False,https://twitter.com/python_tip/status/1054607253251088384,[],[],6.81783057145415,626 days 08:38:16,626,4.503948287337263,5.503948287337263
1053352156487671808,2018-10-19 18:28:19+00:00,73,20,"Try this:

>>> for i in range(20):
...     print(f'Number {i}', end='\r')

(Using carriage return in print makes the line replaceable)

#python",False,False,https://twitter.com/python_tip/status/1053352156487671808,[],[],4.897839799950911,622 days 21:30:58,622,4.499863197950134,5.499863197950134
1052916751980212225,2018-10-18 13:38:10+00:00,139,44,"Add elements of one dictionary to another with the update() method:

>>> d1 = {'a' : 1, ""b"" : 2}
>>> d2 = {'c' : 2, ""d"" : 42, ""a"" : 3}
>>> d1.update(d2)
>>> d1
{'a': 3, 'b': 2, 'c': 2, 'd': 42}

#python",False,False,https://twitter.com/python_tip/status/1052916751980212225,[],[],5.605802066295998,621 days 16:40:49,621,4.498535570499799,5.498535570499799
1052583379529596929,2018-10-17 15:33:28+00:00,59,15,"Iterate over #pandas dataframe rows with DataFrame.iterrows()

for i, row in df.iterrows():
    print(row[""title""])
    print(row[""description""]) https://t.co/7ipyCHFc4d",False,False,https://twitter.com/python_tip/status/1052583379529596929,[],"[{'url': 'https://t.co/7ipyCHFc4d', 'media_url': 'http://pbs.twimg.com/media/DpuG8oEW0AMF3DA.jpg', 'display_url': 'pic.twitter.com/7ipyCHFc4d'}]",4.653960350157523,620 days 18:36:07,620,4.497502342713091,5.497502342713091
1051920951997333504,2018-10-15 19:41:13+00:00,57,19,"Select a random sample from #pandas dataframe:

>>> import pandas as pd
>>> df = https://t.co/KBWVZaKP7L_csv(""data.csv"")
>>> df.sample(n=5)

https://t.co/0RZGHoVUHw https://t.co/7fqhb4DUxV",False,False,https://twitter.com/python_tip/status/1051920951997333504,"[{'url': 'https://t.co/KBWVZaKP7L', 'expanded_url': 'http://pd.read', 'display_url': 'pd.read'}, {'url': 'https://t.co/0RZGHoVUHw', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.sample.html', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}]","[{'url': 'https://t.co/7fqhb4DUxV', 'media_url': 'http://pbs.twimg.com/media/DpksOhpWwAggjH4.jpg', 'display_url': 'pic.twitter.com/7fqhb4DUxV'}]",4.74493212836325,618 days 22:43:52,618,4.495729203889219,5.495729203889219
1050642473486352384,2018-10-12 07:01:00+00:00,69,16,"With Jupytext plugin, you can reads and writes notebooks as plain text files.

https://t.co/Ys4IxsGhS1

#jupyter #jupytext https://t.co/pDMT3Yvlhx",False,False,https://twitter.com/python_tip/status/1050642473486352384,"[{'url': 'https://t.co/Ys4IxsGhS1', 'expanded_url': 'https://towardsdatascience.com/introducing-jupytext-9234fdff6c57', 'display_url': 'towardsdatascience.com/introducing-ju…'}]","[{'url': 'https://t.co/pDMT3Yvlhx', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/Do4WTgHU8AASXlN.jpg', 'display_url': 'pic.twitter.com/pDMT3Yvlhx'}]",4.770684624465665,615 days 10:03:39,615,4.49259576736139,5.49259576736139
1049555309885149185,2018-10-09 07:01:00+00:00,50,13,"Understanding pandas selection (.iloc vs .loc):

https://t.co/j8uRNmQWuA https://t.co/XP8kReNiRU",False,False,https://twitter.com/python_tip/status/1049555309885149185,"[{'url': 'https://t.co/j8uRNmQWuA', 'expanded_url': 'https://www.shanelynn.ie/select-pandas-dataframe-rows-and-columns-using-iloc-loc-and-ix/', 'display_url': 'shanelynn.ie/select-pandas-…'}, {'url': 'https://t.co/XP8kReNiRU', 'expanded_url': 'https://twitter.com/gauravjain49/status/1040210122864295936', 'display_url': 'twitter.com/gauravjain49/s…'}]",[],4.499809670330265,612 days 10:03:39,612,4.489433511980565,5.489433511980565
1049192922225283072,2018-10-08 07:01:00+00:00,111,28,"How to read two text files, line by line, simultaneously

with open(file1) as f1, open(file2) as f2:
  for x, y in zip(f1, f2):
     print(f""{x.strip()}\t{y.strip()}"")

https://t.co/jIOjiiJgDh",False,False,https://twitter.com/python_tip/status/1049192922225283072,"[{'url': 'https://t.co/jIOjiiJgDh', 'expanded_url': 'https://stackoverflow.com/a/11295227/7651153', 'display_url': 'stackoverflow.com/a/11295227/765…'}]",[],5.278114659230518,611 days 10:03:39,611,4.4883729380653214,5.4883729380653214
1047839410321084416,2018-10-04 13:22:37+00:00,131,34,"Pretty-print dictionaries with json.dumps

>>> import json
>>> d = {'a':'hello', 'd':1, 'b':5}
>>> print(json.dumps(d, indent=4, sort_keys=True)) https://t.co/9plSBWrkOc",False,False,https://twitter.com/python_tip/status/1047839410321084416,[],"[{'url': 'https://t.co/9plSBWrkOc', 'media_url': 'http://pbs.twimg.com/media/DoqsTn8XUAAlolZ.jpg', 'display_url': 'pic.twitter.com/9plSBWrkOc'}]",5.455321115357702,607 days 16:25:16,607,4.484097650811536,5.484097650811536
1047526246656225280,2018-10-03 16:38:13+00:00,165,39,"Use itertools.chain to iterate over items in separate lists:

>>> from itertools import chain
>>> x = [1, 2, 3]
>>> y = [5, 6, 7]
>>> z = ['a', 'b']
>>> for item in chain(x, y, z):
...     print(item)
... 
1
2
3
5
6
7
a
b

#python #itertools",False,False,https://twitter.com/python_tip/status/1047526246656225280,[],[],5.645446897643238,606 days 19:40:52,606,4.483337671472171,5.483337671472171
1046838233429135362,2018-10-01 19:04:18+00:00,63,17,"If you want a lambda to capture a value ad the definition point and keep it, include it as a default value. 
Compare:
>>> pow1 = [lambda x: x**n for n in range(5)]
and 
pow2 = [lambda x, n=n: x**n for n in range(5)]
#python https://t.co/QOEbNCIEEO",False,False,https://twitter.com/python_tip/status/1046838233429135362,[],"[{'url': 'https://t.co/QOEbNCIEEO', 'media_url': 'http://pbs.twimg.com/media/DocdrXvXkAAej42.jpg', 'display_url': 'pic.twitter.com/QOEbNCIEEO'}]",4.74493212836325,604 days 22:06:57,604,4.481495008382493,5.481495008382493
1045569043682320384,2018-09-28 07:01:00+00:00,73,10,"Apply a function to each row of a data frame with DataFrame.apply(your_function, axis=1)

Example: https://t.co/vOfaslwFY5",False,False,https://twitter.com/python_tip/status/1045569043682320384,[],"[{'url': 'https://t.co/vOfaslwFY5', 'media_url': 'http://pbs.twimg.com/media/DnvEvFPVAAYu-c8.jpg', 'display_url': 'pic.twitter.com/vOfaslwFY5'}]",4.6443908991413725,601 days 10:03:39,601,4.478552065662818,5.478552065662818
1044483137890279424,2018-09-25 07:06:00+00:00,217,73,"When web-scraping with Python, you can use cookies from your Firefox/Chrome browser:

https://t.co/IbouMJVl4u https://t.co/jNS0F45eLa",False,False,https://twitter.com/python_tip/status/1044483137890279424,"[{'url': 'https://t.co/IbouMJVl4u', 'expanded_url': 'https://bitbucket.org/richardpenman/browsercookie', 'display_url': 'bitbucket.org/richardpenman/…'}]","[{'url': 'https://t.co/jNS0F45eLa', 'media_url': 'http://pbs.twimg.com/media/DnvH_UUUUAAJdoJ.jpg', 'display_url': 'pic.twitter.com/jNS0F45eLa'}]",6.07993319509559,598 days 10:08:39,598,4.475257807372809,5.475257807372809
1044119492446621696,2018-09-24 07:01:00+00:00,114,15,"One of my favorite things in Python. Testing if a string A contains a substring B is just ""B in A"", for example,

>>> x = 'hello'
>>> y = 'll'
>>> y in x
True

#pythontip",False,False,https://twitter.com/python_tip/status/1044119492446621696,[],[],5.075173815233827,597 days 10:03:39,597,4.474152667515973,5.474152667515973
1043257783628361728,2018-09-21 21:56:53+00:00,162,57,"With 'tqdm' you can add a progress meter to any iterable object (see examples in @kondrej's short video):

https://t.co/mS1J4YIZd0

#pythontip #iterable #tqdm",False,False,https://twitter.com/python_tip/status/1043257783628361728,[],"[{'url': 'https://t.co/mS1J4YIZd0', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/DnhTHGGW4AA04DV.jpg', 'display_url': 'pic.twitter.com/mS1J4YIZd0'}]",5.8111409929767,595 days 00:59:32,595,4.471931753804455,5.471931753804455
1042396175968677888,2018-09-19 12:53:09+00:00,195,65,"Use ""\N"" escape sequence to print #unicode symbols by name.

>>> print('\N{smiling face with sunglasses}’)
😎

#python",False,False,https://twitter.com/python_tip/status/1042396175968677888,[],[],5.968707559985366,592 days 15:55:48,592,4.468905563931441,5.468905563931441
1041606233894133760,2018-09-17 08:34:12+00:00,104,30,"When using expand=True in pandas.Series.str.split(), the elements will expand out into separate columns. #python #pandas #python https://t.co/jJVLH2kX4P",False,False,https://twitter.com/python_tip/status/1041606233894133760,[],"[{'url': 'https://t.co/jJVLH2kX4P', 'media_url': 'http://pbs.twimg.com/media/DnSHVlHWsAAMy8f.jpg', 'display_url': 'pic.twitter.com/jJVLH2kX4P'}]",5.272999558563747,590 days 11:36:51,590,4.4663170934829015,5.4663170934829015
1040117874013089792,2018-09-13 06:00:00+00:00,111,26,"dict(zip(list1, list2)) creates a dictionary from two lists.

Example:
>>> keys = ['red', 'green', 'blue']
>>> values = ['#FF0000','#008000', '#0000FF']
>>> color_dictionary = dict(zip(keys, values)) https://t.co/rYjtdkGvaz",False,False,https://twitter.com/python_tip/status/1040117874013089792,[],"[{'url': 'https://t.co/rYjtdkGvaz', 'media_url': 'http://pbs.twimg.com/media/Dmtk3yQU0AEOxIe.jpg', 'display_url': 'pic.twitter.com/rYjtdkGvaz'}]",5.247024072160486,586 days 09:02:39,586,4.4617608968377125,5.4617608968377125
1039393100232314880,2018-09-11 06:00:00+00:00,77,22,"#pythontip from @singhjayp:

zip stops without warning when one of the iterables is
exhausted; consider using https://t.co/yR33kQMdOF_longest to avoid that problem

Example: https://t.co/CEvjrZgXP0",False,False,https://twitter.com/python_tip/status/1039393100232314880,"[{'url': 'https://t.co/yR33kQMdOF', 'expanded_url': 'http://itertools.zip', 'display_url': 'itertools.zip'}]","[{'url': 'https://t.co/CEvjrZgXP0', 'media_url': 'http://pbs.twimg.com/media/DmtUcYYU4AA1VGr.jpg', 'display_url': 'pic.twitter.com/CEvjrZgXP0'}]",4.969813299576001,584 days 09:02:39,584,4.45946111880831,5.45946111880831
1039030713381605376,2018-09-10 06:00:00+00:00,85,29,"Do not use mutable default arguments (lists, sets, dicts...)

Why? Consider a function:

def append_to(element, to=[]):
    to.append(element)
    return to

>>> append_to(12)
[12]
# looks ok, but...
>>> append_to(42)
[12, 42]
# what? not ok

Explanation: https://t.co/4V26oZgmw1 https://t.co/TNiTcZox71",False,False,https://twitter.com/python_tip/status/1039030713381605376,"[{'url': 'https://t.co/4V26oZgmw1', 'expanded_url': 'https://docs.python-guide.org/writing/gotchas/', 'display_url': 'docs.python-guide.org/writing/gotcha…'}]","[{'url': 'https://t.co/TNiTcZox71', 'media_url': 'http://pbs.twimg.com/media/DmtWbHEU0AAsrnl.jpg', 'display_url': 'pic.twitter.com/TNiTcZox71'}]",5.153291594497779,583 days 09:02:39,583,4.4579661605402405,5.4579661605402405
1038129674931654658,2018-09-07 18:19:36+00:00,50,12,"Let your colleagues know what you think about the data quality. Use pictures as data markers in #matplotlib plots:
https://t.co/j0ixbtiOdQ

#python #tgif https://t.co/N2zQcAjw35",False,False,https://twitter.com/python_tip/status/1038129674931654658,"[{'url': 'https://t.co/j0ixbtiOdQ', 'expanded_url': 'http://catherineh.github.io/programming/2017/10/24/emoji-data-markers-in-matplotlib', 'display_url': 'catherineh.github.io/programming/20…'}]","[{'url': 'https://t.co/N2zQcAjw35', 'media_url': 'http://pbs.twimg.com/media/DmgtbR4XcAEyDn_.jpg', 'display_url': 'pic.twitter.com/N2zQcAjw35'}]",4.465908118654584,580 days 21:22:15,580,4.454817727791786,5.454817727791786
1037353846719356928,2018-09-05 14:56:44+00:00,56,20,"Make toy dataframes and series with pandas.util.testing:
>>> import pandas.util.testing as tm
>>> tm.makeDataFrame()

#pandas #python 
https://t.co/lVGKkUrc9I https://t.co/7qr4wGAK8h",False,False,https://twitter.com/python_tip/status/1037353846719356928,"[{'url': 'https://t.co/lVGKkUrc9I', 'expanded_url': 'https://realpython.com/python-pandas-tricks/#2-make-toy-data-structures-with-pandas-testing-module', 'display_url': 'realpython.com/python-pandas-…'}]","[{'url': 'https://t.co/7qr4wGAK8h', 'media_url': 'http://pbs.twimg.com/media/DmVrkRKXoAE7QJ7.jpg', 'display_url': 'pic.twitter.com/7qr4wGAK8h'}]",4.762173934797756,578 days 17:59:23,578,4.4528179280652225,5.4528179280652225
1036935333340950529,2018-09-04 11:13:43+00:00,60,12,"Use textwrap module to format text output.
https://t.co/jiuYvHOwIj
#python https://t.co/wtbKMhsUGX",False,False,https://twitter.com/python_tip/status/1036935333340950529,"[{'url': 'https://t.co/jiuYvHOwIj', 'expanded_url': 'https://pymotw.com/3/textwrap/', 'display_url': 'pymotw.com/3/textwrap/'}]","[{'url': 'https://t.co/wtbKMhsUGX', 'media_url': 'http://pbs.twimg.com/media/DmPvJViW4AAfImM.jpg', 'display_url': 'pic.twitter.com/wtbKMhsUGX'}]",4.574710978503383,577 days 14:16:22,577,4.451296580854009,5.451296580854009
1036606549798662144,2018-09-03 13:27:15+00:00,132,36,"enumerate() takes a second parameter to change the starting count:

>>> names = [""Alice"", ""Bob"", ""Charlie""]
>>> list(enumerate(names, start=101))
[(101, 'Alice'), (102, 'Bob'), (103, 'Charlie')]

https://t.co/SECAO6sci5

#python",False,False,https://twitter.com/python_tip/status/1036606549798662144,"[{'url': 'https://t.co/SECAO6sci5', 'expanded_url': 'https://docs.python.org/3/library/functions.html#enumerate', 'display_url': 'docs.python.org/3/library/func…'}]",[],5.484796933490655,576 days 16:29:54,576,4.449770306629062,5.449770306629062
1035407587284602880,2018-08-31 06:03:00+00:00,133,52,"Every time you

>>> import your_module

Python creates .pyc file with compiled bytecode. If you want to avoid .pyc files (for example, you do not want to commit them with git), set env. variable PYTHONDONTWRITEBYTECODE or use

import sys
sys.dont_write_bytecode = True",False,False,https://twitter.com/python_tip/status/1035407587284602880,[],[],5.66988092298052,573 days 09:05:39,573,4.446550055638113,5.446550055638113
1035056020152672256,2018-08-30 06:46:00+00:00,130,46,"Speed-up your code with @lru_cache decorator:

https://t.co/Io3V6H6Dyz

Example - calculation of 35th Fibonacci number
(speedup from 4.32s to 0.000055s): https://t.co/QPonLSbWIm https://t.co/ufPkakn4Nm",False,False,https://twitter.com/python_tip/status/1035056020152672256,"[{'url': 'https://t.co/Io3V6H6Dyz', 'expanded_url': 'https://twitter.com/jakevdp/status/1027298136178319360', 'display_url': 'twitter.com/jakevdp/status…'}, {'url': 'https://t.co/QPonLSbWIm', 'expanded_url': 'https://colab.research.google.com/gist/simecek/61e46b0049a0e4be1c4dba4a3f5c34f8/lru_cache-decorator.ipynb', 'display_url': 'colab.research.google.com/gist/simecek/6…'}]","[{'url': 'https://t.co/ufPkakn4Nm', 'media_url': 'http://pbs.twimg.com/media/Dlj-_F3U8AA9KOf.jpg', 'display_url': 'pic.twitter.com/ufPkakn4Nm'}]",5.594711379601839,572 days 09:48:39,572,4.445354176064924,5.445354176064924
1034688347409510400,2018-08-29 06:25:00+00:00,50,19,"Execute Jupyter notebooks for different parameters with papermill:

https://t.co/xZkQwT4Nzv

Learn about scheduling and executing notebooks at Netflix:
https://t.co/WJfmomoZ4Z
https://t.co/J1GPZVAaKO https://t.co/q31aA71qaP",False,False,https://twitter.com/python_tip/status/1034688347409510400,"[{'url': 'https://t.co/xZkQwT4Nzv', 'expanded_url': 'https://github.com/nteract/papermill', 'display_url': 'github.com/nteract/paperm…'}, {'url': 'https://t.co/WJfmomoZ4Z', 'expanded_url': 'https://medium.com/netflix-techblog/scheduling-notebooks-348e6c14cfd6', 'display_url': 'medium.com/netflix-techbl…'}, {'url': 'https://t.co/J1GPZVAaKO', 'expanded_url': 'https://medium.com/netflix-techblog/notebook-innovation-591ee3221233', 'display_url': 'medium.com/netflix-techbl…'}]","[{'url': 'https://t.co/q31aA71qaP', 'media_url': 'http://pbs.twimg.com/media/DloqL2EUYAAW2di.jpg', 'display_url': 'pic.twitter.com/q31aA71qaP'}]",4.68213122712422,571 days 09:27:39,571,4.444154591164805,5.444154591164805
1033959293580533760,2018-08-27 06:08:00+00:00,56,19,"One of Python gotchas:

multipliers = [lambda x: i*x for i in range(3)]

for f in multipliers:
    print(f(2))

You might expect to see: 0 2 4. While you actually get: 4 4 4.
That is because all functions  refer to the same i and, at the of the cycle, i=2.
https://t.co/a8VUbdb6uB https://t.co/NGhXwe0zH9",False,False,https://twitter.com/python_tip/status/1033959293580533760,"[{'url': 'https://t.co/a8VUbdb6uB', 'expanded_url': 'https://stackoverflow.com/questions/233673/how-do-lexical-closures-work', 'display_url': 'stackoverflow.com/questions/2336…'}]","[{'url': 'https://t.co/NGhXwe0zH9', 'media_url': 'http://pbs.twimg.com/media/DlkFqfMUwAAtZuV.jpg', 'display_url': 'pic.twitter.com/NGhXwe0zH9'}]",4.736198448394496,569 days 09:10:39,569,4.4417442758287065,5.4417442758287065
1032682881011916800,2018-08-23 17:35:59+00:00,92,27,"#pythontip from @daviddelachurch
Loving #Python3.5 PEP 448 for overwriting a dictionary of default values:

>>> defaults = {""lenny"": ""white"", ""carl"": ""black""}
>>> overwrite = {""lenny"": ""yellow""}
>>> new = {**defaults, **overwrite}
>>> new
{'lenny': 'yellow', 'carl': 'black'}",False,False,https://twitter.com/python_tip/status/1032682881011916800,[],[],5.159055299214529,565 days 20:38:38,565,4.43687884786886,5.43687884786886
1032262965469294592,2018-08-22 13:47:24+00:00,59,17,"Open a website in default web browser from #python scripts:

import webbrowser
https://t.co/JZLG2SaDuI_new_tab(""https://t.co/PlI6Z7ZLYi"")

https://t.co/1xdOBsK1Xg",False,False,https://twitter.com/python_tip/status/1032262965469294592,"[{'url': 'https://t.co/JZLG2SaDuI', 'expanded_url': 'http://webbrowser.open', 'display_url': 'webbrowser.open'}, {'url': 'https://t.co/PlI6Z7ZLYi', 'expanded_url': 'https://stackoverflow.com', 'display_url': 'stackoverflow.com'}, {'url': 'https://t.co/1xdOBsK1Xg', 'expanded_url': 'https://docs.python.org/3.7/library/webbrowser.html', 'display_url': 'docs.python.org/3.7/library/we…'}]",[],4.709530201312334,564 days 16:50:03,564,4.436005439615227,5.436005439615227
1030326397665914880,2018-08-17 05:32:10+00:00,54,17,"Redirecting of stdout in #Python3:

>>> contextlib.redirect_stdout(f)

See an example from @raymondh:
https://t.co/ZtYLZcWAli

And four other ways to redirect stdout from https://t.co/tJs6sfe5GX https://t.co/chfn252bvg",False,False,https://twitter.com/python_tip/status/1030326397665914880,"[{'url': 'https://t.co/ZtYLZcWAli', 'expanded_url': 'https://twitter.com/raymondh/status/1030160198600548352', 'display_url': 'twitter.com/raymondh/statu…'}, {'url': 'https://t.co/tJs6sfe5GX', 'expanded_url': 'https://www.blog.pythonlibrary.org/2016/06/16/python-101-redirecting-stdout/', 'display_url': 'blog.pythonlibrary.org/2016/06/16/pyt…'}]","[{'url': 'https://t.co/chfn252bvg', 'media_url': 'http://pbs.twimg.com/media/Dkx0VldU4AAdxGV.jpg', 'display_url': 'pic.twitter.com/chfn252bvg'}]",4.663439094112067,559 days 08:34:49,559,4.429467192414503,5.429467192414503
1029973782146904064,2018-08-16 06:11:00+00:00,87,28,"By default, Python compare objects using their ids. Consider the following class:

class Number:
    def __init__(self, x):
        self.x = x

n1 = Number(1)
n2 = Number(1)
n1 == n2 # False 😲😲

The elegant solution to this problem is to use #dataclasses https://t.co/wxBtxfyLPR",False,False,https://twitter.com/python_tip/status/1029973782146904064,"[{'url': 'https://t.co/wxBtxfyLPR', 'expanded_url': 'http://bit.ly/2MhhMQu', 'display_url': 'bit.ly/2MhhMQu'}]",[],5.147494476813453,558 days 09:13:39,558,4.428218454547573,5.428218454547573
1029632055284363264,2018-08-15 07:33:06+00:00,326,96,Wanna know which line of your function is eating all the time? Measure it with #lprun: https://t.co/1NpmVNH6F1,False,False,https://twitter.com/python_tip/status/1029632055284363264,[],"[{'url': 'https://t.co/1NpmVNH6F1', 'media_url': 'http://pbs.twimg.com/media/Dkn7CBLU4AAN7td.jpg', 'display_url': 'pic.twitter.com/1NpmVNH6F1'}]",6.421622267806518,557 days 10:35:45,557,4.426965812344893,5.426965812344893
1029249762942377984,2018-08-14 06:14:00+00:00,53,22,">>> from contextlib import suppress
>>> with suppress(SpecificError): doing_something()

will not propagate SpecificError if it is raised while doing_something()

#pythontip #exceptions https://t.co/zMPF7gagV5",False,False,https://twitter.com/python_tip/status/1029249762942377984,[],"[{'url': 'https://t.co/zMPF7gagV5', 'media_url': 'http://pbs.twimg.com/media/DkZa60ZU4AE9oVr.jpg', 'display_url': 'pic.twitter.com/zMPF7gagV5'}]",4.787491742782046,556 days 09:16:39,556,4.4253534622549795,5.4253534622549795
1027899866976931840,2018-08-10 12:50:00+00:00,60,13,"bqplot is a library for interactive plotting in #Jupyter notebooks. Try it yourself: 
https://t.co/9RfOjnXdUP 

Histogram idea: @NicholasStrayer 

More examples at bqplot github repo: https://t.co/wn2f15vuYP https://t.co/d71fOXNMMx",False,False,https://twitter.com/python_tip/status/1027899866976931840,"[{'url': 'https://t.co/9RfOjnXdUP', 'expanded_url': 'https://mybinder.org/v2/gh/karlafej/python_tip/master?filepath=notebooks/20180810_bqplot.ipynb', 'display_url': 'mybinder.org/v2/gh/karlafej…'}, {'url': 'https://t.co/wn2f15vuYP', 'expanded_url': 'https://github.com/bloomberg/bqplot', 'display_url': 'github.com/bloomberg/bqpl…'}]","[{'url': 'https://t.co/d71fOXNMMx', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/DkPPrYiX4AArDvj.jpg', 'display_url': 'pic.twitter.com/d71fOXNMMx'}]",4.605170185988092,552 days 15:52:39,552,4.420285584928362,5.420285584928362
1027509800391856131,2018-08-09 11:00:01+00:00,107,44,"Add annotations to your #python functions to give hints about  how the function is supposed to be used. (They are not type checks and they don't alter python behavior!)

def myfun(a:int, b:int) -> int:
    return a + b https://t.co/Qs7TRN6JHX",False,False,https://twitter.com/python_tip/status/1027509800391856131,[],"[{'url': 'https://t.co/Qs7TRN6JHX', 'media_url': 'http://pbs.twimg.com/media/DkFKop1XgAAbBhx.jpg', 'display_url': 'pic.twitter.com/Qs7TRN6JHX'}]",5.480638923341991,551 days 14:02:40,551,4.419366650405288,5.419366650405288
1027176351873286144,2018-08-08 12:55:00+00:00,52,15,"Get number of Null values in a #pandas dataframe:

df.isnull().sum() (column wise)

df.isnull().sum(axis=1) (row wise)

#python https://t.co/UZhQyUjYqM",False,False,https://twitter.com/python_tip/status/1027176351873286144,[],"[{'url': 'https://t.co/UZhQyUjYqM', 'media_url': 'http://pbs.twimg.com/media/DkFDNLCXcAAyhMZ.jpg', 'display_url': 'pic.twitter.com/UZhQyUjYqM'}]",4.584967478670572,550 days 15:57:39,550,4.418085980402114,5.418085980402114
1026725629390020608,2018-08-07 07:04:00+00:00,54,15,"Use https://t.co/KBWVZb2pZj_clipboard() to copy and paste a table into dataframe.
https://t.co/xAeOLeM4IE
#pandas",False,False,https://twitter.com/python_tip/status/1026725629390020608,"[{'url': 'https://t.co/KBWVZb2pZj', 'expanded_url': 'http://pd.read', 'display_url': 'pd.read'}, {'url': 'https://t.co/xAeOLeM4IE', 'expanded_url': 'https://stackoverflow.com/questions/31610889/how-to-copy-paste-dataframe-from-stackoverflow-into-python', 'display_url': 'stackoverflow.com/questions/3161…'}]",[],4.605170185988092,549 days 10:06:39,549,4.41644201975263,5.41644201975263
1026354685891014656,2018-08-06 06:30:00+00:00,742,382,"Be careful when reversing #unicode strings. You may be surprised…

>>> s = ""Welcome in 🇬🇧”
>>> s[::-1]
'🇧🇬 ni emocleW'

(thanks @piskvor for the inspiration!) https://t.co/JKNb0MotzQ",False,False,https://twitter.com/python_tip/status/1026354685891014656,[],"[{'url': 'https://t.co/JKNb0MotzQ', 'media_url': 'http://pbs.twimg.com/media/Dj2ITdWXoAIhuml.jpg', 'display_url': 'pic.twitter.com/JKNb0MotzQ'}]",7.543802867501509,548 days 09:32:39,548,4.415512198124816,5.415512198124816
1024912431695454208,2018-08-02 06:59:00+00:00,65,24,"In #Python3, print is a function and you can override it (NOT a recommended approach, but a hack that can be useful).

Example: https://t.co/E64uSjWpnR https://t.co/QVHmcX0M93",False,False,https://twitter.com/python_tip/status/1024912431695454208,"[{'url': 'https://t.co/E64uSjWpnR', 'expanded_url': 'http://bit.ly/2Kijpri', 'display_url': 'bit.ly/2Kijpri'}]","[{'url': 'https://t.co/QVHmcX0M93', 'media_url': 'http://pbs.twimg.com/media/DjauSVRV4AE3MWC.jpg', 'display_url': 'pic.twitter.com/QVHmcX0M93'}]",4.927253685157205,544 days 10:01:39,544,4.410313859184515,5.410313859184515
1024178421696323585,2018-07-31 06:22:18+00:00,78,23,"#pythontip from @ori75660:

Check the temperature of your CPU using Python (and other cool tricks)
https://t.co/rnwhMjqGjH

>>> import psutil
>>> psutil.sensors_battery()
>>> psutil.sensors_temperatures()

Send us your own #pythontip to https://t.co/mfUQ9twkWS",False,False,https://twitter.com/python_tip/status/1024178421696323585,"[{'url': 'https://t.co/rnwhMjqGjH', 'expanded_url': 'https://dapythonista.com/2018/05/18/check-the-temperature-of-your-cpu-using-python-and-other-cool-tricks/', 'display_url': 'dapythonista.com/2018/05/18/che…'}, {'url': 'https://t.co/mfUQ9twkWS', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]",[],4.997212273764115,542 days 09:24:57,542,4.407325365708966,5.407325365708966
1023842213116035073,2018-07-30 08:06:20+00:00,185,54,"Create an animated GIF with 'imageio', Python library for reading and writing image data.

>>> from imageio import imread, mimsave
>>> images = []
>>> for f in filenames:
    images.append(imread(f))
>>> mimsave('movie.gif', images)

Source code: https://t.co/hKLOQkYrmJ https://t.co/xUoFCs77GN",False,False,https://twitter.com/python_tip/status/1023842213116035073,"[{'url': 'https://t.co/hKLOQkYrmJ', 'expanded_url': 'http://bit.ly/2vipC0z', 'display_url': 'bit.ly/2vipC0z'}]","[{'url': 'https://t.co/xUoFCs77GN', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/DjVpAegU8AEaZGi.jpg', 'display_url': 'pic.twitter.com/xUoFCs77GN'}]",5.8522024797744745,541 days 11:08:59,541,4.4060054521077445,5.4060054521077445
1022431882183667712,2018-07-26 10:42:11+00:00,75,26,"Get the directory path of a #python script from within itself:

import os
print(os.path.dirname(os.path.realpath(__file__)))

or

from pathlib import Path
print(str(Path(__file__).resolve().parent))",False,False,https://twitter.com/python_tip/status/1022431882183667712,[],[],5.0369526024136295,537 days 13:44:50,537,4.401047228509339,5.401047228509339
1021845471885549568,2018-07-24 19:52:00+00:00,54,9,"You can use #python to multiply strings or tuples:
>>> 4*'ab'
'abababab'
>>> 3*('python', 'tip')
('python', 'tip', 'python', 'tip', 'python', 'tip')
>>> 2*(3,1)
(3, 1, 3, 1)",False,False,https://twitter.com/python_tip/status/1021845471885549568,[],[],4.406719247264253,535 days 22:54:39,535,4.398358487378633,5.398358487378633
1021452996868124672,2018-07-23 17:52:26+00:00,49,21,"Check https://t.co/SQdCVjSiC4 3.0: fast rendering of big datasets, integration with #Jupyter notebooks... https://t.co/8NtBgPXoo4 #plotly #python",False,False,https://twitter.com/python_tip/status/1021452996868124672,"[{'url': 'https://t.co/SQdCVjSiC4', 'expanded_url': 'http://plotly.py', 'display_url': 'plotly.py'}, {'url': 'https://t.co/8NtBgPXoo4', 'expanded_url': 'https://medium.com/@plotlygraphs/introducing-plotly-py-3-0-0-7bb1333f69c6', 'display_url': 'medium.com/@plotlygraphs/…'}]",[],4.727387818712341,534 days 20:55:05,534,4.397007081690722,5.397007081690722
1019459417513738240,2018-07-18 05:50:40+00:00,63,28,"You most likely know about 'global' and 'local' variables but do you know 'nonlocal'?

https://t.co/rmQjUgUKfZ
https://t.co/XgaF26MKHX

#python3 #pythontip #nonlocal https://t.co/RgU1rqWy59",False,False,https://twitter.com/python_tip/status/1019459417513738240,"[{'url': 'https://t.co/rmQjUgUKfZ', 'expanded_url': 'https://stackoverflow.com/questions/1261875/python-nonlocal-statement', 'display_url': 'stackoverflow.com/questions/1261…'}, {'url': 'https://t.co/XgaF26MKHX', 'expanded_url': 'https://docs.python.org/3/tutorial/classes.html#scopes-and-namespaces-example', 'display_url': 'docs.python.org/3/tutorial/cla…'}]","[{'url': 'https://t.co/RgU1rqWy59', 'media_url': 'http://pbs.twimg.com/media/DiXYD4jVMAUVCYQ.jpg', 'display_url': 'pic.twitter.com/RgU1rqWy59'}]",4.997212273764115,529 days 08:53:19,529,4.3901781464569565,5.3901781464569565
1018905600921489408,2018-07-16 17:10:00+00:00,54,14,"To test whether some class C1 is a subclass of another class C2:

>>> issubclass(C1, C2)

Examples: https://t.co/99OgP7fan9",False,False,https://twitter.com/python_tip/status/1018905600921489408,[],"[{'url': 'https://t.co/99OgP7fan9', 'media_url': 'http://pbs.twimg.com/media/DiPhGbqUEAINOrl.jpg', 'display_url': 'pic.twitter.com/99OgP7fan9'}]",4.574710978503383,527 days 20:12:39,527,4.387412224079943,5.387412224079943
1017985580846551040,2018-07-14 04:14:10+00:00,100,31,"#pythontip from @DynamicWebPaige: if you ever want to inspect the source code for a module that you've imported, but don't want to waste time hunting around for the .py file

import inspect
import pprint

pprint.pprint(inspect.getsource( <module_name>))",False,False,https://twitter.com/python_tip/status/1017985580846551040,[],[],5.267858159063328,525 days 07:16:49,525,4.38462620284594,5.38462620284594
1017312426268639232,2018-07-12 07:39:17+00:00,49,17,"• del does not delete the object
• del just decrease the reference counter
• __del__ is an object destroyer, avoid using it

For more see @DasIstHerrKuska's #pyconcz talk: https://t.co/unjLh0j185",False,False,https://twitter.com/python_tip/status/1017312426268639232,"[{'url': 'https://t.co/unjLh0j185', 'expanded_url': 'https://youtu.be/ALDUKcg6W9o?t=23m47s', 'display_url': 'youtu.be/ALDUKcg6W9o?t=…'}]",[],4.61512051684126,523 days 10:41:56,523,4.381819818248392,5.381819818248392
1016945324005515264,2018-07-11 07:20:33+00:00,52,9,"In #Jupyter notebook, %lsmagic gives you a list of all available magics.
#pythontip",False,False,https://twitter.com/python_tip/status/1016945324005515264,[],[],4.382026634673881,522 days 10:23:12,522,4.380028736010176,5.380028736010176
1016663178816737282,2018-07-10 12:39:25+00:00,113,34,"For string concatenation, s1 += s2 + s3 is faster than s1 = s1 + s2 + s3 because s1 is not destroyed while calculating the complete string.

https://t.co/5qn3jDzSHU

#python https://t.co/dmgqkdJ8p8",False,False,https://twitter.com/python_tip/status/1016663178816737282,"[{'url': 'https://t.co/5qn3jDzSHU', 'expanded_url': 'https://www.codementor.io/satwikkansal/do-you-really-think-you-know-strings-in-python-fnxh8mtha', 'display_url': 'codementor.io/satwikkansal/d…'}]","[{'url': 'https://t.co/dmgqkdJ8p8', 'media_url': 'http://pbs.twimg.com/media/Dhvpw7XWAAAHEFr.jpg', 'display_url': 'pic.twitter.com/dmgqkdJ8p8'}]",5.375278407684165,521 days 15:42:04,521,4.378611641408596,5.378611641408596
1015127204320239616,2018-07-06 06:56:00+00:00,95,40,"How Encoding Works in Python2 vs Python3? The best explanation of encode, decode and UTF-8 I have ever seen:

https://t.co/esPYEXbHaR https://t.co/hvr6x0sMvH",False,False,https://twitter.com/python_tip/status/1015127204320239616,"[{'url': 'https://t.co/esPYEXbHaR', 'expanded_url': 'https://pybit.es/python-encodings.html', 'display_url': 'pybit.es/python-encodin…'}]","[{'url': 'https://t.co/hvr6x0sMvH', 'media_url': 'http://pbs.twimg.com/media/DhASe_cVQAARQrk.jpg', 'display_url': 'pic.twitter.com/hvr6x0sMvH'}]",5.375278407684165,517 days 09:58:39,517,4.372890642854738,5.372890642854738
1014762551857557509,2018-07-05 06:47:00+00:00,43,18,"#pythontip from @rajatktb:

Use generators when dealing with large data set in deep learning tasks. Each pass of the generator can go for an I/O call.

For example 
https://t.co/VbfmsgXl1E

Send us your tips to https://t.co/mfUQ9teK5k",False,False,https://twitter.com/python_tip/status/1014762551857557509,"[{'url': 'https://t.co/VbfmsgXl1E', 'expanded_url': 'https://stanford.edu/~shervine/blog/keras-how-to-generate-data-on-the-fly.html', 'display_url': 'stanford.edu/~shervine/blog…'}, {'url': 'https://t.co/mfUQ9teK5k', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]",[],4.584967478670572,516 days 09:49:39,516,4.371833356750439,5.371833356750439
1014388335438004224,2018-07-04 06:00:00+00:00,126,41,"zip() is its own inverse (via @jakevdp):

>>> data = [(1, 2, 3), ('a', 'b', 'c')]
>>> zipped = zip(*data)
>>> zipped
[(1, 'a'), (2, 'b'), (3, 'c')]
>>> unzipped = zip(*zipped)
>>> unzipped
[(1, 2, 3), ('a', 'b', 'c')]

#pythontip #zip",False,False,https://twitter.com/python_tip/status/1014388335438004224,[],[],5.521460917862246,515 days 09:02:39,515,4.37077218652798,5.37077218652798
1014032239061954561,2018-07-03 06:25:00+00:00,76,14,"Domino animation in 10 lines of #Python code:

https://t.co/LI2SFekFlm https://t.co/724pKDMmjg",False,False,https://twitter.com/python_tip/status/1014032239061954561,"[{'url': 'https://t.co/LI2SFekFlm', 'expanded_url': 'http://slicker.me/blender/domino.htm', 'display_url': 'slicker.me/blender/domino…'}]","[{'url': 'https://t.co/724pKDMmjg', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/DhAHAs2U8AA4x3m.jpg', 'display_url': 'pic.twitter.com/724pKDMmjg'}]",4.77912349311153,514 days 09:27:39,514,4.368932104214667,5.368932104214667
1013671361259008000,2018-07-02 06:31:00+00:00,72,16,"Get a list of keywords in #Python:

>> import keyword
>> print(keyword.kwlist)

#pythontip via https://t.co/fL1ALJPoAb",False,False,https://twitter.com/python_tip/status/1013671361259008000,"[{'url': 'https://t.co/fL1ALJPoAb', 'expanded_url': 'https://twitter.com/vboykis/status/1011414603769761792', 'display_url': 'twitter.com/vboykis/status…'}]",[],4.795790545596741,513 days 09:33:39,513,4.367083786461919,5.367083786461919
1012325041252552704,2018-06-28 13:21:12+00:00,116,62,"#Python 3.7 is released. Data classes, built-in breakpoint(), context variables and more.
https://t.co/udgh1vyXqN",False,False,https://twitter.com/python_tip/status/1012325041252552704,"[{'url': 'https://t.co/udgh1vyXqN', 'expanded_url': 'https://realpython.com/python37-new-features/', 'display_url': 'realpython.com/python37-new-f…'}]",[],5.713732805509369,509 days 16:23:51,509,4.3615825309088185,5.3615825309088185
1011981261978599426,2018-06-27 14:35:09+00:00,55,20,"Use maxsplit parameter in str.split to specify maximum number of splits to be done:
>>> s = ""aa bb cc dd""
>>> s.split(maxsplit=1)
['aa', 'bb cc dd']

#python
https://t.co/o3YxgkOwUj",False,False,https://twitter.com/python_tip/status/1011981261978599426,"[{'url': 'https://t.co/o3YxgkOwUj', 'expanded_url': 'https://docs.python.org/3/library/stdtypes.html#str.split', 'display_url': 'docs.python.org/3/library/stdt…'}]",[],4.7535901911063645,508 days 17:37:48,508,4.360490189067751,5.360490189067751
1011594171914899458,2018-06-26 12:56:59+00:00,44,16,"Empty sequence evaluates to False in #python:

>>> lst = list()
>>> if lst:
...     print(lst)
... else:
...     print(""Empty"")
...
Empty",False,False,https://twitter.com/python_tip/status/1011594171914899458,[],[],4.532599493153256,507 days 15:59:38,507,4.358603238894716,5.358603238894716
1011252841447677953,2018-06-25 14:20:40+00:00,46,15,Looking for a project template for #DataScience projects in #Python? Try #cookiecutter data science. https://t.co/f2Yf4oSbrA,False,False,https://twitter.com/python_tip/status/1011252841447677953,"[{'url': 'https://t.co/f2Yf4oSbrA', 'expanded_url': 'https://drivendata.github.io/cookiecutter-data-science/', 'display_url': 'drivendata.github.io/cookiecutter-d…'}]",[],4.5217885770490405,506 days 17:23:19,506,4.357104952519803,5.357104952519803
1010040389263245312,2018-06-22 06:02:49+00:00,64,24,"The best way to learn to code is by doing it. For a beginner it could be hard to find a project. @pybites prepared Python exercises and projects for you, check it out at https://t.co/oUKn3w62vv

Try one, join #100DaysOfCode and go with us through 
https://t.co/7evFVZC5FG",False,False,https://twitter.com/python_tip/status/1010040389263245312,"[{'url': 'https://t.co/oUKn3w62vv', 'expanded_url': 'http://CodeChalleng.es', 'display_url': 'CodeChalleng.es'}, {'url': 'https://t.co/7evFVZC5FG', 'expanded_url': 'http://talkpython.fm/100days', 'display_url': 'talkpython.fm/100days'}]",[],4.919980925828125,503 days 09:05:28,503,4.352574915389911,5.352574915389911
1009632246892937217,2018-06-21 03:01:00+00:00,43,14,"Getting the class name of an instance X:

X.__class__.__name__

or 

type(X).__name__

https://t.co/s23ZKOaorY https://t.co/pwZmtKfJbS",False,False,https://twitter.com/python_tip/status/1009632246892937217,"[{'url': 'https://t.co/s23ZKOaorY', 'expanded_url': 'https://stackoverflow.com/questions/510972/getting-the-class-name-of-an-instance-in-python', 'display_url': 'stackoverflow.com/questions/5109…'}]","[{'url': 'https://t.co/pwZmtKfJbS', 'media_url': 'http://pbs.twimg.com/media/DgLqtCbU8AANkbs.jpg', 'display_url': 'pic.twitter.com/pwZmtKfJbS'}]",4.454347296253507,502 days 06:03:39,502,4.351454795605095,5.351454795605095
1009323700116545537,2018-06-20 06:34:57+00:00,62,25,"#pythontip from @singhjayp:

Search multiple dicts using ChainMap

from collections import ChainMap

countryCapital = {'US':'Washinton', 'IN':'Delhi'}
stateCapital = {'MA':'Boston', 'KA': 'Bangalore'}
x = ChainMap(countryCapital, stateCapital)
print(x['IN'], x['MA']) https://t.co/1eTBLtzVsY",False,False,https://twitter.com/python_tip/status/1009323700116545537,[],"[{'url': 'https://t.co/1eTBLtzVsY', 'media_url': 'http://pbs.twimg.com/media/DgHV2W6U0AAEYtr.jpg', 'display_url': 'pic.twitter.com/1eTBLtzVsY'}]",4.927253685157205,501 days 09:37:36,501,4.349928131846092,5.349928131846092
1008597844662472704,2018-06-18 06:30:39+00:00,197,76,"In #Python3, the print function has options
* 'sep' to separate the arguments
* 'end' to be printed after the last argument

https://t.co/Jm8LgiGnAJ https://t.co/V56ARBc7ku",False,False,https://twitter.com/python_tip/status/1008597844662472704,"[{'url': 'https://t.co/Jm8LgiGnAJ', 'expanded_url': 'https://docs.python.org/3/library/functions.html#print', 'display_url': 'docs.python.org/3/library/func…'}]","[{'url': 'https://t.co/V56ARBc7ku', 'media_url': 'http://pbs.twimg.com/media/Df9BvDMVQAAUvDL.jpg', 'display_url': 'pic.twitter.com/V56ARBc7ku'}]",6.054439346269371,499 days 09:33:18,499,4.3464505805251825,5.3464505805251825
1007629097621737472,2018-06-15 14:21:12+00:00,48,14,"Call an external program in #python(3.5) with https://t.co/K6Gg56jD4p().
>>> import subprocess
>>> proc = https://t.co/K6Gg56jD4p([""ls"", ""-l""], stdout=subprocess.PIPE) https://t.co/GpO2WXJP3e",False,False,https://twitter.com/python_tip/status/1007629097621737472,"[{'url': 'https://t.co/K6Gg56jD4p', 'expanded_url': 'http://subprocess.run', 'display_url': 'subprocess.run'}, {'url': 'https://t.co/K6Gg56jD4p', 'expanded_url': 'http://subprocess.run', 'display_url': 'subprocess.run'}]","[{'url': 'https://t.co/GpO2WXJP3e', 'media_url': 'http://pbs.twimg.com/media/DfvRSDDW0AAmrgd.jpg', 'display_url': 'pic.twitter.com/GpO2WXJP3e'}]",4.51085950651685,496 days 17:23:51,496,4.341792046156877,5.341792046156877
1007237101199527936,2018-06-14 12:23:33+00:00,81,25,"Run a #python script and enter the interactive mode having access to everything defined in the script

python -i https://t.co/ZW80JGqOU2 https://t.co/9uuxoeARaF",False,False,https://twitter.com/python_tip/status/1007237101199527936,"[{'url': 'https://t.co/ZW80JGqOU2', 'expanded_url': 'http://foo.py', 'display_url': 'foo.py'}]","[{'url': 'https://t.co/9uuxoeARaF', 'media_url': 'http://pbs.twimg.com/media/Dfpspb8X4AAZzCD.jpg', 'display_url': 'pic.twitter.com/9uuxoeARaF'}]",5.056245805348308,495 days 15:26:12,495,4.340638039555642,5.340638039555642
1006260262117232641,2018-06-11 19:41:56+00:00,75,23,"F-strings can embed #python (3.6) expressions:

>>> r = 10
>>> f'Area of a circle with radius {r}: {math.pi*r**2}'
'Area of a circle with radius 10: 314.1592653589793’

>>> for i in range(3):
...     f'{i} box{""es""if i!=1 else """"}'
... 
'0 boxes'
'1 box'
'2 boxes'",False,False,https://twitter.com/python_tip/status/1006260262117232641,[],[],4.976733742420574,492 days 22:44:35,492,4.335490450079265,5.335490450079265
1004994185093496832,2018-06-08 07:51:00+00:00,36,15,"New to the standard library: Data Classes = mutable namedtuples with defaults

PEP557: https://t.co/WkHLCwqPJY

or watch @raymondh's #PyCon2018 talk: https://t.co/VO2rUGcZaj

#dataclass #pythontip https://t.co/4b5nYZ4hcX",False,False,https://twitter.com/python_tip/status/1004994185093496832,"[{'url': 'https://t.co/WkHLCwqPJY', 'expanded_url': 'https://www.python.org/dev/peps/pep-0557/', 'display_url': 'python.org/dev/peps/pep-0…'}, {'url': 'https://t.co/VO2rUGcZaj', 'expanded_url': 'https://www.youtube.com/watch?v=T-TwcmT6Rcw', 'display_url': 'youtube.com/watch?v=T-Twcm…'}]","[{'url': 'https://t.co/4b5nYZ4hcX', 'media_url': 'http://pbs.twimg.com/media/DfEmvqgUwAUB2P1.jpg', 'display_url': 'pic.twitter.com/4b5nYZ4hcX'}]",4.406719247264253,489 days 10:53:39,489,4.330694398253246,5.330694398253246
1004622477463412736,2018-06-07 07:13:58+00:00,58,16,"#selfpromo Jupyter notebooks from our #pyconcz workshop ""Deep Learning in Keras&TF: From Zero to Hero in 3 Hours""

https://t.co/NBtGjsmP5j

Examples: classification of Simpsons / flowers, a text generator for Obama speeches / new chapters in (Czech) Bible Kralická https://t.co/G4LyIzjbpR",False,False,https://twitter.com/python_tip/status/1004622477463412736,"[{'url': 'https://t.co/NBtGjsmP5j', 'expanded_url': 'http://bit.ly/czkeras', 'display_url': 'bit.ly/czkeras'}]","[{'url': 'https://t.co/G4LyIzjbpR', 'media_url': 'http://pbs.twimg.com/media/DfEitJNUYAAu_He.jpg', 'display_url': 'pic.twitter.com/G4LyIzjbpR'}]",4.672828834461906,488 days 10:16:37,488,4.3295041375545,5.3295041375545
1003548320890048512,2018-06-04 08:05:39+00:00,86,23,"#pythontip from @singhjayp:

How to insert an element into a sorted list and ensure the list remains sorted?

>>> import  bisect
>>> a = [1, 2, 4, 5] 
>>> bisect.insort(a, 3)
>>> print(a)
[1, 2, 3, 4, 5]",False,False,https://twitter.com/python_tip/status/1003548320890048512,[],[],5.049856007249537,485 days 11:08:18,485,4.324203323919385,5.324203323919385
1002228567059595264,2018-05-31 16:41:25+00:00,50,14,"6+1 #pythontips to Speed-up Your Calculations (by @jakevdp #PyCon2018):
• Line profiling
• NumPy vectorization
• Specialized data structures
• Cython
• Numba
• Dask

https://t.co/6DVAxxwYrS https://t.co/uY5vZdX545",False,False,https://twitter.com/python_tip/status/1002228567059595264,"[{'url': 'https://t.co/6DVAxxwYrS', 'expanded_url': 'https://speakerdeck.com/jakevdp/seven-strategies-for-optimizing-numerical-code', 'display_url': 'speakerdeck.com/jakevdp/seven-…'}]","[{'url': 'https://t.co/uY5vZdX545', 'media_url': 'http://pbs.twimg.com/media/Deihfw5X4AAnM1s.jpg', 'display_url': 'pic.twitter.com/uY5vZdX545'}]",4.532599493153256,481 days 19:44:04,481,4.318031604555817,5.318031604555817
1001809904221515776,2018-05-30 12:57:48+00:00,106,28,"Combine two lists with list comprehension:
>>> colors = ['red', 'green', 'blue']
>>> toys = ['car', 'ball', 'duck']
>>> [[color, toy] for color in colors for toy in toys] https://t.co/GrwkWrztIn",False,False,https://twitter.com/python_tip/status/1001809904221515776,[],"[{'url': 'https://t.co/GrwkWrztIn', 'media_url': 'http://pbs.twimg.com/media/Deckx6gWkAAM5it.jpg', 'display_url': 'pic.twitter.com/GrwkWrztIn'}]",5.25227342804663,480 days 16:00:27,480,4.316363803997555,5.316363803997555
1001504188910600192,2018-05-29 16:43:00+00:00,63,21,"The lambda keyword provides a shortcut for declaring small and anonymous functions.

>>> (lambda x, y: x + y)(5, 3)
8

Learn more about lambda functions from https://t.co/OlclAfqz8x

#lambda #pythontip",False,False,https://twitter.com/python_tip/status/1001504188910600192,"[{'url': 'https://t.co/OlclAfqz8x', 'expanded_url': 'https://dbader.org/blog/python-lambda-functions', 'display_url': 'dbader.org/blog/python-la…'}]",[],4.844187086458591,479 days 19:45:39,479,4.314688604225465,5.314688604225465
999902887370219521,2018-05-25 06:40:00+00:00,88,34,"Good logging practice in #Python
(why 'print' in not enough):

https://t.co/AmGPd5MAB5

#log #logging #pythontip https://t.co/1WBYYng9EY",False,False,https://twitter.com/python_tip/status/999902887370219521,"[{'url': 'https://t.co/AmGPd5MAB5', 'expanded_url': 'https://fangpenlin.com/posts/2012/08/26/good-logging-practice-in-python/', 'display_url': 'fangpenlin.com/posts/2012/08/…'}]","[{'url': 'https://t.co/1WBYYng9EY', 'media_url': 'http://pbs.twimg.com/media/Dd7LprQVwAAAzsI.jpg', 'display_url': 'pic.twitter.com/1WBYYng9EY'}]",5.25227342804663,475 days 09:42:39,475,4.307469895894938,5.307469895894938
997165361287061504,2018-05-17 17:22:03+00:00,63,16,"Join the content of two string columns into one column with https://t.co/gJy7eDJM81() method:

df['c'] = df['a'].str.cat(df['b'], sep=',')

#pandas #python 
https://t.co/uxv9lN5CCg https://t.co/mEf0wjOx92",False,False,https://twitter.com/python_tip/status/997165361287061504,"[{'url': 'https://t.co/gJy7eDJM81', 'expanded_url': 'http://str.cat', 'display_url': 'str.cat'}, {'url': 'https://t.co/uxv9lN5CCg', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.str.cat.html', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}]","[{'url': 'https://t.co/mEf0wjOx92', 'media_url': 'http://pbs.twimg.com/media/DdakmxrVMAAsQjZ.jpg', 'display_url': 'pic.twitter.com/mEf0wjOx92'}]",4.718498871295094,467 days 20:24:42,467,4.293986020768426,5.293986020768426
996333363391860737,2018-05-15 10:15:59+00:00,116,34,"Difference between list.append() and list.extend(): 

>>> x = [1, 2, 3]
>>> x.append([4, 5])
>>> print(x)
[1, 2, 3, [4, 5]]

>>> x = [1, 2, 3]
>>> x.extend([4, 5])
>>> print(x)
[1, 2, 3, 4, 5]

#python",False,False,https://twitter.com/python_tip/status/996333363391860737,[],[],5.389071729816501,465 days 13:18:38,465,4.290423432600841,5.290423432600841
996027753915998208,2018-05-14 14:01:36+00:00,74,25,"Import your Google sheets into #pandas dataframes using gspread:
https://t.co/1n4x5xDbTe
#python",False,False,https://twitter.com/python_tip/status/996027753915998208,"[{'url': 'https://t.co/1n4x5xDbTe', 'expanded_url': 'https://gist.github.com/karlafej/2de8ee4f14b74e636418b2ff881c0843', 'display_url': 'gist.github.com/karlafej/2de8e…'}]",[],5.0106352940962555,464 days 17:04:15,464,4.288169010776714,5.288169010776714
994810079563010048,2018-05-11 05:23:00+00:00,55,14,"🕒 If you have 1 hour, you can start with Neural Networks and Keras by watching this #io18 talk: https://t.co/CEjiwdsPoo

📝 @DataCamp Keras Cheat Sheet: https://t.co/h4hIA3MWjk

🕒🕒🕒 (If you have 3 hours, you can come to our Keras workshop at @pyconcz)",False,False,https://twitter.com/python_tip/status/994810079563010048,"[{'url': 'https://t.co/CEjiwdsPoo', 'expanded_url': 'https://www.youtube.com/watch?time_continue=3&v=tjsHSIG8I08', 'display_url': 'youtube.com/watch?time_con…'}, {'url': 'https://t.co/h4hIA3MWjk', 'expanded_url': 'https://bit.ly/2IcSEEL', 'display_url': 'bit.ly/2IcSEEL'}]",[],4.584967478670572,461 days 08:25:39,461,4.282732217236842,5.282732217236842
994449201739239424,2018-05-10 05:29:00+00:00,56,15,"How to ignore warnings:

> import warnings
> warnings.filterwarnings('ignore')

You can ignore only a specific type of warnings, for example DeprecationWarning.

warnings.filterwarnings('ignore', 'DeprecationWarning')

For more info,  https://t.co/ihUzsTnWyy

#pythontip #warnings https://t.co/zzq9zozGob",False,False,https://twitter.com/python_tip/status/994449201739239424,"[{'url': 'https://t.co/ihUzsTnWyy', 'expanded_url': 'https://www.lesinskis.com/python_deprecation_tutorial.html', 'display_url': 'lesinskis.com/python_depreca…'}]","[{'url': 'https://t.co/zzq9zozGob', 'media_url': 'http://pbs.twimg.com/media/DcyMBRLVQAEfWXi.jpg', 'display_url': 'pic.twitter.com/zzq9zozGob'}]",4.624972813284271,460 days 08:31:39,460,4.281370191943229,5.281370191943229
994073352435314688,2018-05-09 04:35:30+00:00,232,95,"Colab (Google's flavor of Jupyter Notebook) can now open/save notebooks directly from Github. Just add your Github path to https://t.co/8B58ZpRZDq

For example, to open
https://t.co/wMDaguQOuv
use the following URL https://t.co/nlNkO0S800

More details at https://t.co/WI3NUvBduc",False,False,https://twitter.com/python_tip/status/994073352435314688,"[{'url': 'https://t.co/8B58ZpRZDq', 'expanded_url': 'http://colab.research.google.com/github/', 'display_url': 'colab.research.google.com/github/'}, {'url': 'https://t.co/wMDaguQOuv', 'expanded_url': 'https://github.com/tensorflow/tensor2tensor/blob/master/tensor2tensor/notebooks/hello_t2t.ipynb', 'display_url': 'github.com/tensorflow/ten…'}, {'url': 'https://t.co/nlNkO0S800', 'expanded_url': 'https://colab.research.google.com/github/tensorflow/tensor2tensor/blob/master/tensor2tensor/notebooks/hello_t2t.ipynb', 'display_url': 'colab.research.google.com/github/tensorf…'}, {'url': 'https://t.co/WI3NUvBduc', 'expanded_url': 'https://medium.com/tensorflow/colab-an-easy-way-to-learn-and-use-tensorflow-d74d1686e309', 'display_url': 'medium.com/tensorflow/col…'}]",[],6.249975242259483,459 days 07:38:09,459,4.2795339109658235,5.2795339109658235
992062625679921153,2018-05-03 15:25:36+00:00,52,9,"zip() is great for transposing 2D data:
>>> lst = [(1, 2, 3, 4), (5, 6, 7, 8)]
>>> list(zip(*lst))
[(1, 5), (2, 6), (3, 7), (4, 8)]

#python",False,False,https://twitter.com/python_tip/status/992062625679921153,[],[],4.382026634673881,453 days 18:28:15,453,4.268808449701771,5.268808449701771
991632180668452864,2018-05-02 10:55:10+00:00,33,18,"Extract tar files using #python
import tarfile
with https://t.co/IteGFw4RUG('./datasets/housing/housing.tgz') as tgz:
    tgz.extractall(path = './datasets/housing')",False,False,https://twitter.com/python_tip/status/991632180668452864,"[{'url': 'https://t.co/IteGFw4RUG', 'expanded_url': 'http://tarfile.open', 'display_url': 'tarfile.open'}]",[],4.477336814478207,452 days 13:57:49,452,4.266911806145311,5.266911806145311
991410807354339329,2018-05-01 20:15:30+00:00,33,17,Python dictionaries are insertion ordered by default in 3.7+,False,False,https://twitter.com/python_tip/status/991410807354339329,[],[],4.442651256490317,451 days 23:18:09,451,4.265006104454022,5.265006104454022
990951411302256642,2018-04-30 13:50:02+00:00,123,37,"Print calendar of a given month and year:
>>> import calendar
>>> print(calendar.month(2018, 5))
#python https://t.co/ivX91vqT59",False,False,https://twitter.com/python_tip/status/990951411302256642,[],"[{'url': 'https://t.co/ivX91vqT59', 'media_url': 'http://pbs.twimg.com/media/DcCRDaOX0AEq7l4.jpg', 'display_url': 'pic.twitter.com/ivX91vqT59'}]",5.459585514144159,450 days 16:52:41,450,4.262609642427751,5.262609642427751
989036287440146432,2018-04-25 07:00:00+00:00,66,19,"Learn the difference between 'apply', 'applymap' and 'map'

https://t.co/9WhKbfW9L9
#pandas https://t.co/vjRdjr3Qnu",False,False,https://twitter.com/python_tip/status/989036287440146432,"[{'url': 'https://t.co/9WhKbfW9L9', 'expanded_url': 'https://stackoverflow.com/a/19798528/7651153', 'display_url': 'stackoverflow.com/a/19798528/765…'}]","[{'url': 'https://t.co/vjRdjr3Qnu', 'media_url': 'http://pbs.twimg.com/media/DblCe7eV4AAGdvL.jpg', 'display_url': 'pic.twitter.com/vjRdjr3Qnu'}]",4.820281565605037,445 days 10:02:39,445,4.251407091420056,5.251407091420056
987316485545750529,2018-04-20 13:06:08+00:00,67,23,"Pass functions to .loc[] and .iloc[] for indexing:
df.loc[lambda x: x.col != 0]

In this way, you can easily chain selection operations.
https://t.co/SstL8M99WT

#python #pandas https://t.co/j5LqhwZH8L",False,False,https://twitter.com/python_tip/status/987316485545750529,"[{'url': 'https://t.co/SstL8M99WT', 'expanded_url': 'http://pandas.pydata.org/pandas-docs/stable/indexing.html#selection-by-callable', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}]","[{'url': 'https://t.co/j5LqhwZH8L', 'media_url': 'http://pbs.twimg.com/media/DbOm36IX4AANROx.jpg', 'display_url': 'pic.twitter.com/j5LqhwZH8L'}]",4.919980925828125,440 days 16:08:47,440,4.238881832949682,5.238881832949682
986700393907408896,2018-04-18 20:18:00+00:00,51,13,"Display a 2D array in #Jupyter notebook with tabulate: 

from IPython.display import HTML, display
import tabulate
display(HTML(tabulate.tabulate(pred, tablefmt='html') https://t.co/N2oK08iZr7",False,False,https://twitter.com/python_tip/status/986700393907408896,[],"[{'url': 'https://t.co/N2oK08iZr7', 'media_url': 'http://pbs.twimg.com/media/DbESGpnW0AAmiMt.jpg', 'display_url': 'pic.twitter.com/N2oK08iZr7'}]",4.51085950651685,438 days 23:20:39,438,4.233774625119521,5.233774625119521
985896744922820609,2018-04-16 15:04:35+00:00,51,26,"round() can accept a negative argument for number of places:
>>> x = 12345.6789
>>> round(x)
12346.0
>>> round(x,2)
12345.68
>>> round(x, -2)
12300.0

#python",False,False,https://twitter.com/python_tip/status/985896744922820609,[],[],4.867534450455582,436 days 18:07:14,436,4.228614652390368,5.228614652390368
984325249243086848,2018-04-12 07:00:01+00:00,45,18,"How does Python find modules/packages?

When you try

>>> import spam

Interpreter looks for `spam` in sys.path folders

>>> import sys
>>> print(sys.path)

You can manipulate sys.path:

>>>  sys.path.append('../path/to/your/modules/')
>>> print(sys.path)

https://t.co/Vko9R9gEMT https://t.co/2k9tdPle9T",False,False,https://twitter.com/python_tip/status/984325249243086848,"[{'url': 'https://t.co/Vko9R9gEMT', 'expanded_url': 'https://docs.python.org/3/tutorial/modules.html#the-module-search-path', 'display_url': 'docs.python.org/3/tutorial/mod…'}]","[{'url': 'https://t.co/2k9tdPle9T', 'media_url': 'http://pbs.twimg.com/media/DaSo7hTU8AUymIV.jpg', 'display_url': 'pic.twitter.com/2k9tdPle9T'}]",4.605170185988092,432 days 10:02:40,432,4.218145008424533,5.218145008424533
983962857221091328,2018-04-11 07:00:00+00:00,41,13,"Simple way to get the prime numbers less than 50 using #List_Comprehensions:

>> noprimes = [j for i in range(2, 8) for j in range(i*2, 50, i)]
>>> primes = [x for x in range(2, 50) if x not in noprimes]
>>> print(primes)
[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47]",False,False,https://twitter.com/python_tip/status/983962857221091328,[],[],4.394449154672439,431 days 10:02:39,431,4.215498067183273,5.215498067183273
983238078725853184,2018-04-09 07:00:00+00:00,51,16,"Print #Pandas Cheat Sheets:

1) basic operations:
 https://t.co/9JJ3BxiOiv

2) tidy data & data wrangling:
https://t.co/rVM4LiUueh

#pythontip",False,False,https://twitter.com/python_tip/status/983238078725853184,"[{'url': 'https://t.co/9JJ3BxiOiv', 'expanded_url': 'https://assets.datacamp.com/blog_assets/PandasPythonForDataScience.pdf', 'display_url': 'assets.datacamp.com/blog_assets/Pa…'}, {'url': 'https://t.co/rVM4LiUueh', 'expanded_url': 'https://github.com/pandas-dev/pandas/blob/master/doc/cheatsheet/Pandas_Cheat_Sheet.pdf', 'display_url': 'github.com/pandas-dev/pan…'}]",[],4.605170185988092,429 days 10:02:39,429,4.210170789792621,5.210170789792621
982266551188389888,2018-04-06 14:39:30+00:00,49,18,"list.sort() and sorted() accept key argument to specify a function which returns what you would like your items sorted by:

mylst.sort(key = lambda x: x[-1])

sorted(mylst, key = lambda x: len(x)) https://t.co/aVD7Zz2m4H",False,False,https://twitter.com/python_tip/status/982266551188389888,[],"[{'url': 'https://t.co/aVD7Zz2m4H', 'media_url': 'http://pbs.twimg.com/media/DaG2MtmVAAE9eHf.jpg', 'display_url': 'pic.twitter.com/aVD7Zz2m4H'}]",4.6443908991413725,426 days 17:42:09,426,4.202100769092791,5.202100769092791
981552759597142016,2018-04-04 15:23:08+00:00,49,17,"#Pandas: If you know in advance which columns of your data you’d like to use, you can pass them to the usecols argument of https://t.co/KBWVZaKP7L_csv, https://t.co/KBWVZaKP7L_table, etc. https://t.co/QS9KYprLLl",False,False,https://twitter.com/python_tip/status/981552759597142016,"[{'url': 'https://t.co/KBWVZaKP7L', 'expanded_url': 'http://pd.read', 'display_url': 'pd.read'}, {'url': 'https://t.co/KBWVZaKP7L', 'expanded_url': 'http://pd.read', 'display_url': 'pd.read'}]","[{'url': 'https://t.co/QS9KYprLLl', 'media_url': 'http://pbs.twimg.com/media/DZ8s6mIX0AA01wx.jpg', 'display_url': 'pic.twitter.com/QS9KYprLLl'}]",4.61512051684126,424 days 18:25:47,424,4.196671378572817,5.196671378572817
979236713749921793,2018-03-29 06:00:00+00:00,46,14,"#pythontip by @raymondh:
A specialized tool often beats a general purpose tool
* math.sqrt(x) is more accurate than x ** 0.5
* math.log2(x) is more accurate than math.log(x, 2)
* math.log1p(x) is more accurate than math.log(1+x)
...

For example (see the figure) https://t.co/gB6Vhmakow",False,False,https://twitter.com/python_tip/status/979236713749921793,[],"[{'url': 'https://t.co/gB6Vhmakow', 'media_url': 'http://pbs.twimg.com/media/DZLb4wNVMAANw8f.jpg', 'display_url': 'pic.twitter.com/gB6Vhmakow'}]",4.48863636973214,418 days 09:02:39,418,4.180170435610417,5.180170435610417
978874331374628864,2018-03-28 06:00:01+00:00,47,23,"You may know that

>>> import this

prints the Zen of Python. But have you ever looked into its https://t.co/LyDaxRDcfe source code?

https://t.co/OCQuRvO7jB https://t.co/JneItkIAy9",False,False,https://twitter.com/python_tip/status/978874331374628864,"[{'url': 'https://t.co/LyDaxRDcfe', 'expanded_url': 'http://this.py', 'display_url': 'this.py'}, {'url': 'https://t.co/OCQuRvO7jB', 'expanded_url': 'https://github.com/python/cpython/blob/master/Lib/this.py', 'display_url': 'github.com/python/cpython…'}]","[{'url': 'https://t.co/JneItkIAy9', 'media_url': 'http://pbs.twimg.com/media/DZLXX-kVwAA1hDG.jpg', 'display_url': 'pic.twitter.com/JneItkIAy9'}]",4.762173934797756,417 days 09:02:40,417,4.177391983158627,5.177391983158627
978149555253530624,2018-03-26 06:00:01+00:00,42,17,">>> {True: 'yes', 1: 'no', 1.0: 'maybe'}
{True: 'maybe'}

Wait, but why?
* Short explanation: https://t.co/kFTOrfey8k
* Long explanation: https://t.co/wolF2ggFn9
#pythontip",False,False,https://twitter.com/python_tip/status/978149555253530624,"[{'url': 'https://t.co/kFTOrfey8k', 'expanded_url': 'https://stackoverflow.com/a/47803817', 'display_url': 'stackoverflow.com/a/47803817'}, {'url': 'https://t.co/wolF2ggFn9', 'expanded_url': 'https://dbader.org/blog/python-mystery-dict-expression', 'display_url': 'dbader.org/blog/python-my…'}]",[],4.543294782270004,415 days 09:02:40,415,4.171813021727758,5.171813021727758
977204746451849217,2018-03-23 15:25:41+00:00,47,22,"One more way to combine a list of lists into a single set:

>>> lol = [['a', 'b', 'c'], ['b', 'c', 'd'], ['d', 'e']]
>>> set().union(*lol)
set(['a', 'c', 'b', 'e', 'd'])

#pythontip from @raymondh",False,False,https://twitter.com/python_tip/status/977204746451849217,[],[],4.736198448394496,412 days 18:28:20,412,4.163392807449249,5.163392807449249
976076015255552005,2018-03-20 12:40:31+00:00,33,15,"Read the content of a file as a string with #pathlib https://t.co/faYhFGaIt5_text() method.
https://t.co/qHXdEqrjpb https://t.co/ynBOK9Z3jH",False,False,https://twitter.com/python_tip/status/976076015255552005,"[{'url': 'https://t.co/faYhFGaIt5', 'expanded_url': 'http://Path.read', 'display_url': 'Path.read'}, {'url': 'https://t.co/qHXdEqrjpb', 'expanded_url': 'https://docs.python.org/3/library/pathlib.html#pathlib.Path.read_text', 'display_url': 'docs.python.org/3/library/path…'}]","[{'url': 'https://t.co/ynBOK9Z3jH', 'media_url': 'http://pbs.twimg.com/media/DYu37RAW4AIuXSt.jpg', 'display_url': 'pic.twitter.com/ynBOK9Z3jH'}]",4.3694478524670215,409 days 15:43:10,409,4.154915504866971,5.154915504866971
975708743060152320,2018-03-19 12:21:06+00:00,40,9,"Ridgeline plots are an alternative to violin plots. Make them easily with joypy. https://t.co/1LLEs2aimr
#python #pandas #dataviz https://t.co/43EU1tAWdN",False,False,https://twitter.com/python_tip/status/975708743060152320,"[{'url': 'https://t.co/1LLEs2aimr', 'expanded_url': 'https://github.com/sbebo/joypy', 'display_url': 'github.com/sbebo/joypy'}]","[{'url': 'https://t.co/43EU1tAWdN', 'media_url': 'http://pbs.twimg.com/media/DYppjQpV4AIHtFa.jpg', 'display_url': 'pic.twitter.com/43EU1tAWdN'}]",4.219507705176107,408 days 15:23:45,408,4.152077963347096,5.152077963347096
974531657624506368,2018-03-16 06:23:47+00:00,38,9,"Make your pandas rolling - with rolling mean and other operations

Example(s):
https://t.co/DzV59NwJBe
https://t.co/ISxJDIb0lJ
#pythontip https://t.co/aD3bAJ8jIR",False,False,https://twitter.com/python_tip/status/974531657624506368,"[{'url': 'https://t.co/DzV59NwJBe', 'expanded_url': 'https://gist.github.com/simecek/4746ebc758e0cd9aba3094197319627b', 'display_url': 'gist.github.com/simecek/4746eb…'}, {'url': 'https://t.co/ISxJDIb0lJ', 'expanded_url': 'https://stackoverflow.com/questions/40060842/moving-average-pandas', 'display_url': 'stackoverflow.com/questions/4006…'}]","[{'url': 'https://t.co/aD3bAJ8jIR', 'media_url': 'http://pbs.twimg.com/media/DYY7QpbV4AEXy0i.jpg', 'display_url': 'pic.twitter.com/aD3bAJ8jIR'}]",4.189654742026425,405 days 09:26:26,405,4.143532536891448,5.143532536891448
973431339155275776,2018-03-13 05:31:31+00:00,45,13,"https://t.co/jFOxw48Kzo() and https://t.co/1Ix7e2EG42() are timezone unaware

> from datetime import datetime
> https://t.co/1Ix7e2EG42().tzinfo is None
True

Read more about Python and Timezones
https://t.co/lG8uC5M1Vt

And always specify t.z.
> https://t.co/1Ix7e2EG42(pytz.utc)",False,False,https://twitter.com/python_tip/status/973431339155275776,"[{'url': 'https://t.co/jFOxw48Kzo', 'expanded_url': 'http://datetime.today', 'display_url': 'datetime.today'}, {'url': 'https://t.co/1Ix7e2EG42', 'expanded_url': 'http://datetime.now', 'display_url': 'datetime.now'}, {'url': 'https://t.co/1Ix7e2EG42', 'expanded_url': 'http://datetime.now', 'display_url': 'datetime.now'}, {'url': 'https://t.co/lG8uC5M1Vt', 'expanded_url': 'https://julien.danjou.info/blog/2015/python-and-timezones', 'display_url': 'julien.danjou.info/blog/2015/pyth…'}, {'url': 'https://t.co/1Ix7e2EG42', 'expanded_url': 'http://datetime.now', 'display_url': 'datetime.now'}]",[],4.442651256490317,402 days 08:34:10,402,4.13494137542797,5.13494137542797
973076122307936257,2018-03-12 06:00:01+00:00,83,23,"#humanize = module for human friendly representations

import datetime as dt
import time
import humanize

t = https://t.co/mj5384TM25()
time.sleep(10)
humanize.naturaltime(t)

y = https://t.co/Gt94Oj5rqW()-dt.timedelta(1)
humanize.naturaldate(y)

(from A.Samuel #PyDataNYC slides) https://t.co/gmfFwXKzOw",False,False,https://twitter.com/python_tip/status/973076122307936257,"[{'url': 'https://t.co/mj5384TM25', 'expanded_url': 'http://dt.datetime.now', 'display_url': 'dt.datetime.now'}, {'url': 'https://t.co/Gt94Oj5rqW', 'expanded_url': 'http://dt.date.today', 'display_url': 'dt.date.today'}]","[{'url': 'https://t.co/gmfFwXKzOw', 'media_url': 'http://pbs.twimg.com/media/DXV1kVGU0AAlLAE.jpg', 'display_url': 'pic.twitter.com/gmfFwXKzOw'}]",5.030437921392435,401 days 09:02:40,401,4.132068210237215,5.132068210237215
972173623036399616,2018-03-09 18:13:48+00:00,52,20,"Select rows of #pandas dataframe where a column of strings contains   a substring with str.contains()

>>> df[df[“col""].str.contains(""abc”)]

#python https://t.co/AW4MwgvFcI",False,False,https://twitter.com/python_tip/status/972173623036399616,[],"[{'url': 'https://t.co/AW4MwgvFcI', 'media_url': 'http://pbs.twimg.com/media/DX3arquW0AIW-ju.jpg', 'display_url': 'pic.twitter.com/AW4MwgvFcI'}]",4.727387818712341,398 days 21:16:27,398,4.123422349523627,5.123422349523627
971762660097363974,2018-03-08 15:00:47+00:00,56,17,"Use textwrap.fill() to print long strings so that they fill a specified number of columns.

>>> print(textwrap.fill(long_str, 60))

#python https://t.co/unhErzp5C4",False,False,https://twitter.com/python_tip/status/971762660097363974,[],"[{'url': 'https://t.co/unhErzp5C4', 'media_url': 'http://pbs.twimg.com/media/DXxk5knWAAABJte.jpg', 'display_url': 'pic.twitter.com/unhErzp5C4'}]",4.68213122712422,397 days 18:03:26,397,4.1205320416477775,5.1205320416477775
971052138729222146,2018-03-06 15:57:25+00:00,76,35,"Use itertools.compress to filter a sequence based on the results of filtering another related sequence:

counts = [0, 5, 6, 3, 2]
names = ['Bob', 'Alice', 'Jane', 'Joe', 'Luke']
more3 = [n > 3 for n in counts]
list(compress(names, more3))

#python https://t.co/vyUL0VPXEf",False,False,https://twitter.com/python_tip/status/971052138729222146,[],"[{'url': 'https://t.co/vyUL0VPXEf', 'media_url': 'http://pbs.twimg.com/media/DXneEcJXcAA8JR8.jpg', 'display_url': 'pic.twitter.com/vyUL0VPXEf'}]",5.204006687076795,395 days 19:00:04,395,4.114739624505033,5.114739624505033
969496982631858176,2018-03-02 08:57:47+00:00,38,14,"Download Google Image Search results with #BeautifulSoup:

https://t.co/x5p3HQNTXk https://t.co/HmRSkDcEIZ",False,False,https://twitter.com/python_tip/status/969496982631858176,"[{'url': 'https://t.co/x5p3HQNTXk', 'expanded_url': 'https://stackoverflow.com/a/28487500', 'display_url': 'stackoverflow.com/a/28487500'}]","[{'url': 'https://t.co/HmRSkDcEIZ', 'media_url': 'http://pbs.twimg.com/media/DXRYIN9VoAIgRQe.jpg', 'display_url': 'pic.twitter.com/HmRSkDcEIZ'}]",4.394449154672439,391 days 12:00:26,391,4.103110680135278,5.103110680135278
969120059892359169,2018-03-01 08:00:02+00:00,40,8,"Python dictionary's method get() can be used with a default value:

>>> dict = {'Name': 'Zabra', 'Age': 7}
>>> print ""Value : %s"" %  dict.get('Age')
Value : 7
>>> print ""Value : %s"" %  dict.get('Education', ""NA"")
Value : NA",False,False,https://twitter.com/python_tip/status/969120059892359169,[],[],4.174387269895637,390 days 11:02:41,390,4.100194851745902,5.100194851745902
968742565297164290,2018-02-28 07:00:00+00:00,48,18,"1990s The Scripting Era
(Python as Alternative to Bash)
2000s SciPy Era
(Python as Alternative to Matlab)
2010s PyData Era
(Python as Alternative to R)

Interested how Python became #1 prog. language for data analysis? Check @jakevdp #pydata slides: https://t.co/mGar7YmIbu https://t.co/OtmesBfkM6",False,False,https://twitter.com/python_tip/status/968742565297164290,"[{'url': 'https://t.co/mGar7YmIbu', 'expanded_url': 'https://speakerdeck.com/jakevdp/intro-to-pydata', 'display_url': 'speakerdeck.com/jakevdp/intro-…'}]","[{'url': 'https://t.co/OtmesBfkM6', 'media_url': 'http://pbs.twimg.com/media/DXDyM--VAAAk73H.jpg', 'display_url': 'pic.twitter.com/OtmesBfkM6'}]",4.634728988229636,389 days 10:02:39,389,4.0972757759252,5.0972757759252
968395277437566976,2018-02-27 08:00:00+00:00,34,10,"Get the list of module attributes (= all the things that are in the module):

>>> import math
>>> dir(math)
['__doc__', '__name__', ... , 'tanh', 'trunc']

#pythontip",False,False,https://twitter.com/python_tip/status/968395277437566976,[],[],4.174387269895637,388 days 11:02:39,388,4.094353541049192,5.094353541049192
967078256812941312,2018-02-23 16:46:38+00:00,54,22,"Keep a limited history of items with collections.deque:

q = deque([1,2,3], maxlen=3)
q.append(4)

#python https://t.co/Z3pSwOZ5KZ",False,False,https://twitter.com/python_tip/status/967078256812941312,[],"[{'url': 'https://t.co/Z3pSwOZ5KZ', 'media_url': 'http://pbs.twimg.com/media/DWvAZFxWsAAbIXl.jpg', 'display_url': 'pic.twitter.com/Z3pSwOZ5KZ'}]",4.795790545596741,384 days 19:49:17,384,4.082634662012351,5.082634662012351
966704808328646657,2018-02-22 16:02:41+00:00,69,29,"You can name your slices:

>>> record = ""01234567890123456789I want this0123456789""
>>> IWANT = slice(20,31) 
>>> record[IWANT]
'I want this'

#python #pythontip",False,False,https://twitter.com/python_tip/status/966704808328646657,[],[],5.056245805348308,383 days 19:05:20,383,4.07969784486158,5.07969784486158
964046629128024065,2018-02-15 08:00:02+00:00,54,16,"#Jupyter notebook autocomplete and docs:

Tab = autocomplete
Shift-tab = arguments of the function/method
2 x shift-tab, 3 x shift-tab, ?function = more docs
??function = source code",False,False,https://twitter.com/python_tip/status/964046629128024065,[],[],4.634728988229636,376 days 11:02:41,376,4.0590682937141285,5.0590682937141285
961299457928175616,2018-02-07 18:03:45+00:00,36,14,"Do you call the function repeatedly for the same parameters? #Memoization is your friend. See 

https://t.co/d47CZdzmfG

for explanation and module functools for the actual implementation

https://t.co/zDNqXHDsfA

#pythontip",False,False,https://twitter.com/python_tip/status/961299457928175616,"[{'url': 'https://t.co/d47CZdzmfG', 'expanded_url': 'https://www.python-course.eu/python3_memoization.php', 'display_url': 'python-course.eu/python3_memoiz…'}, {'url': 'https://t.co/zDNqXHDsfA', 'expanded_url': 'http://book.pythontips.com/en/latest/function_caching.html', 'display_url': 'book.pythontips.com/en/latest/func…'}]",[],4.3694478524670215,368 days 21:06:24,368,4.035356077872014,5.035356077872014
959335579757367297,2018-02-02 08:00:00+00:00,69,26,"Unzipping files in Python:

import zipfile
with zipfile.ZipFile(""https://t.co/FFxRQWEcR8"",""r"") as zip_ref:
    zip_ref.extractall(""targetdir"")

#zip #pythontip",False,False,https://twitter.com/python_tip/status/959335579757367297,"[{'url': 'https://t.co/FFxRQWEcR8', 'expanded_url': 'http://file.zip', 'display_url': 'file.zip'}]",[],4.997212273764115,363 days 11:02:39,363,4.020472907115972,5.020472907115972
958610806471499776,2018-01-31 08:00:01+00:00,46,13,"Does your #numpy array contain missing values? 

> import numpy as np
> x = np.array([1,2,3,np.nan])

You can remove them:

> x[~np.isnan(x)]
array([ 1.,  2.,  3.])
> np.nanmean(x)
2.0

Or replace them by a number:

> np.nan_to_num(x,0)
array([ 1.,  2.,  3.,  0.]) 

#pythontip",False,False,https://twitter.com/python_tip/status/958610806471499776,[],[],4.454347296253507,361 days 11:02:40,361,4.014507463250854,5.014507463250854
958248415632113664,2018-01-30 08:00:00+00:00,54,10,"Create an interactive map of your followers' locations in #Jupyter notebook:

https://t.co/jwkLwTCZ8N

It is amazing to see that @python_tip is now followed from 96 countries. Thank you all.

#tweepy #googlemaps #gmaps https://t.co/MVqVN8n1r8",False,False,https://twitter.com/python_tip/status/958248415632113664,"[{'url': 'https://t.co/jwkLwTCZ8N', 'expanded_url': 'https://gist.github.com/simecek/fa9f995cafc6fa4f878a8ee0e7a2d3cf', 'display_url': 'gist.github.com/simecek/fa9f99…'}]","[{'url': 'https://t.co/MVqVN8n1r8', 'media_url': 'http://pbs.twimg.com/media/DUqoXQnVAAAEPyU.jpg', 'display_url': 'pic.twitter.com/MVqVN8n1r8'}]",4.442651256490317,360 days 11:02:39,360,4.011522272547827,5.011522272547827
956953573673328640,2018-01-26 18:14:45+00:00,37,13,Add interactivity to #matplotlib plots inside #Jupyter notebooks with %matplotlib notebook magic. https://t.co/yMJHcu6PNj,False,False,https://twitter.com/python_tip/status/956953573673328640,"[{'url': 'https://t.co/yMJHcu6PNj', 'expanded_url': 'https://twitter.com/radekosmulski/status/956927960434597888', 'display_url': 'twitter.com/radekosmulski/…'}]",[],4.343805421853684,356 days 21:17:24,356,3.9995657827522155,4.9995657827522155
956545313195642881,2018-01-25 15:12:29+00:00,89,34,"Know the difference between append() and extend():

>>> x = [1,2,3]
>>> x.append([4,5])
>>> x
[1, 2, 3, [4, 5]]
>>> x.extend([6,7])
>>> x
[1, 2, 3, [4, 5], 6, 7]
>>> x.extend(""abc"")
>>> x
[1, 2, 3, [4, 5], 6, 7, 'a', 'b', 'c']

https://t.co/qbMrM1bRAf",False,False,https://twitter.com/python_tip/status/956545313195642881,"[{'url': 'https://t.co/qbMrM1bRAf', 'expanded_url': 'https://stackoverflow.com/questions/252703/difference-between-append-vs-extend-list-methods-in-python', 'display_url': 'stackoverflow.com/questions/2527…'}]",[],5.2574953720277815,355 days 18:15:08,355,3.996572874666731,4.996572874666731
955429320591364096,2018-01-22 13:17:55+00:00,51,26,"Use #pathlib for recursive globbing:
>>> import pathlib
>>> images = pathlib.Path('/mypath/').glob('**/*.png')
>>> list(images)

https://t.co/jyNqpHaJXi

#python3",False,False,https://twitter.com/python_tip/status/955429320591364096,"[{'url': 'https://t.co/jyNqpHaJXi', 'expanded_url': 'https://docs.python.org/3/library/pathlib.html#basic-use', 'display_url': 'docs.python.org/3/library/path…'}]",[],4.867534450455582,352 days 16:20:34,352,3.987585496713142,4.987585496713142
954603461353422848,2018-01-20 06:36:15+00:00,124,59,"Microsoft offers free #Jupyter notebooks in the cloud:

https://t.co/VYbNmjZFwf

Even better, Google's free Colaboratory notebooks (https://t.co/m6vNsFxku5) now comes with Tesla K80 GPU. Crazy! 

https://t.co/3c9ISNIq7y

#pythontip #deeplearning #colab https://t.co/IPrUm5Hp9V",False,False,https://twitter.com/python_tip/status/954603461353422848,"[{'url': 'https://t.co/VYbNmjZFwf', 'expanded_url': 'https://notebooks.azure.com/', 'display_url': 'notebooks.azure.com'}, {'url': 'https://t.co/m6vNsFxku5', 'expanded_url': 'http://colab.research.google.com/', 'display_url': 'colab.research.google.com'}, {'url': 'https://t.co/3c9ISNIq7y', 'expanded_url': 'https://www.kaggle.com/getting-started/47096#post271139', 'display_url': 'kaggle.com/getting-starte…'}]","[{'url': 'https://t.co/IPrUm5Hp9V', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/DT9uxhuU8AAHnOr.jpg', 'display_url': 'pic.twitter.com/IPrUm5Hp9V'}]",5.71042701737487,350 days 09:38:54,350,3.9815869472639225,4.9815869472639225
953902899309903872,2018-01-18 08:12:28+00:00,26,9,"Reshaping data from the wide format to the long format (melt) and back again (pivot):

https://t.co/mqOgAdSZwt

#pandas #pythontip #tidydata https://t.co/sF3p22389c",False,False,https://twitter.com/python_tip/status/953902899309903872,"[{'url': 'https://t.co/mqOgAdSZwt', 'expanded_url': 'http://www.datasciencemadesimple.com/reshape-wide-long-pandas-python-melt-function/', 'display_url': 'datasciencemadesimple.com/reshape-wide-l…'}]","[{'url': 'https://t.co/sF3p22389c', 'media_url': 'http://pbs.twimg.com/media/DTzvsETVwAAlN8D.jpg', 'display_url': 'pic.twitter.com/sF3p22389c'}]",3.9889840465642745,348 days 11:15:07,348,3.975583042529991,4.9755830425299905
953543713686343680,2018-01-17 08:25:11+00:00,39,6,"The goldmine of #pythontips from @dan_s_becker and @rctatman: 

https://t.co/rmOuNHdzpN

Interactive #python tutorials on machine learning, deep learning and data visualization.",False,False,https://twitter.com/python_tip/status/953543713686343680,"[{'url': 'https://t.co/rmOuNHdzpN', 'expanded_url': 'https://www.kaggle.com/learn', 'display_url': 'kaggle.com/learn'}]",[],4.060443010546419,347 days 11:27:50,347,3.9725791356540276,4.972579135654028
953174987346776065,2018-01-16 08:00:00+00:00,33,13,"Do you need to save a large object?

import numpy as np
x = np.zeros((1000,1000))

Compress your pickle file

import gzip, cPickle
with https://t.co/wFbykHTCKH('tmp.gz','wb') as f:
  cPickle.dump(x, f, 2)

Or take advantage of savez_compressed:

np.savez_compressed('tmp.npz', x)",False,False,https://twitter.com/python_tip/status/953174987346776065,"[{'url': 'https://t.co/wFbykHTCKH', 'expanded_url': 'http://gzip.open', 'display_url': 'gzip.open'}]",[],4.290459441148391,346 days 11:02:39,346,3.9695739530766225,4.9695739530766225
952812602819739654,2018-01-15 08:00:01+00:00,40,8,"f(x) = log(1+x) is a common transformation for non-negative data. With #numpy, use log1p(x), not log(x)+1, to get a better precision for small numbers:

>>> import numpy as np
>>> np.log1p(1e-99)
1e-99
>>> np.log(1 + 1e-99)
0.0

The inverse function is 'expm1'.

#pythontip #numpy",False,False,https://twitter.com/python_tip/status/952812602819739654,[],[],4.174387269895637,345 days 11:02:40,345,3.9665675144783092,4.966567514478309
951383599449767937,2018-01-11 09:21:40+00:00,42,4,"Read a csv into #pandas dataframe while interpreting “,” as a thousands seperator:
df = https://t.co/KBWVZaKP7L_csv('example.csv', thousands=',')
https://t.co/m2WbjDPWv4
#python",False,False,https://twitter.com/python_tip/status/951383599449767937,"[{'url': 'https://t.co/KBWVZaKP7L', 'expanded_url': 'http://pd.read', 'display_url': 'pd.read'}, {'url': 'https://t.co/m2WbjDPWv4', 'expanded_url': 'https://chrisalbon.com/python/data_wrangling/pandas_dataframe_importing_csv/', 'display_url': 'chrisalbon.com/python/data_wr…'}]",[],4.007333185232471,341 days 12:24:19,341,3.9545295705100436,4.954529570510044
951006935670820864,2018-01-10 08:24:56+00:00,33,12,"You can also use csv.Sniffer() to guess the delimiter for you.
https://t.co/YMJ1LDOuOJ

#python https://t.co/e05SXlG3sL",False,False,https://twitter.com/python_tip/status/951006935670820864,"[{'url': 'https://t.co/YMJ1LDOuOJ', 'expanded_url': 'https://docs.python.org/2/library/csv.html#csv.Sniffer', 'display_url': 'docs.python.org/2/library/csv.…'}, {'url': 'https://t.co/e05SXlG3sL', 'expanded_url': 'https://twitter.com/raymondh/status/950809128376582144', 'display_url': 'twitter.com/raymondh/statu…'}]",[],4.248495242049359,340 days 11:27:35,340,3.95151712512316,4.95151712512316
950649826739392512,2018-01-09 08:45:55+00:00,40,16,"pandas.cut() can be used to turn a continuous variable into a categorical one. https://t.co/RAP83qYiVu
#python #pandas",False,False,https://twitter.com/python_tip/status/950649826739392512,"[{'url': 'https://t.co/RAP83qYiVu', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/stable/generated/pandas.cut.html', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}]",[],4.48863636973214,339 days 11:48:34,339,3.9485035295632134,4.948503529563213
950275889127936000,2018-01-08 08:00:01+00:00,47,10,"Trying to find a bug in your script? Rerun it with pdb as follows

python -m pdb example.py
(example.py and output attached)

Too complicated? The text-GUI debugger pudb is here to help

python -m https://t.co/o81VcY0Mt6 example.py

#pythontip #pdb #pudb https://t.co/OhLIwcFCPj",False,False,https://twitter.com/python_tip/status/950275889127936000,"[{'url': 'https://t.co/o81VcY0Mt6', 'expanded_url': 'http://pudb.run', 'display_url': 'pudb.run'}]","[{'url': 'https://t.co/OhLIwcFCPj', 'media_url': 'http://pbs.twimg.com/media/DTAHzDWV4AAie8g.jpg', 'display_url': 'pic.twitter.com/OhLIwcFCPj'}]",4.356708826689592,338 days 11:02:40,338,3.9454887996789036,4.945488799678904
949516017838956545,2018-01-06 05:40:34+00:00,30,8,"absl-py is a library for building Python applications developed by Google, extensively tested and used in production

Example with flags and logging:
https://t.co/js8hJLg9Ml

Codes and installation:
https://t.co/jLX7J9s1cc

#pythontip",False,False,https://twitter.com/python_tip/status/949516017838956545,"[{'url': 'https://t.co/js8hJLg9Ml', 'expanded_url': 'https://gist.github.com/simecek/29695cf4a1b53357ba6921fe0cc9da5f', 'display_url': 'gist.github.com/simecek/29695c…'}, {'url': 'https://t.co/jLX7J9s1cc', 'expanded_url': 'https://github.com/abseil/abseil-py', 'display_url': 'github.com/abseil/abseil-…'}]",[],4.007333185232471,336 days 08:43:13,336,3.9394559970993956,4.939455997099396
949159440137228289,2018-01-05 06:03:39+00:00,56,14,"Get absolute path with pathlib.Path.resolve():
>>> from pathlib import Path
>>> p = Path('.’)
>>> p.resolve()
PosixPath(‘/home/sweet/home’)
#python 3",False,False,https://twitter.com/python_tip/status/949159440137228289,[],[],4.59511985013459,335 days 09:06:18,335,3.936437953180659,4.9364379531806595
948605053367074816,2018-01-03 17:20:43+00:00,21,15,"PEP 435 introduced enum to Python:

from enum import Enum
class Animal(Enum):
    ant, bee, cat, dog = range(4)
https://t.co/gfa6c4GDuS
https://t.co/441iquh5Qq

#pythontip",False,False,https://twitter.com/python_tip/status/948605053367074816,"[{'url': 'https://t.co/gfa6c4GDuS', 'expanded_url': 'http://Animal.cat', 'display_url': 'Animal.cat'}, {'url': 'https://t.co/441iquh5Qq', 'expanded_url': 'http://Animal.cat.name', 'display_url': 'Animal.cat.name'}]",[],4.204692619390966,333 days 20:23:22,333,3.930398648616287,4.930398648616287
947739169291423744,2018-01-01 08:00:00+00:00,58,25,"New year, new chance to master Python! https://t.co/AGEoKvlnlg",False,False,https://twitter.com/python_tip/status/947739169291423744,[],"[{'url': 'https://t.co/AGEoKvlnlg', 'media_url': 'http://pbs.twimg.com/media/DSY1gFxU8AA8Cxw.jpg', 'display_url': 'pic.twitter.com/AGEoKvlnlg'}]",4.897839799950911,331 days 11:02:39,331,3.9243551410402127,4.924355141040213
946764011080732672,2017-12-29 15:25:04+00:00,72,17,"Create new directories with #pathlib.Path.mkdir() method

import pathlib
pathlib.Path('/my/new/directory').mkdir(parents=True, exist_ok=True) 

This creates all missing parents
and doesn't raise an exception if the directory already exists.

#python 3",False,False,https://twitter.com/python_tip/status/946764011080732672,[],[],4.820281565605037,328 days 18:27:43,328,3.9152822119905113,4.915282211990512
946381556591054849,2017-12-28 14:05:20+00:00,56,24,"In #jupyter notebook, you can use _N to get the output of N-th cell:

In  [20]: _2
Out [20]: 200 https://t.co/TCenrGXd8j",False,False,https://twitter.com/python_tip/status/946381556591054849,[],"[{'url': 'https://t.co/TCenrGXd8j', 'media_url': 'http://pbs.twimg.com/media/DSI4tJlWsAAqg3e.jpg', 'display_url': 'pic.twitter.com/TCenrGXd8j'}]",4.859812404361672,327 days 17:07:59,327,3.9122559028988504,4.912255902898851
946025257932066816,2017-12-27 14:29:32+00:00,32,14,"Use %debug magic in #jupyter notebook to see details of an exception. 

(see the whole thread) https://t.co/lDhNe03UZA",False,False,https://twitter.com/python_tip/status/946025257932066816,"[{'url': 'https://t.co/lDhNe03UZA', 'expanded_url': 'https://twitter.com/radekosmulski/status/945739571735748609', 'display_url': 'twitter.com/radekosmulski/…'}]",[],4.31748811353631,326 days 17:32:11,326,3.9092286117111237,4.909228611711123
945724472807522304,2017-12-26 18:34:19+00:00,29,13,"Fastest way to uniquify a list in #python >=3.6:
>>> list(set(seq))
or, if order is important:
>>> list(dict.fromkeys(seq))
https://t.co/IGrYHrPUMM by @peterbe",False,False,https://twitter.com/python_tip/status/945724472807522304,"[{'url': 'https://t.co/IGrYHrPUMM', 'expanded_url': 'https://www.peterbe.com/plog/fastest-way-to-uniquify-a-list-in-python-3.6', 'display_url': 'peterbe.com/plog/fastest-w…'}]",[],4.23410650459726,325 days 21:36:58,325,3.906200348135064,4.906200348135064
945252910228795393,2017-12-25 11:20:30+00:00,29,15,"Draw a tree with #python 
https://t.co/LFPtKCsWkq
Happy Holidays! https://t.co/Rfu2EERVpN",False,False,https://twitter.com/python_tip/status/945252910228795393,"[{'url': 'https://t.co/LFPtKCsWkq', 'expanded_url': 'https://gist.github.com/franktoffel/aea4329b760eb3e72f4d', 'display_url': 'gist.github.com/franktoffel/ae…'}]","[{'url': 'https://t.co/Rfu2EERVpN', 'media_url': 'http://pbs.twimg.com/media/DR42a8wX0AAWSA-.jpg', 'display_url': 'pic.twitter.com/Rfu2EERVpN'}]",4.31748811353631,324 days 14:23:09,324,3.9031711214208684,4.903171121420868
943024844995571713,2017-12-19 07:46:58+00:00,32,14,"2018 is coming! Find all US holidays in the new year:

from https://t.co/qnfMyvMjvg import USFederalHolidayCalendar as cal
cal().holidays(start='2018-01-01', end='2018-12-31').to_pydatetime()

What about Easter?

from dateutil.easter import easter
easter(2018)

#pythontip",False,False,https://twitter.com/python_tip/status/943024844995571713,"[{'url': 'https://t.co/qnfMyvMjvg', 'expanded_url': 'http://pandas.tseries.holiday', 'display_url': 'pandas.tseries.holiday'}]",[],4.31748811353631,318 days 10:49:37,318,3.8849760110496283,4.884976011049629
942673519699046400,2017-12-18 08:30:55+00:00,59,15,"When a string won't fit on a line, you can use parentheses for implicit line joining:

x = ('Oh my god, this is so long, really '
     'long long long long long long string')
x",False,False,https://twitter.com/python_tip/status/942673519699046400,[],[],4.653960350157523,317 days 11:33:34,317,3.8819402762941544,4.881940276294154
941243060108906496,2017-12-14 09:46:47+00:00,38,9,"iter() can take two arguments, first one being a function that takes no arguments, second one marks the stop:
with open('mydata.txt') as fp:
    for line in iter(fp.readline, '""""):
        do_something

https://t.co/dQe7JWUGNQ
#python",False,False,https://twitter.com/python_tip/status/941243060108906496,"[{'url': 'https://t.co/dQe7JWUGNQ', 'expanded_url': 'https://docs.python.org/3/library/functions.html#iter', 'display_url': 'docs.python.org/3/library/func…'}]",[],4.189654742026425,313 days 12:49:26,313,3.8697884222026424,4.869788422202642
940909138367873024,2017-12-13 11:39:54+00:00,65,19,"Use operator.methodcaller to find items or sort a list: 
>>> mylist = ['first', 'second!', 'third!!', 'fourth!!!']
>>> list(filter(operator.methodcaller('endswith', '!'), mylist))
#python https://t.co/UIBYpfl7b6",False,False,https://twitter.com/python_tip/status/940909138367873024,[],"[{'url': 'https://t.co/UIBYpfl7b6', 'media_url': 'http://pbs.twimg.com/media/DQ7HuCZW0AADGk0.jpg', 'display_url': 'pic.twitter.com/UIBYpfl7b6'}]",4.812184355372417,312 days 14:42:33,312,3.866748263633011,4.866748263633011
940506518042169350,2017-12-12 09:00:02+00:00,69,21,Compare two floats with math.isclose() to see if they are nearly equal #python https://t.co/y9QiKtpbNP,False,False,https://twitter.com/python_tip/status/940506518042169350,[],"[{'url': 'https://t.co/y9QiKtpbNP', 'media_url': 'http://pbs.twimg.com/media/DQwgxCOUEAEwFqD.jpg', 'display_url': 'pic.twitter.com/y9QiKtpbNP'}]",4.890349128221754,311 days 12:02:41,311,3.8637072399804553,4.863707239980455
940151264033300480,2017-12-11 09:28:23+00:00,19,11,"List of projects dropping #python 2 support in or before 2020:
https://t.co/w0qfUZR20x",False,False,https://twitter.com/python_tip/status/940151264033300480,"[{'url': 'https://t.co/w0qfUZR20x', 'expanded_url': 'http://www.python3statement.org/', 'display_url': 'python3statement.org'}]",[],3.970291913552122,310 days 12:31:02,310,3.860665357089757,4.860665357089757
938317088183242752,2017-12-06 08:00:01+00:00,84,46,"#Python3 is coming. Still need to code in Python2? Use these 4 lines and your future self will thank you:

from __future__ import absolute_import
from __future__ import division
from __future__ import print_function
from __future__ import unicode_literals

https://t.co/V3TGunnoR8",False,False,https://twitter.com/python_tip/status/938317088183242752,"[{'url': 'https://t.co/V3TGunnoR8', 'expanded_url': 'http://python-future.org/quickstart.html', 'display_url': 'python-future.org/quickstart.html'}]",[],5.407171771460119,305 days 11:02:40,305,3.845443236836422,4.845443236836422
937592318399602688,2017-12-04 08:00:02+00:00,28,17,"#Django 2.0 is out:
* Simplified URL routing syntax
* Responsive, mobile-friendly contrib.admin
* Python 2.7 no longer supported

https://t.co/X5DdbeSLF1",False,False,https://twitter.com/python_tip/status/937592318399602688,"[{'url': 'https://t.co/X5DdbeSLF1', 'expanded_url': 'https://docs.djangoproject.com/en/2.0/releases/2.0/', 'display_url': 'docs.djangoproject.com/en/2.0/release…'}]",[],4.382026634673881,303 days 11:02:41,303,3.839348551200656,4.839348551200656
936541242086903808,2017-12-01 10:23:26+00:00,44,11,"What output do you expect?
F = [lambda x: x**i for i in range(10)]
print([g(2) for g in F])

Explanation:  https://t.co/jWpT4E6UOb https://t.co/LI6p4AXuyy",False,False,https://twitter.com/python_tip/status/936541242086903808,"[{'url': 'https://t.co/jWpT4E6UOb', 'expanded_url': 'https://www.reddit.com/r/Python/comments/3cu6ej/what_are_some_wtf_things_about_python/csz1vpv/', 'display_url': 'reddit.com/r/Python/comme…'}]","[{'url': 'https://t.co/LI6p4AXuyy', 'media_url': 'http://pbs.twimg.com/media/DP9DQmUXkAER7Hl.jpg', 'display_url': 'pic.twitter.com/LI6p4AXuyy'}]",4.356708826689592,300 days 13:26:05,300,3.8302003800417745,4.8302003800417745
935866082036015104,2017-11-29 13:40:36+00:00,50,23,"Do you want collapsible headings, prettified code and more in your #jupyter notebook? Try Jupyter notebook extensions. https://t.co/c4ezfEOzvO",False,False,https://twitter.com/python_tip/status/935866082036015104,"[{'url': 'https://t.co/c4ezfEOzvO', 'expanded_url': 'https://github.com/ipython-contrib/jupyter_contrib_nbextensions', 'display_url': 'github.com/ipython-contri…'}]",[],4.787491742782046,298 days 16:43:15,298,3.8240975499579686,4.824097549957969
935439990418477062,2017-11-28 09:27:28+00:00,44,16,"Restore normal dict behavior of a defaultdict by setting
>>> d.default_factory = None
#python https://t.co/BkYktbjgGl",False,False,https://twitter.com/python_tip/status/935439990418477062,[],"[{'url': 'https://t.co/BkYktbjgGl', 'media_url': 'http://pbs.twimg.com/media/DPtZnoaXUAAAb5u.jpg', 'display_url': 'pic.twitter.com/BkYktbjgGl'}]",4.532599493153256,297 days 12:30:07,297,3.8210449309248506,4.821044930924851
933852919169933313,2017-11-24 00:21:00+00:00,29,9,"Learn from @jackdbd about Dash and its differences from #rstats Shiny:

https://t.co/IF4PQizU4g

#python #dash",False,False,https://twitter.com/python_tip/status/933852919169933313,"[{'url': 'https://t.co/IF4PQizU4g', 'expanded_url': 'http://slides.com/jackdbd/deck?utm_content=buffer8880b&utm_medium=social&utm_source=twitter.com&utm_campaign=buffer#/', 'display_url': 'slides.com/jackdbd/deck?u…'}]",[],4.04305126783455,293 days 03:23:39,293,3.808826499669418,4.8088264996694186
933710594536103936,2017-11-23 14:55:27+00:00,49,16,">>> a = [2, 1, 3]
>>> sorted(a) == sorted(a)
True
>>> reversed(a) == reversed(a)
False

Explanation: reversed(a) is an iterator, not a list

>>> type(sorted(a))
<type 'list'>
>>> type(reversed(a))
<type 'listreverseiterator'>
>>> id(reversed(a))
139938992007504",False,False,https://twitter.com/python_tip/status/933710594536103936,[],[],4.584967478670572,292 days 17:58:06,292,3.8057699173880915,4.8057699173880915
933258231421345793,2017-11-22 08:57:56+00:00,38,18,"Comparison operator chaining, the reason why 

>>> False == False in [False]

is actually True. Because both '==' and 'in' happens at the same time, the line is equivalent to 

(False == False) and (False in [False])",False,False,https://twitter.com/python_tip/status/933258231421345793,[],[],4.532599493153256,291 days 12:00:35,291,3.802712550730816,4.802712550730816
929984742421942272,2017-11-13 08:10:15+00:00,30,9,Use exclamation mark to execute a shell command in #Jupyter notebook. https://t.co/lhcvnjhjLF,False,False,https://twitter.com/python_tip/status/929984742421942272,[],"[{'url': 'https://t.co/lhcvnjhjLF', 'media_url': 'http://pbs.twimg.com/media/DOf4IHNWkAAKOTB.jpg', 'display_url': 'pic.twitter.com/lhcvnjhjLF'}]",4.060443010546419,282 days 11:12:54,282,3.7751612795249003,4.7751612795249
928895502304858115,2017-11-10 08:02:00+00:00,22,8,"Numpy: Find the index of the minimal value in an array Z:

np.unravel_index(Z.argmin(), Z.shape)

#numpy #python",False,False,https://twitter.com/python_tip/status/928895502304858115,[],[],3.8501476017100584,279 days 11:04:39,279,3.765963675807146,4.765963675807146
928532619314151425,2017-11-09 08:00:02+00:00,34,20,"Import * can be dangerous:

>>> print(sum(range(5),-1))
9
>>> from numpy import *
>>> print(sum(range(5),-1))
10

https://t.co/MgvngboWzF",False,False,https://twitter.com/python_tip/status/928532619314151425,"[{'url': 'https://t.co/MgvngboWzF', 'expanded_url': 'https://stackoverflow.com/questions/42955201/python-numpy-range-and-sum-1', 'display_url': 'stackoverflow.com/questions/4295…'}]",[],4.553876891600541,278 days 11:02:41,278,3.7628962847678915,4.7628962847678915
928170229519278080,2017-11-08 08:00:01+00:00,42,19,"New in Python >3.5: operator for matrix multiplication @

import numpy as np
a = np.ones(2,3)
b = np.ones(3,4)
a @ b",False,False,https://twitter.com/python_tip/status/928170229519278080,[],[],4.605170185988092,277 days 11:02:40,277,3.759828134745398,4.759828134745398
926432146243424257,2017-11-03 12:53:30+00:00,38,16,"Get alphabet in #python:

>>> import string
>>> print(string.ascii_uppercase)
ABCDEFGHIJKLMNOPQRSTUVWXYZ",False,False,https://twitter.com/python_tip/status/926432146243424257,[],[],4.465908118654584,272 days 15:56:09,272,3.7444760379926274,4.744476037992627
926034688585629703,2017-11-02 10:34:09+00:00,22,9,"Today’s tip by @ratneshkush:
Struggling for PDF generation using #Python. Use ReportLab API. 

https://t.co/PhbykBykrJ",False,False,https://twitter.com/python_tip/status/926034688585629703,"[{'url': 'https://t.co/PhbykBykrJ', 'expanded_url': 'https://www.blog.pythonlibrary.org/2010/03/08/a-simple-step-by-step-reportlab-tutorial/', 'display_url': 'blog.pythonlibrary.org/2010/03/08/a-s…'}]",[],3.912023005428146,271 days 13:36:48,271,3.741403356666903,4.741403356666903
925689685468499969,2017-11-01 11:43:14+00:00,108,50,"a += b doesn't always behave the same way as a = a + b!
https://t.co/osZWBD9HDT
#python https://t.co/D9thf9b5ZD",False,False,https://twitter.com/python_tip/status/925689685468499969,"[{'url': 'https://t.co/osZWBD9HDT', 'expanded_url': 'https://github.com/satwikkansal/wtfpython/blob/master/README.md#same-operands-different-story', 'display_url': 'github.com/satwikkansal/w…'}]","[{'url': 'https://t.co/D9thf9b5ZD', 'media_url': 'http://pbs.twimg.com/media/DNi1xvtXUAAJ7xJ.jpg', 'display_url': 'pic.twitter.com/D9thf9b5ZD'}]",5.556828061699537,270 days 14:45:53,270,3.73832992345509,4.73832992345509
925337967094304768,2017-10-31 12:25:37+00:00,53,27,"Want colorful terminal spinners? Try halo. 
https://t.co/CElzEp75vZ
#python https://t.co/roJhvlCtrb",False,False,https://twitter.com/python_tip/status/925337967094304768,"[{'url': 'https://t.co/CElzEp75vZ', 'expanded_url': 'https://github.com/ManrajGrover/halo', 'display_url': 'github.com/ManrajGrover/h…'}]","[{'url': 'https://t.co/roJhvlCtrb', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/DNd19MjWAAAzFyW.jpg', 'display_url': 'pic.twitter.com/roJhvlCtrb'}]",4.90527477843843,269 days 15:28:16,269,3.7352557389118823,4.735255738911882
924938430819090432,2017-10-30 09:58:01+00:00,40,12,"Use difflib.SequenceMatcher.find_longest_match() to find longest common substring of two strings.
https://t.co/GDY0TzWZoV
#python https://t.co/LKeV1nJyzK",False,False,https://twitter.com/python_tip/status/924938430819090432,"[{'url': 'https://t.co/GDY0TzWZoV', 'expanded_url': 'https://docs.python.org/3.6/library/difflib.html#difflib.SequenceMatcher.find_longest_match', 'display_url': 'docs.python.org/3.6/library/di…'}]","[{'url': 'https://t.co/LKeV1nJyzK', 'media_url': 'http://pbs.twimg.com/media/DNVhd3cXUAErTpF.jpg', 'display_url': 'pic.twitter.com/LKeV1nJyzK'}]",4.343805421853684,268 days 13:00:40,268,3.732180803321025,4.732180803321025
923806478422757376,2017-10-27 07:00:02+00:00,33,15,"'is not' is a binary operator, different from using is and not separately:

> 'something' is not None
True
> 'something' is (not None)
False",False,False,https://twitter.com/python_tip/status/923806478422757376,[],[],4.3694478524670215,265 days 10:02:41,265,3.7229514886628694,4.722951488662869
923317432587927552,2017-10-25 22:36:44+00:00,21,12,"If anybody wants to practice Web App development, @pybites hosts a simple challenge on our data. #selfpromo https://t.co/xi2eJrqYnX",False,False,https://twitter.com/python_tip/status/923317432587927552,"[{'url': 'https://t.co/xi2eJrqYnX', 'expanded_url': 'https://twitter.com/pybites/status/923087550079815680', 'display_url': 'twitter.com/pybites/status…'}]",[],4.060443010546419,264 days 01:39:23,264,3.719873546572305,4.719873546572305
920942575858733057,2017-10-19 09:19:55+00:00,20,14,"Try this:
>>> a = 256
>>> b = 256
>>> a is b

>>> a = 257
>>> b = 257
>>> a is b

#python 
https://t.co/GygqCOpDwn
https://t.co/EFM5AdZh7N",False,False,https://twitter.com/python_tip/status/920942575858733057,"[{'url': 'https://t.co/GygqCOpDwn', 'expanded_url': 'https://docs.python.org/3/c-api/long.html', 'display_url': 'docs.python.org/3/c-api/long.h…'}, {'url': 'https://t.co/EFM5AdZh7N', 'expanded_url': 'https://stackoverflow.com/questions/306313/is-operator-behaves-unexpectedly-with-integers', 'display_url': 'stackoverflow.com/questions/3063…'}]",[],4.143134726391533,257 days 12:22:34,257,3.6983068316196928,4.698306831619693
920210222098067457,2017-10-17 08:49:48+00:00,35,18,"https://t.co/RSQiHuUv2y
Python Graph Gallery: Learn how to visualize data in #python",False,False,https://twitter.com/python_tip/status/920210222098067457,"[{'url': 'https://t.co/RSQiHuUv2y', 'expanded_url': 'https://python-graph-gallery.com/', 'display_url': 'python-graph-gallery.com'}]",[],4.499809670330265,255 days 11:52:27,255,3.6921381054185143,4.692138105418515
918913245351514113,2017-10-13 18:56:04+00:00,27,7,"Make a slideshow from your #Jupyter Notebook:

https://t.co/j2ragxfoUR
https://t.co/n3j6JgFyWy",False,False,https://twitter.com/python_tip/status/918913245351514113,"[{'url': 'https://t.co/j2ragxfoUR', 'expanded_url': 'https://medium.com/@mjspeck/presenting-code-using-jupyter-notebook-slides-a8a3c3b59d67', 'display_url': 'medium.com/@mjspeck/prese…'}, {'url': 'https://t.co/n3j6JgFyWy', 'expanded_url': 'http://damianavila.github.io/RISE/', 'display_url': 'damianavila.github.io/RISE/'}]",[],3.8918202981106265,251 days 21:58:43,251,3.6797915395658247,4.679791539565825
918370653530554368,2017-10-12 07:00:00+00:00,21,8,"Why NOT to create a 10x10 matrix of zeroes like this?

> row = [0] * 10
> matrix = [row] * 10

Hint:Try
> matrix[3][3] = 1
> matrix

#python",False,False,https://twitter.com/python_tip/status/918370653530554368,[],[],3.828641396489095,250 days 10:02:39,250,3.676702994624704,4.676702994624704
918008268043124736,2017-10-11 07:00:01+00:00,28,10,"JSAnimation is now included in Matplotlib 2.1.0

https://t.co/iLw5Zzp8YQ

What else is new?

https://t.co/Z86YAdLZTn

#python",False,False,https://twitter.com/python_tip/status/918008268043124736,"[{'url': 'https://t.co/iLw5Zzp8YQ', 'expanded_url': 'http://nbviewer.jupyter.org/gist/ocefpaf/9730c697819e91b99f1d694983e39a8f', 'display_url': 'nbviewer.jupyter.org/gist/ocefpaf/9…'}, {'url': 'https://t.co/Z86YAdLZTn', 'expanded_url': 'https://matplotlib.org/users/whats_new.html#new-in-matplotlib-2-1', 'display_url': 'matplotlib.org/users/whats_ne…'}]",[],4.07753744390572,249 days 10:02:40,249,3.6736136865480176,4.673613686548018
916224763021885440,2017-10-06 08:53:00+00:00,35,14,"Number of times substring occurs in a string:
>>> s = 'pythonpythonpython #python'
>>> print(s.count('python'))
4
https://t.co/I0v7mA2I0r",False,False,https://twitter.com/python_tip/status/916224763021885440,"[{'url': 'https://t.co/I0v7mA2I0r', 'expanded_url': 'https://docs.python.org/3/library/stdtypes.html#str.count', 'display_url': 'docs.python.org/3/library/stdt…'}]",[],4.356708826689592,244 days 11:55:39,244,3.658155663754129,4.658155663754129
915852812310814722,2017-10-05 08:15:00+00:00,23,9,"#pandas: beware of changing elements referring to a non-existing index:
https://t.co/ARCmrgp4ht
#python https://t.co/9GpNcFRrPv",False,False,https://twitter.com/python_tip/status/915852812310814722,"[{'url': 'https://t.co/ARCmrgp4ht', 'expanded_url': 'https://www.balabit.com/blog/magic-trick-with-pandas/', 'display_url': 'balabit.com/blog/magic-tri…'}]","[{'url': 'https://t.co/9GpNcFRrPv', 'media_url': 'http://pbs.twimg.com/media/DLS53P9WAAAaYvX.jpg', 'display_url': 'pic.twitter.com/9GpNcFRrPv'}]",3.9318256327243257,243 days 11:17:39,243,3.6550617567869654,4.655061756786965
913659611001090049,2017-09-29 07:00:00+00:00,29,8,"Context Manager Using @contextmanager & yield and other ""Advanced Python Features"" at tech.io playground

https://t.co/cIL3g7txoL",False,False,https://twitter.com/python_tip/status/913659611001090049,"[{'url': 'https://t.co/cIL3g7txoL', 'expanded_url': 'https://tech.io/playgrounds/500/advanced-python-features', 'display_url': 'tech.io/playgrounds/50…'}]",[],3.9889840465642745,237 days 10:02:39,237,3.63648211704072,4.63648211704072
912940118230683648,2017-09-27 07:21:00+00:00,29,10,"You can fork your process with os.fork:

import os
res = os.fork()

if res==0:
    print(""I'm child"")
else:
    print(""I'm parent"")

#python",False,False,https://twitter.com/python_tip/status/912940118230683648,[],[],4.0943445622221,235 days 10:23:39,235,3.6302827101016484,4.630282710101648
912577229036638208,2017-09-26 07:19:00+00:00,20,7,"Guess, then try:

>>> True + True - False

In #python, boolean values are integers.

>>> isinstance(False,int)
True

(insp. by @PythonInsta)",False,False,https://twitter.com/python_tip/status/912577229036638208,[],[],3.7376696182833684,234 days 10:21:39,234,3.627181841090623,4.627181841090623
912207345312194566,2017-09-25 06:49:13+00:00,71,23,"Make your numbers, dates, etc. human readable:

>>> humanize.intword(123455913)
'123.5 million'

https://t.co/KsDi4zn50I

#python #i18n",False,False,https://twitter.com/python_tip/status/912207345312194566,"[{'url': 'https://t.co/KsDi4zn50I', 'expanded_url': 'https://pypi.python.org/pypi/humanize', 'display_url': 'pypi.python.org/pypi/humanize'}]",[],4.948759890378168,233 days 09:51:52,233,3.624080193594916,4.624080193594915
910865358973784064,2017-09-21 13:56:39+00:00,18,10,"%store magic allows you to pass data between #Jupyter notebooks.
https://t.co/VDWinlyKuh
https://t.co/mNmvKudEFq",False,False,https://twitter.com/python_tip/status/910865358973784064,"[{'url': 'https://t.co/VDWinlyKuh', 'expanded_url': 'http://arogozhnikov.github.io/2016/09/10/jupyter-features.html#%store:-lazy-passing-data-between-notebooks', 'display_url': 'arogozhnikov.github.io/2016/09/10/jup…'}, {'url': 'https://t.co/mNmvKudEFq', 'expanded_url': 'http://ipython.readthedocs.io/en/stable/config/extensions/storemagic.html', 'display_url': 'ipython.readthedocs.io/en/stable/conf…'}]",[],3.8918202981106265,229 days 16:59:18,229,3.61166579081022,4.611665790810219
910367367955386374,2017-09-20 04:57:48+00:00,28,10,"Find unique items in a #numpy array and count their frequency:
unique, counts = np.unique(a, return_counts=True)
https://t.co/AEOJTRtFls",False,False,https://twitter.com/python_tip/status/910367367955386374,"[{'url': 'https://t.co/AEOJTRtFls', 'expanded_url': 'https://www.w3resource.com/python-exercises/numpy/python-numpy-exercise-94.php', 'display_url': 'w3resource.com/python-exercis…'}]",[],4.07753744390572,228 days 08:00:27,228,3.608560229313294,4.608560229313294
909698512962461696,2017-09-18 08:40:01+00:00,24,7,"Manage your google spreadsheets with the gspread library
https://t.co/QGcEtF2Z1U
#python",False,False,https://twitter.com/python_tip/status/909698512962461696,"[{'url': 'https://t.co/QGcEtF2Z1U', 'expanded_url': 'https://github.com/burnash/gspread', 'display_url': 'github.com/burnash/gspread'}]",[],3.828641396489095,226 days 11:42:40,226,3.602346742917507,4.602346742917507
908356538435125248,2017-09-14 15:47:29+00:00,43,28,"Equality vs Identity:

>>> a = [""x"", ""y""]
>>> b = a
>>> c = [""x"", ""y""]

>>> a == b == c
True
>>> a is b
True
>>> a is c
False

#python",False,False,https://twitter.com/python_tip/status/908356538435125248,[],[],4.852030263919617,222 days 18:50:08,222,3.58991027060644,4.58991027060644
908057688311033857,2017-09-13 19:59:58+00:00,21,8,"Use parse_dates=True option in https://t.co/9kF9eFMeYn_csv to automatically recognize dates.
https://t.co/AJNMYae1aH
#python #pandas",False,False,https://twitter.com/python_tip/status/908057688311033857,"[{'url': 'https://t.co/9kF9eFMeYn', 'expanded_url': 'http://pandas.read', 'display_url': 'pandas.read'}, {'url': 'https://t.co/AJNMYae1aH', 'expanded_url': 'https://stackoverflow.com/questions/17465045/can-pandas-automatically-recognize-dates', 'display_url': 'stackoverflow.com/questions/1746…'}]",[],3.828641396489095,221 days 23:02:37,221,3.5867991640993284,4.586799164099329
907129498495197184,2017-09-11 06:31:40+00:00,55,17,"List Slicing with None as argument:

>>> a = [0, 1, 2, 3, 4, 5]
>>> LASTTHREE = slice(-3, None)
>>> a[LASTTHREE]
[3, 4, 5]

#python",False,False,https://twitter.com/python_tip/status/907129498495197184,[],[],4.672828834461906,219 days 09:34:19,219,3.5805745533353113,4.580574553335311
905742157033689088,2017-09-07 10:38:52+00:00,54,23,"You can use a comma for extracting a value from a list of length one: ""x, = s"". It's even faster than ""x = s[0]"". #python https://t.co/QG3nLuOMFc",False,False,https://twitter.com/python_tip/status/905742157033689088,[],"[{'url': 'https://t.co/QG3nLuOMFc', 'media_url': 'http://pbs.twimg.com/media/DJHXrzxXYAMPGWY.jpg', 'display_url': 'pic.twitter.com/QG3nLuOMFc'}]",4.820281565605037,215 days 13:41:31,215,3.568115684280475,4.568115684280475
905383919071236097,2017-09-06 10:55:22+00:00,25,11,"The -a option to %%cython magic command shows how much of code has not been converted to C 
#ipython #cython #python https://t.co/eKQ7qdkgGy",False,False,https://twitter.com/python_tip/status/905383919071236097,[],"[{'url': 'https://t.co/eKQ7qdkgGy', 'media_url': 'http://pbs.twimg.com/media/DJCR1SBW0AAIvkt.jpg', 'display_url': 'pic.twitter.com/eKQ7qdkgGy'}]",4.07753744390572,214 days 13:58:01,214,3.564998944171116,4.564998944171116
905009955098566656,2017-09-05 10:09:22+00:00,26,10,sys.getsizeof() shows the memory consumption directly attributed to an object. Be sure to add in the sizes for referred-to objects. #python,False,False,https://twitter.com/python_tip/status/905009955098566656,[],[],4.04305126783455,213 days 13:12:01,213,3.5618813901116577,4.561881390111658
904625971013222400,2017-09-04 08:43:33+00:00,29,11,"Pandas_profiling generates profile reports from #pandas dataframe objects.
https://t.co/fquXHLyiLD
#python https://t.co/E076G91OCn",False,False,https://twitter.com/python_tip/status/904625971013222400,"[{'url': 'https://t.co/fquXHLyiLD', 'expanded_url': 'https://github.com/JosPolfliet/pandas-profiling', 'display_url': 'github.com/JosPolfliet/pa…'}]","[{'url': 'https://t.co/E076G91OCn', 'media_url': 'http://pbs.twimg.com/media/DI3gaZEXoAET1QG.jpg', 'display_url': 'pic.twitter.com/E076G91OCn'}]",4.143134726391533,212 days 11:46:12,212,3.5587630193447564,4.558763019344756
903548376775569408,2017-09-01 09:21:34+00:00,47,15,"You can put a breakpoint into your #python program that drops to interactive terminal:

import pdb
pdb.set_trace()

https://t.co/oomAGtAh8k",False,False,https://twitter.com/python_tip/status/903548376775569408,"[{'url': 'https://t.co/oomAGtAh8k', 'expanded_url': 'http://docs.python.org/library/pdb.html', 'display_url': 'docs.python.org/library/pdb.ht…'}]",[],4.532599493153256,209 days 12:24:13,209,3.549402976501308,4.549402976501308
903255680467030016,2017-08-31 13:58:30+00:00,23,11,Need to write  #python 2/3 compatible code? Check out this cheat sheet: https://t.co/bEa4LoKa8M,False,False,https://twitter.com/python_tip/status/903255680467030016,"[{'url': 'https://t.co/bEa4LoKa8M', 'expanded_url': 'http://python-future.org/compatible_idioms.html', 'display_url': 'python-future.org/compatible_idi…'}]",[],4.04305126783455,208 days 17:01:09,208,3.546281308109597,4.546281308109597
902825127846477825,2017-08-30 09:27:38+00:00,30,6,"Use textwrap and don't worry about where to line break 

(just used it to wrap text in a Pillow image: https://t.co/c08IAHH6uY - line 83) https://t.co/FVxEqvKVxW",False,False,https://twitter.com/python_tip/status/902825127846477825,"[{'url': 'https://t.co/c08IAHH6uY', 'expanded_url': 'https://github.com/pybites/pillow-flask/blob/master/banner/banner.py', 'display_url': 'github.com/pybites/pillow…'}]","[{'url': 'https://t.co/FVxEqvKVxW', 'media_url': 'http://pbs.twimg.com/media/DId6qNNUQAA1Lv4.jpg', 'display_url': 'pic.twitter.com/FVxEqvKVxW'}]",3.8918202981106265,207 days 12:30:17,207,3.5431588070549145,4.5431588070549145
902444261572005888,2017-08-29 08:14:13+00:00,17,7,Need a syntax and style checker for #vim? Install flake8 (pip install flake8) and syntastic https://t.co/nNtyFGL4Y2,False,False,https://twitter.com/python_tip/status/902444261572005888,"[{'url': 'https://t.co/nNtyFGL4Y2', 'expanded_url': 'https://github.com/vim-syntastic/syntastic', 'display_url': 'github.com/vim-syntastic/…'}]",[],3.6635616461296463,206 days 11:16:52,206,3.5400354696759537,4.540035469675954
902057777589350400,2017-08-28 06:38:28+00:00,31,15,#Pandas Shift a column by 1 row with .shift command. See how to use it to calculate time duration and other tricks:  https://t.co/AquZAk2xdr,False,False,https://twitter.com/python_tip/status/902057777589350400,"[{'url': 'https://t.co/AquZAk2xdr', 'expanded_url': 'https://medium.com/towards-data-science/pandas-tips-and-tricks-33bcc8a40bb9', 'display_url': 'medium.com/towards-data-s…'}]",[],4.343805421853684,205 days 09:41:07,205,3.536911292181736,4.5369112921817365
900993650347302913,2017-08-25 08:10:00+00:00,18,7,"Create a download link in your #Jupyter notebook:

from IPython.display import FileLink
FileLink('data/input.csv')

https://t.co/WAuX2rQ6bL",False,False,https://twitter.com/python_tip/status/900993650347302913,"[{'url': 'https://t.co/WAuX2rQ6bL', 'expanded_url': 'https://stackoverflow.com/questions/24437661/retrieving-files-from-remote-ipython-notebook-server', 'display_url': 'stackoverflow.com/questions/2443…'}]",[],3.6888794541139363,202 days 11:12:39,202,3.5275336793148035,4.5275336793148035
900631011268153344,2017-08-24 08:09:00+00:00,51,25,"#python formatting tip:
d = dict(name = 'Joe', age = 30)
print('{name} is {age} years old'.format_map(d))

Joe is 30 years old",False,False,https://twitter.com/python_tip/status/900631011268153344,[],[],4.844187086458591,201 days 11:11:39,201,3.5244061012037853,4.524406101203786
900308908945944576,2017-08-23 10:49:05+00:00,23,5,"Recall inputs and outputs of previous cells in #Jupyter notebook with In[6], Out[2], _2 https://t.co/OkXgGE9GEN",False,False,https://twitter.com/python_tip/status/900308908945944576,[],"[{'url': 'https://t.co/OkXgGE9GEN', 'media_url': 'http://pbs.twimg.com/media/DH6KJewW0AAdJp0.jpg', 'display_url': 'pic.twitter.com/OkXgGE9GEN'}]",3.6635616461296463,200 days 13:51:44,200,3.5212776625483566,4.521277662548357
899919008119566336,2017-08-22 08:59:45+00:00,18,11,"Profile #python code in #Jupyter notebooks with line_profiler:
%lprun -f myfunc myfunc()
https://t.co/U3iBevj6Bw",False,False,https://twitter.com/python_tip/status/899919008119566336,"[{'url': 'https://t.co/U3iBevj6Bw', 'expanded_url': 'http://mortada.net/easily-profile-python-code-in-jupyter.html', 'display_url': 'mortada.net/easily-profile…'}]",[],3.9512437185814275,199 days 12:02:24,199,3.5181483589096336,4.518148358909634
899552663439802368,2017-08-21 08:44:02+00:00,38,17,"Check if two words are anagrams:

from collections import Counter
def is_anagram(s1, s2):
     return Counter(s1) == Counter(s2)

#python",False,False,https://twitter.com/python_tip/status/899552663439802368,[],[],4.499809670330265,198 days 11:46:41,198,3.5150181857383433,4.515018185738343
898545993351909376,2017-08-18 14:03:53+00:00,21,4,"Last week we reached 1000 follower count. Thank you all! This is a wordcloud of our followers' profile texts.

https://t.co/5DjBavZTGK https://t.co/WD0jFl1NdC",False,False,https://twitter.com/python_tip/status/898545993351909376,"[{'url': 'https://t.co/5DjBavZTGK', 'expanded_url': 'https://gist.github.com/simecek/ac263a371830cafe309d88a5d099b887', 'display_url': 'gist.github.com/simecek/ac263a…'}]","[{'url': 'https://t.co/WD0jFl1NdC', 'media_url': 'http://pbs.twimg.com/media/DHhGoKpXYAETnpQ.png', 'display_url': 'pic.twitter.com/WD0jFl1NdC'}]",3.5263605246161616,195 days 17:06:32,195,3.5056224010144517,4.505622401014452
898099306820972544,2017-08-17 08:28:55+00:00,50,20,"Ever miscounted the number of 0? Underscores in #python3.6 can help you.
>>> m = 1_000_000_000
>>> m
1000000000
https://t.co/2z5HRtMtXx",False,False,https://twitter.com/python_tip/status/898099306820972544,"[{'url': 'https://t.co/2z5HRtMtXx', 'expanded_url': 'https://docs.python.org/3/whatsnew/3.6.html#pep-515-underscores-in-numeric-literals', 'display_url': 'docs.python.org/3/whatsnew/3.6…'}]",[],4.709530201312334,194 days 11:31:34,194,3.5024887011948462,4.502488701194846
897728384976928768,2017-08-16 07:55:00+00:00,47,17,"In Jupyter Notebook, use Shift+Tab to show a tooltip with arguments of function/class and docstring. https://t.co/taZQXHWOxE",False,False,https://twitter.com/python_tip/status/897728384976928768,[],"[{'url': 'https://t.co/taZQXHWOxE', 'media_url': 'http://pbs.twimg.com/media/DHTScurXoAAUfBZ.jpg', 'display_url': 'pic.twitter.com/taZQXHWOxE'}]",4.59511985013459,193 days 10:57:39,193,3.4993541072743284,4.499354107274328
895915187626233856,2017-08-11 07:50:00+00:00,17,7,"Visualize “missingness” of data in your #pandas dataframes with missingno.
https://t.co/P8Oxzl82vP https://t.co/yWBUFG8ikT",False,False,https://twitter.com/python_tip/status/895915187626233856,"[{'url': 'https://t.co/P8Oxzl82vP', 'expanded_url': 'https://github.com/ResidentMario/missingno', 'display_url': 'github.com/ResidentMario/…'}]","[{'url': 'https://t.co/yWBUFG8ikT', 'media_url': 'http://pbs.twimg.com/media/DG43ClzXgAEklX0.jpg', 'display_url': 'pic.twitter.com/yWBUFG8ikT'}]",3.6635616461296463,188 days 10:52:39,188,3.4836675391792293,4.48366753917923
894841524512600064,2017-08-08 08:43:39+00:00,31,13,"re-arrange tuples by indices
>>> map(operator.itemgetter(2,1,0),[(1,'x','cat'),(2, 'y', 'dog')])

[('cat', 'x', 1), ('dog', 'y', 2)]
#python",False,False,https://twitter.com/python_tip/status/894841524512600064,[],[],4.2626798770413155,185 days 11:46:18,185,3.474244531101213,4.474244531101213
893448228376641536,2017-08-04 12:27:11+00:00,19,4,"Fetch zipped file without temporary extracting it to disk:

https://t.co/MaVEA6PA1t

#python https://t.co/lkeOiumSLh",False,False,https://twitter.com/python_tip/status/893448228376641536,"[{'url': 'https://t.co/MaVEA6PA1t', 'expanded_url': 'https://gist.github.com/simecek/2641371153eff2a2a87859977a07b240', 'display_url': 'gist.github.com/simecek/264137…'}]","[{'url': 'https://t.co/lkeOiumSLh', 'media_url': 'http://pbs.twimg.com/media/DGYqaeOXcAMTBOP.jpg', 'display_url': 'pic.twitter.com/lkeOiumSLh'}]",3.4657359027997265,181 days 15:29:50,181,3.461667330947832,4.461667330947832
892671812160684032,2017-08-02 09:01:59+00:00,42,23,"%%HTML magic renders #jupyter notebook cell as HTML, so you can embed an image or other media:

https://t.co/KfmfPz27j5 https://t.co/RiToK88XJ1",False,False,https://twitter.com/python_tip/status/892671812160684032,"[{'url': 'https://t.co/KfmfPz27j5', 'expanded_url': 'https://blog.dominodatalab.com/lesser-known-ways-of-using-notebooks/', 'display_url': 'blog.dominodatalab.com/lesser-known-w…'}]","[{'url': 'https://t.co/RiToK88XJ1', 'media_url': 'http://pbs.twimg.com/media/DGNoBBsXgAEH3uK.jpg', 'display_url': 'pic.twitter.com/RiToK88XJ1'}]",4.718498871295094,179 days 12:04:38,179,3.455372994539106,4.455372994539106
892321459196108800,2017-08-01 09:49:49+00:00,41,14,"Working with NumPy arrays instead of Python lists gives you a significant speedup

https://t.co/X7jtdH4mHX

#numpy #python #needforspeed https://t.co/DacXBclXS2",False,False,https://twitter.com/python_tip/status/892321459196108800,"[{'url': 'https://t.co/X7jtdH4mHX', 'expanded_url': 'https://stackoverflow.com/a/994545', 'display_url': 'stackoverflow.com/a/994545'}]","[{'url': 'https://t.co/DacXBclXS2', 'media_url': 'http://pbs.twimg.com/media/DGIpVMiXgAArMxU.jpg', 'display_url': 'pic.twitter.com/DacXBclXS2'}]",4.430816798843313,178 days 12:52:28,178,3.4522243763866194,4.452224376386619
890481887663210496,2017-07-27 08:00:01+00:00,19,5,"Write data into csv file:
import csv
with open(""test.csv"", ""w"") as f:
    wr = csv.writer(f)
    for line in data:
        wr.writerow(line)",False,False,https://twitter.com/python_tip/status/890481887663210496,[],[],3.5553480614894135,173 days 11:02:40,173,3.4364665955858302,4.436466595585831
890119498380058625,2017-07-26 08:00:00+00:00,18,11,"You can use atexit.register as a decorator:
@atexit.register
def goodbye():
    print("" #python is closing down"")

https://t.co/BHm69FeRem",False,False,https://twitter.com/python_tip/status/890119498380058625,"[{'url': 'https://t.co/BHm69FeRem', 'expanded_url': 'https://docs.python.org/3/library/atexit.html', 'display_url': 'docs.python.org/3/library/atex…'}]",[],3.9512437185814275,172 days 11:02:39,172,3.433312067806079,4.433312067806079
889757112884187136,2017-07-25 08:00:01+00:00,21,11,"List all packages (&version info):

pip freeze > requirements.txt

Install all packages in requirements.txt

pip install -r requirements.txt",False,False,https://twitter.com/python_tip/status/889757112884187136,[],[],4.007333185232471,171 days 11:02:40,171,3.430156538354059,4.430156538354058
887625256453722114,2017-07-19 10:48:47+00:00,21,13,"How to introspect an object in #python:

l = [1, 2, 3]
dir(l)
type(l)
id(l)

# see also inspect module
import inspect
inspect.getmembers(l)",False,False,https://twitter.com/python_tip/status/887625256453722114,[],[],4.110873864173311,165 days 13:51:26,165,3.411202045157758,4.411202045157758
887242145261899777,2017-07-18 09:26:26+00:00,36,13,"a = ""roses""
b = ""red""
'{a} are {b}'.format(%%locals())

#python3.6
f'{a} are {b}'
'roses are red'

For more, see https://t.co/sLvaHdXTQL",False,False,https://twitter.com/python_tip/status/887242145261899777,"[{'url': 'https://t.co/sLvaHdXTQL', 'expanded_url': 'https://pyformat.info/', 'display_url': 'pyformat.info'}]",[],4.330733340286331,164 days 12:29:05,164,3.4080393640303734,4.408039364030373
886854735260602368,2017-07-17 07:47:00+00:00,30,12,"The symmetric_difference method finds elements that are in exactly one of the two sets:
>>> {2,4,6} ^ {1,2,3,4}
{1, 3, 6}
#python",False,False,https://twitter.com/python_tip/status/886854735260602368,[],[],4.204692619390966,163 days 10:49:39,163,3.4048756419901185,4.4048756419901185
885770846421360640,2017-07-14 08:00:01+00:00,21,9,"Find k closest numbers to a central value:
k = 4
cnt = 11
heapq.nsmallest(k, range(50), key = lambda x: abs(x-cnt))
[11, 10, 12, 9]
#python",False,False,https://twitter.com/python_tip/status/885770846421360640,[],[],3.8918202981106265,160 days 11:02:40,160,3.3953781795370497,4.395378179537049
885046077782581248,2017-07-12 08:00:02+00:00,27,8,"Use functools.partial to prefill arguments:

> def foo(a,b):
    return a+b
> bar = partial(foo, a=1)
> bar(3)
4

https://t.co/VWb1OKSN8l",False,False,https://twitter.com/python_tip/status/885046077782581248,"[{'url': 'https://t.co/VWb1OKSN8l', 'expanded_url': 'https://stackoverflow.com/a/15331967', 'display_url': 'stackoverflow.com/a/15331967'}]",[],3.9512437185814275,158 days 11:02:41,158,3.3890412384663775,4.389041238466378
884353407380852736,2017-07-10 10:07:37+00:00,45,19,"Use the pathlib module to recursively search for files 
>>> from pathlib import Path
>>> Path('.').glob('**/*.py')
#python",False,False,https://twitter.com/python_tip/status/884353407380852736,[],[],4.634728988229636,156 days 13:10:16,156,3.3827000086277565,4.382700008627756
882871740468035584,2017-07-06 08:00:00+00:00,24,12,Create XKCD-like plots with #matplotlib: https://t.co/AzSFgaof7W #python https://t.co/19OX0Hy8k8,False,False,https://twitter.com/python_tip/status/882871740468035584,"[{'url': 'https://t.co/AzSFgaof7W', 'expanded_url': 'http://jakevdp.github.io/blog/2013/07/10/XKCD-plots-in-matplotlib/', 'display_url': 'jakevdp.github.io/blog/2013/07/1…'}]","[{'url': 'https://t.co/19OX0Hy8k8', 'media_url': 'http://pbs.twimg.com/media/DDmTD2LXoAANGaG.jpg', 'display_url': 'pic.twitter.com/19OX0Hy8k8'}]",4.110873864173311,152 days 11:02:39,152,3.370004515685195,4.370004515685196
882509359657254912,2017-07-05 08:00:02+00:00,18,10,"Check #python process memory usage with psutil:
>>> pr = psutil.Process(os.getpid())
>>> print(pr.memory_info().rss)
https://t.co/9maqySldnc",False,False,https://twitter.com/python_tip/status/882509359657254912,"[{'url': 'https://t.co/9maqySldnc', 'expanded_url': 'http://pythonhosted.org/psutil/#psutil.Process.memory_info', 'display_url': 'pythonhosted.org/psutil/#psutil…'}]",[],3.8918202981106265,151 days 11:02:41,151,3.3668278965327407,4.36682789653274
882146972626329606,2017-07-04 08:00:02+00:00,19,7,"Get n items of a generator:
>>> g = (x**3 for x in range(1,101))
>>> for x in itertools.islice(g,4):
...     print(x)
1
8
27
64
#python",False,False,https://twitter.com/python_tip/status/882146972626329606,[],[],3.713572066704308,150 days 11:02:41,150,3.3636501683874536,4.363650168387453
881784587973677057,2017-07-03 08:00:03+00:00,38,13,"When slicing a sequence, the third parameter is the step:
>>> x = '01234567890'
>>> x[::3]
'0369'
#python",False,False,https://twitter.com/python_tip/status/881784587973677057,[],[],4.356708826689592,149 days 11:02:42,149,3.360471325676911,4.360471325676912
880678711393177601,2017-06-30 06:45:41+00:00,35,16,#Matplotlib supports interactive controls: https://t.co/lpjPNPJQFr https://t.co/hCiygiBMeE #Python https://t.co/hK6PaLPdG8,False,False,https://twitter.com/python_tip/status/880678711393177601,"[{'url': 'https://t.co/lpjPNPJQFr', 'expanded_url': 'https://matplotlib.org/examples/widgets/index.html', 'display_url': 'matplotlib.org/examples/widge…'}, {'url': 'https://t.co/hCiygiBMeE', 'expanded_url': 'https://matplotlib.org/examples/event_handling/index.html', 'display_url': 'matplotlib.org/examples/event…'}]","[{'url': 'https://t.co/hK6PaLPdG8', 'media_url': 'http://pbs.twimg.com/ext_tw_video_thumb/880678677092212737/pu/img/pgBVRYdQVyet3IEM.jpg', 'display_url': 'pic.twitter.com/hK6PaLPdG8'}]",4.430816798843313,146 days 09:48:20,146,3.350928051947319,4.350928051947319
879610259664404480,2017-06-27 08:00:02+00:00,25,8,"Add a progress meter to your loops:
from tqdm import tqdm
for i in tqdm(range(10)):
    do something
https://t.co/ypeSj7jo3v
#python",False,False,https://twitter.com/python_tip/status/879610259664404480,"[{'url': 'https://t.co/ypeSj7jo3v', 'expanded_url': 'https://github.com/tqdm/tqdm', 'display_url': 'github.com/tqdm/tqdm'}]",[],3.912023005428146,143 days 11:02:41,143,3.3413745335037905,4.3413745335037905
879274115189919745,2017-06-26 09:44:19+00:00,16,8,"Calculate the difference between consecutive elements in list:
>>> import numpy
>>> numpy.diff([4,3,21])
array([-1, 18])
#python #numpy",False,False,https://twitter.com/python_tip/status/879274115189919745,[],[],3.713572066704308,142 days 12:46:58,142,3.338187722204001,4.338187722204001
877398427121930240,2017-06-21 05:31:00+00:00,34,14,"Use named groups for more readable regular expressions:

https://t.co/Hu7fU20Vkz
https://t.co/B30VUIXc4f https://t.co/ts6PAPU4C5",False,False,https://twitter.com/python_tip/status/877398427121930240,"[{'url': 'https://t.co/Hu7fU20Vkz', 'expanded_url': 'https://stackoverflow.com/questions/10059673/named-regular-expression-group-pgroup-nameregexp-what-does-p-stand-for', 'display_url': 'stackoverflow.com/questions/1005…'}, {'url': 'https://t.co/B30VUIXc4f', 'expanded_url': 'https://docs.python.org/3/library/re.html', 'display_url': 'docs.python.org/3/library/re.h…'}]","[{'url': 'https://t.co/ts6PAPU4C5', 'media_url': 'http://pbs.twimg.com/media/DCrSSp9XkAA5ay5.jpg', 'display_url': 'pic.twitter.com/ts6PAPU4C5'}]",4.343805421853684,137 days 08:33:39,137,3.322236095160944,4.322236095160944
876706551788163072,2017-06-19 07:41:45+00:00,43,20,"Learn to parse command line arguments with argparse:

https://t.co/cUIPGC5Rn7
https://t.co/OrjT9CoW2N https://t.co/9zCs4xIUk5",False,False,https://twitter.com/python_tip/status/876706551788163072,"[{'url': 'https://t.co/cUIPGC5Rn7', 'expanded_url': 'https://docs.python.org/2/howto/argparse.html', 'display_url': 'docs.python.org/2/howto/argpar…'}, {'url': 'https://t.co/OrjT9CoW2N', 'expanded_url': 'http://stackoverflow.com/questions/7427101/dead-simple-argparse-example-wanted-1-argument-3-results', 'display_url': 'stackoverflow.com/questions/7427…'}]","[{'url': 'https://t.co/9zCs4xIUk5', 'media_url': 'http://pbs.twimg.com/media/DCqv9PvXYAA2hNF.jpg', 'display_url': 'pic.twitter.com/9zCs4xIUk5'}]",4.6443908991413725,135 days 10:44:24,135,3.3158471287680245,4.3158471287680245
875623983307264000,2017-06-16 08:00:00+00:00,43,22,"str.startswith() accepts also a tuple of prefixes to look for:
>>> ""somestring"".startswith((""aa"", ""xx"", ""z"", ""som""))
True
#python",False,False,https://twitter.com/python_tip/status/875623983307264000,[],[],4.700480365792417,132 days 11:02:39,132,3.306254619386451,4.306254619386451
875242817857171456,2017-06-15 06:45:23+00:00,28,15,Add interactivity to your #Jupyter notebooks with ipywidgets. https://t.co/Ex1H0joaMD https://t.co/54tOsgZCDY,False,False,https://twitter.com/python_tip/status/875242817857171456,"[{'url': 'https://t.co/Ex1H0joaMD', 'expanded_url': 'http://ipywidgets.readthedocs.io/en/latest/index.html', 'display_url': 'ipywidgets.readthedocs.io/en/latest/inde…'}]","[{'url': 'https://t.co/54tOsgZCDY', 'media_url': 'http://pbs.twimg.com/ext_tw_video_thumb/875242780624375808/pu/img/SFdICAW_lfqG3ONf.jpg', 'display_url': 'pic.twitter.com/54tOsgZCDY'}]",4.304065093204169,131 days 09:48:02,131,3.303054676126477,4.303054676126477
874899208393826304,2017-06-14 08:00:00+00:00,29,7,"Use list comprehension to sum two lists element-wise:
>>> x+y for x, y in zip(list1, list2)
#python",False,False,https://twitter.com/python_tip/status/874899208393826304,[],[],3.9318256327243257,130 days 11:02:39,130,3.2998535023962132,4.299853502396213
874536822407286784,2017-06-13 08:00:01+00:00,20,10,">>> a=collections.Counter([1, 2, 2])
>>> b=collections.Counter([2, 2, 3])
>>> a+b
Counter({2: 4, 1: 1, 3: 1})
>>> a-b
Counter({1: 1})",False,False,https://twitter.com/python_tip/status/874536822407286784,[],[],3.9318256327243257,129 days 11:02:40,129,3.296651091568721,4.296651091568721
874159340323610627,2017-06-12 07:00:02+00:00,40,16,"Read tables from a webpage into a list of #pandas dataframes:

dfs = https://t.co/KBWVZb2pZj_html('https://t.co/0hkIqtoWE4’)

#python https://t.co/ikKblTaXQB",False,False,https://twitter.com/python_tip/status/874159340323610627,"[{'url': 'https://t.co/KBWVZb2pZj', 'expanded_url': 'http://pd.read', 'display_url': 'pd.read'}, {'url': 'https://t.co/0hkIqtoWE4', 'expanded_url': 'https://en.wikipedia.org/wiki/List_of_countries_by_alcohol_consumption_per_capita', 'display_url': 'en.wikipedia.org/wiki/List_of_c…'}]","[{'url': 'https://t.co/ikKblTaXQB', 'media_url': 'http://pbs.twimg.com/media/DCEDGpjXoAAy7mh.jpg', 'display_url': 'pic.twitter.com/ikKblTaXQB'}]",4.48863636973214,128 days 10:02:41,128,3.2934474367876847,4.293447436787685
872719047401644032,2017-06-08 07:36:49+00:00,30,7,"Get first and last line of a file:
>>> with open(""somefile"") as f:
    first, *_, last = f.readlines()

#python3",False,False,https://twitter.com/python_tip/status/872719047401644032,[],[],3.9512437185814275,124 days 10:39:28,124,3.2806202339392128,4.280620233939213
872343617330741248,2017-06-07 06:45:00+00:00,25,11,"We like zip, what about unzip? 
> x = ('Al',25), ('Bob',26), ('Dan',47)
> names, ages = zip(*x)
> names
('Al','Bob','Dan')
> ages
(25,26,47)",False,False,https://twitter.com/python_tip/status/872343617330741248,[],[],4.07753744390572,123 days 09:47:39,123,3.277410250630458,4.277410250630458
871981984964390914,2017-06-06 06:48:00+00:00,14,4,"Capitalize first letters:
>>> import string
>>> string.capwords('some random words')
'Some Random Words'

#python 
https://t.co/VjYbkGaL1P",False,False,https://twitter.com/python_tip/status/871981984964390914,"[{'url': 'https://t.co/VjYbkGaL1P', 'expanded_url': 'http://stackoverflow.com/questions/1549641/how-to-capitalize-the-first-letter-of-each-word-in-a-string-python/12336911#12336911', 'display_url': 'stackoverflow.com/questions/1549…'}]",[],3.295836866004329,122 days 09:50:39,122,3.274198979426836,4.274198979426836
870188166325600256,2017-06-01 08:00:00+00:00,23,6,"Working with paths is easy in #Python3
from pathlib import Path
d = Path(""/etc"")
filepath = d/""test.txt""
if filepath.exists():
    somestuff",False,False,https://twitter.com/python_tip/status/870188166325600256,[],[],3.7376696182833684,117 days 11:02:39,117,3.258123038053272,4.258123038053272
868012579670679553,2017-05-26 07:55:00+00:00,26,11,"consecutive pairs:
>>> mylist = [1, 2, 3, 4]
>>> a = list(zip(mylist, mylist[1:]))
>>> print(a)
[(1, 2), (2, 3), (3, 4)]
#python",False,False,https://twitter.com/python_tip/status/868012579670679553,[],[],4.0943445622221,111 days 10:57:39,111,3.2387878573429116,4.238787857342912
866518988867555328,2017-05-22 05:00:00+00:00,58,51,"All #PyCon2017 talks are online

https://t.co/cOZoelIh1g

Feeling overwhelmed? Here is the list:

https://t.co/mqSA0QMoJx",False,False,https://twitter.com/python_tip/status/866518988867555328,"[{'url': 'https://t.co/cOZoelIh1g', 'expanded_url': 'https://www.youtube.com/channel/UCrJhliKNQ8g0qoE_zvL8eVg', 'display_url': 'youtube.com/channel/UCrJhl…'}, {'url': 'https://t.co/mqSA0QMoJx', 'expanded_url': 'https://us.pycon.org/2017/schedule/talks/', 'display_url': 'us.pycon.org/2017/schedule/…'}]",[],5.356586274672012,107 days 08:02:39,107,3.2258703499705055,4.2258703499705055
862578271422042112,2017-05-11 08:01:00+00:00,15,10,"locals() and globals() return a dictionary of local / global variables:

>>> a = 1
>>> b = 1
>>> locals()
{'a': 1, 'b': 1, ...}

#python",False,False,https://twitter.com/python_tip/status/862578271422042112,[],[],3.828641396489095,96 days 11:03:39,96,3.190230585984266,4.190230585984266
860071251859038208,2017-05-04 09:59:00+00:00,15,9,"If you miss an equivalent of C’s ”?” ternary operator, try

>>> a = 1
>>> b = 2
>>> 1 if a > b else -1 
-1

#python",False,False,https://twitter.com/python_tip/status/860071251859038208,[],[],3.7612001156935624,89 days 13:01:39,89,3.1674591912572514,4.167459191257251
859686468628774912,2017-05-03 08:30:00+00:00,16,6,">>> words = 'I want only hello and world'.split()
>>> indexes = 3, 5
>>> from operator import itemgetter
>>> itemgetter(*indexes)(words) https://t.co/WOT9SzcZ1E",False,False,https://twitter.com/python_tip/status/859686468628774912,[],"[{'url': 'https://t.co/WOT9SzcZ1E', 'media_url': 'http://pbs.twimg.com/media/C-xJ3XuXcAA261v.jpg', 'display_url': 'pic.twitter.com/WOT9SzcZ1E'}]",3.5553480614894135,88 days 11:32:39,88,3.1642002051726963,4.164200205172696
859320306472759296,2017-05-02 08:15:01+00:00,7,7,"Chaining Of Comparison Operators

>>> n = 10
>>> result = 1 < n < 20
>>> print(result)
True
>>> result = 1 > n <= 9
>>> print(result)
False",False,False,https://twitter.com/python_tip/status/859320306472759296,[],[],3.367295829986474,87 days 11:17:40,87,3.1609397239001926,4.160939723900192
856719669327253505,2017-04-25 04:01:00+00:00,17,9,"Saving #python object to file

import pickle
a = {'hello': 'world'}

pickle.dump(a, open(""save.p"", ""wb""))

pickle.load(open(""save.p"", ""rb""))",False,False,https://twitter.com/python_tip/status/856719669327253505,[],[],3.8066624897703196,80 days 07:03:39,80,3.138074121244367,4.138074121244367
856402336897544192,2017-04-24 07:00:02+00:00,17,12,"Measure object size in memory

> import sys
> x=1
> sys.getsizeof(x)
28
> y=1.0
> sys.getsizeof(y)
24
> z=""1""
> sys.getsizeof(z)
50
#python3",False,False,https://twitter.com/python_tip/status/856402336897544192,[],[],3.9889840465642745,79 days 10:02:41,79,3.1348015237642897,4.13480152376429
855360210818527233,2017-04-21 09:59:00+00:00,27,12,">>> numbers = ['9','44','8','222']
>>> max(numbers)
'9'
>>> max(numbers, key=int)
'222'
#python",False,False,https://twitter.com/python_tip/status/855360210818527233,[],[],4.1588830833596715,76 days 13:01:39,76,3.1249745190326053,4.124974519032605
853840699795673088,2017-04-17 05:21:01+00:00,10,7,"#python #fun

>>> from __future__ import braces
  File ""<stdin>"", line 1
SyntaxError: not a chance

#EasterEgg https://t.co/O0AYLTFjjn",False,False,https://twitter.com/python_tip/status/853840699795673088,"[{'url': 'https://t.co/O0AYLTFjjn', 'expanded_url': 'https://scott.yang.id.au/2006/09/python-and-braces.html', 'display_url': 'scott.yang.id.au/2006/09/python…'}]",[],3.4657359027997265,72 days 08:23:40,72,3.111850188044344,4.111850188044344
852828279019057152,2017-04-14 10:18:01+00:00,18,7,"Merge two dictionaries:
x = {'a':1, 'b':2}
y = {'c':3, 'd':4}
z = {**x, **y}

output:
z = {'a': 1, 'b': 2, 'c': 3, 'd': 4}
#python3",False,False,https://twitter.com/python_tip/status/852828279019057152,[],[],3.6888794541139363,69 days 13:20:40,69,3.101990541400831,4.101990541400831
849834299985625092,2017-04-06 04:01:00+00:00,12,5,"Make a dictionary of 2 lists
>>> name = ('bob','tim')
>>> age = (35,27)
>>> d = dict(zip(name,age))
>>> d
{'bob': 35, 'tim': 27}
by @pybites",False,False,https://twitter.com/python_tip/status/849834299985625092,[],[],3.332204510175204,61 days 07:03:39,61,3.075628472978111,4.075628472978111
846210427906375681,2017-03-27 04:01:02+00:00,9,4,"Flattening lists:
a = [[1, 2], [3, 4], [5, 6]]
list(itertools.chain.from_iterable(a))
[1, 2, 3, 4, 5, 6]
#python see https://t.co/CWt7WIWjDG",False,False,https://twitter.com/python_tip/status/846210427906375681,"[{'url': 'https://t.co/CWt7WIWjDG', 'expanded_url': 'http://sahandsaba.com/thirty-python-language-features-and-tricks-you-may-not-know.html#id1', 'display_url': 'sahandsaba.com/thirty-python-…'}]",[],3.091042453358316,51 days 07:03:41,51,3.042531003445959,4.0425310034459585
845153205738651648,2017-03-24 06:00:01+00:00,12,10,"from @pybites: Reverse a string with negative stride 
>>> s = 'hello world'
>>> ''.join(reversed(s))
'dlrow olleh'
>>> s[::-1]
'dlrow olleh'",False,False,https://twitter.com/python_tip/status/845153205738651648,[],[],3.7612001156935624,48 days 09:02:40,48,3.032570010576656,4.032570010576656
844126441117810690,2017-03-21 10:00:01+00:00,9,5,"Use sets for intersection of lists:
>>> a = [1,2,3,4,5,9,10,11]
>>> b = [4,5,6,7]
>>> set(a).intersection(b)
set([4, 5])
#python",False,False,https://twitter.com/python_tip/status/844126441117810690,[],[],3.2188758248682006,45 days 13:02:40,45,3.022594289465084,4.022594289465085
841861768364363777,2017-03-15 04:01:01+00:00,4,8,"Slice assignment:
>>> a = range(5)
>>> a
[0, 1, 2, 3, 4]
>>> a[1:-1] = []
>>> a
[0, 4]

#python",False,False,https://twitter.com/python_tip/status/841861768364363777,[],[],3.367295829986474,39 days 07:03:40,39,3.002598507065552,4.002598507065552
841136990770814977,2017-03-13 04:01:00+00:00,13,8,"Name elements in tuples:
>>> Point = collections.namedtuple('Point', ['x', 'y'])
>>> p = Point(x=1.0, y=2.0)
>>> p.x
1.0
>>> p.y
2.0
#python",False,False,https://twitter.com/python_tip/status/841136990770814977,[],[],3.6375861597263857,37 days 07:03:39,37,2.99592007395234,3.99592007395234
838705722779107328,2017-03-06 11:00:01+00:00,11,5,"Flatten a list of lists with sum

>>> sum([[1, 2], [3], [4, 5], [6, 7, 8]], [])
[1, 2, 3, 4, 5, 6, 7, 8]

tip by @pybites #python",False,False,https://twitter.com/python_tip/status/838705722779107328,[],[],3.295836866004329,30 days 14:02:40,30,2.9724935736149884,3.9724935736149884
