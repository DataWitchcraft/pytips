id,created_at,favorite_count,retweet_count,full_text,is_reply,is_retweet,url,urls,media
1325839863309078529,2020-11-09 16:37:10+00:00,41,8,"`split-folders` package makes it easy to split images in the input folder into train, validation and test folders:

>>> import splitfolders
>>> splitfolders.ratio(""input_folder"", output=""output"", seed=1337, ratio=(.8, .1, .1)

https://t.co/wTAwQFAIOK https://t.co/ALPBNnwfUJ",False,False,https://twitter.com/python_tip/status/1325839863309078529,"[{'url': 'https://t.co/wTAwQFAIOK', 'expanded_url': 'https://pypi.org/project/split-folders/', 'display_url': 'pypi.org/project/split-…'}]","[{'url': 'https://t.co/ALPBNnwfUJ', 'media_url': 'http://pbs.twimg.com/media/EmZUPyKW8AIIUbj.png', 'display_url': 'pic.twitter.com/ALPBNnwfUJ'}]"
1324436571920101376,2020-11-05 19:41:00+00:00,81,26,"Read multiple csv from a zip file: 

from zipfile import ZipFile
import pandas as pd

zf = ZipFile(""z_f.zip"")
df_lst = [https://t.co/KBWVZb2pZj_csv(https://t.co/8dJA0i8dng(fle.filename)) for fle in zf.infolist() if fle.filename.endswith("".csv"")]

tip by @PetraVidnerova #Pandas",False,False,https://twitter.com/python_tip/status/1324436571920101376,"[{'url': 'https://t.co/KBWVZb2pZj', 'expanded_url': 'http://pd.read', 'display_url': 'pd.read'}]",[]
1324205046154735621,2020-11-05 04:21:00+00:00,94,18,"#pandas DataFrame.explode() will transform each element of a list-like to a row

df = pd.DataFrame([{'var1': ['a', 'b', 'c', 'd'], 'var2': 1}, {'var1': ('x', 'y'), 'var2': 3}])

df.explode('var1')

https://t.co/lBalG6xeBl https://t.co/cmX791nW6I",False,False,https://twitter.com/python_tip/status/1324205046154735621,"[{'url': 'https://t.co/lBalG6xeBl', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.explode.html', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}]","[{'url': 'https://t.co/cmX791nW6I', 'media_url': 'http://pbs.twimg.com/media/EmAgzicXgAEe7J7.jpg', 'display_url': 'pic.twitter.com/cmX791nW6I'}]"
1324090855741902849,2020-11-04 20:47:15+00:00,73,13,"In #Python3, the print function has options
* 'sep' to separate the arguments
* 'end' to be printed after the last argument

>>> lst = ['a', 'b', 'c'] 
>>> print(*lst) 
a b c 
>>> print(*lst, sep=', ', end='!!!\n') 
a, b, c!!!

https://t.co/Jm8LgioMJb",False,False,https://twitter.com/python_tip/status/1324090855741902849,"[{'url': 'https://t.co/Jm8LgioMJb', 'expanded_url': 'https://docs.python.org/3/library/functions.html#print', 'display_url': 'docs.python.org/3/library/func…'}]",[]
1323402107010121728,2020-11-02 23:10:24+00:00,12,7,"PyData Global: fully virtual event 

Nov 11th-15th  

talks, tutorials, posters and sprints

tickets are sold under a pay-what-you-can pricing model

https://t.co/rw4XQKuRqq

#Python #PyDataGlobal2020 #pydata",False,False,https://twitter.com/python_tip/status/1323402107010121728,"[{'url': 'https://t.co/rw4XQKuRqq', 'expanded_url': 'https://global.pydata.org/', 'display_url': 'global.pydata.org'}]",[]
1322073500891275267,2020-10-30 07:11:00+00:00,34,9,"I Like Notebooks

@jeremyphoward's recent talk about Jupyter notebooks, also #nbdev and #fastdoc

https://t.co/srMIchVD7p",False,False,https://twitter.com/python_tip/status/1322073500891275267,"[{'url': 'https://t.co/srMIchVD7p', 'expanded_url': 'https://www.youtube.com/watch?v=9Q6sLbz37gk', 'display_url': 'youtube.com/watch?v=9Q6sLb…'}]",[]
1321975163752206338,2020-10-30 00:40:14+00:00,28,6,"Python can handle complex numbers

>>> import cmath
>>> 
>>> x,y = 5,1
>>> z = complex(x,y)
>>> 
>>> z.real, z.imag
(5.0, 1.0)
>>> z
(5+1j)
>>> 
>>> w = cmath.polar(z)
>>> w
(5.0990195135927845, 0.19739555984988075) https://t.co/ZVjmm7IBln",False,False,https://twitter.com/python_tip/status/1321975163752206338,"[{'url': 'https://t.co/ZVjmm7IBln', 'expanded_url': 'https://twitter.com/SciPyTip/status/1321926042634850304', 'display_url': 'twitter.com/SciPyTip/statu…'}]",[]
1321766750682230785,2020-10-29 10:52:05+00:00,35,5,"Generate a summary of your dataset with `pandas_profiling` package

>>> import pandas_profiling
>>> df.profile_report()

https://t.co/SBGJd5pmwj https://t.co/R4d6obwMeG",False,False,https://twitter.com/python_tip/status/1321766750682230785,"[{'url': 'https://t.co/SBGJd5pmwj', 'expanded_url': 'https://www.kaggle.com/python10pm/pandas-100-tricks#Trick-34:-Explore-a-dataset-with-profiling', 'display_url': 'kaggle.com/python10pm/pan…'}]","[{'url': 'https://t.co/R4d6obwMeG', 'media_url': 'http://pbs.twimg.com/media/ElfbvgdXIAIDLzS.png', 'display_url': 'pic.twitter.com/R4d6obwMeG'}]"
1321246292916555778,2020-10-28 00:23:58+00:00,60,7,#pythontip by @NurmeAve about cycling through the list of players https://t.co/BoWLNoeRni,False,False,https://twitter.com/python_tip/status/1321246292916555778,[],"[{'url': 'https://t.co/BoWLNoeRni', 'media_url': 'http://pbs.twimg.com/media/ElYCYpOXgAEJbLT.png', 'display_url': 'pic.twitter.com/BoWLNoeRni'}]"
1321007704891162624,2020-10-27 08:35:54+00:00,30,5,"Do you need to rename an attribute of a class, a method, a function's keyword...? `Rope` can help you with that

https://t.co/fdXjwhz5Z5

Or you can refactor with VS Code 

https://t.co/J7AJehPTwe",False,False,https://twitter.com/python_tip/status/1321007704891162624,"[{'url': 'https://t.co/fdXjwhz5Z5', 'expanded_url': 'https://github.com/python-rope/rope/blob/master/docs/overview.rst', 'display_url': 'github.com/python-rope/ro…'}, {'url': 'https://t.co/J7AJehPTwe', 'expanded_url': 'https://code.visualstudio.com/docs/python/editing#_refactoring', 'display_url': 'code.visualstudio.com/docs/python/ed…'}]",[]
1319825437933981696,2020-10-24 02:18:00+00:00,80,12,">>> from datetime import date
>>> somedate = date(2020, 12, 25)
>>> (somedate - https://t.co/DAMy3fUkMd()).days
63",False,False,https://twitter.com/python_tip/status/1319825437933981696,"[{'url': 'https://t.co/DAMy3fUkMd', 'expanded_url': 'http://date.today', 'display_url': 'date.today'}]",[]
1319726408957046784,2020-10-23 19:44:29+00:00,95,17,">>> lst = ['alice', 'bob', 'charlie']
>>> print(', '.join(lst))
alice, bob, charlie
>>> print(*lst, sep=', ')
alice, bob, charlie

#python",False,False,https://twitter.com/python_tip/status/1319726408957046784,[],[]
1318758155166404608,2020-10-21 03:37:00+00:00,20,3,"#pandas
Int64 - nullable integer type

>>> pd.Series([1, 2, np.nan, None, https://t.co/kKksLTtTy3], dtype=""Int64"")
0       1
1       2
2    <NA>
3    <NA>
4    <NA>
dtype: Int64

>>> pd.Series([1, np.nan, None, https://t.co/kKksLTtTy3], dtype=""int64"")
☠️

https://t.co/ZQ211K5Kpc",False,False,https://twitter.com/python_tip/status/1318758155166404608,"[{'url': 'https://t.co/kKksLTtTy3', 'expanded_url': 'http://pd.NA', 'display_url': 'pd.NA'}, {'url': 'https://t.co/kKksLTtTy3', 'expanded_url': 'http://pd.NA', 'display_url': 'pd.NA'}, {'url': 'https://t.co/ZQ211K5Kpc', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/stable/user_guide/integer_na.html', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}]",[]
1318662854606790674,2020-10-20 21:18:18+00:00,2,0,"@starenka @LSC_David_Isaac yep

>>> txt.strip('_a') # remove all _ and a's from the ends
'python'
>>> txt.rstrip('_a')
'aaa_python'
>>> txt.removesuffix('_a') # suffix not found
'aaa_python_aaa_aaa'
>>> txt.removeprefix(""_a"")
'aaa_python_aaa_aaa'",True,False,https://twitter.com/python_tip/status/1318662854606790674,[],[]
1318629978376896514,2020-10-20 19:07:40+00:00,42,11,"New in #python3.9

str.removeprefix()
str.removesuffix()

>>> txt = 'aaa_python_aaa_aaa'
>>> txt.removesuffix('_aaa')
'aaa_python_aaa'

compare:
>>> txt.rstrip('_a')
'aaa_python'

https://t.co/KTfoRSIpEA",False,False,https://twitter.com/python_tip/status/1318629978376896514,"[{'url': 'https://t.co/KTfoRSIpEA', 'expanded_url': 'https://www.python.org/dev/peps/pep-0616/', 'display_url': 'python.org/dev/peps/pep-0…'}]",[]
1317761337007632384,2020-10-18 09:36:00+00:00,125,20,Identify language of a document with pycld2 package: https://t.co/7bdB2ONteQ,False,False,https://twitter.com/python_tip/status/1317761337007632384,[],"[{'url': 'https://t.co/7bdB2ONteQ', 'media_url': 'http://pbs.twimg.com/media/EkhS5W0W0AEz6Yt.jpg', 'display_url': 'pic.twitter.com/7bdB2ONteQ'}]"
1317385160350892032,2020-10-17 08:41:12+00:00,119,24,"With #pandas DataFrame.explode you can transform list-like element into a row, replicating index values.

Example: https://t.co/5Jfpfgahjf",False,False,https://twitter.com/python_tip/status/1317385160350892032,[],"[{'url': 'https://t.co/5Jfpfgahjf', 'media_url': 'http://pbs.twimg.com/media/EkhKuY6XUAACLsO.png', 'display_url': 'pic.twitter.com/5Jfpfgahjf'}]"
1316837225867468800,2020-10-15 20:23:54+00:00,153,21,"Merging Dictionaries - new in Python 3.9!

a | b will merge `b` dictionary into `a` dictionary, if there are conflicts,  the rightmost-value will be kept

a |= b will merge `b` into `a` and return the result in `a` (it is also called updating)

Example: 👇 https://t.co/HlrVf8k0vn",False,False,https://twitter.com/python_tip/status/1316837225867468800,[],"[{'url': 'https://t.co/HlrVf8k0vn', 'media_url': 'http://pbs.twimg.com/media/EkZYQ8wWsAEjZhF.jpg', 'display_url': 'pic.twitter.com/HlrVf8k0vn'}]"
1315796911430029318,2020-10-12 23:30:04+00:00,74,22,"Streamlit (beautiful data apps in hours, not weeks; all in pure Python) is now introducing more flexible layout.

If you are new to Streamlit, create your first app after reading this, https://t.co/nlSTpaA9yH https://t.co/7poJOOVxqj",False,False,https://twitter.com/python_tip/status/1315796911430029318,"[{'url': 'https://t.co/nlSTpaA9yH', 'expanded_url': 'https://towardsdatascience.com/streamlit-101-an-in-depth-introduction-fc8aad9492f2', 'display_url': 'towardsdatascience.com/streamlit-101-…'}, {'url': 'https://t.co/7poJOOVxqj', 'expanded_url': 'https://twitter.com/streamlit/status/1314325156622266368', 'display_url': 'twitter.com/streamlit/stat…'}]",[]
1314561051581722625,2020-10-09 13:39:12+00:00,46,18,"Chaining of comparison operators:

>>> 0 < 10 != 1 < 5
True

 # 0 < 10 and 10 != 1 and 1 < 5

#python",False,False,https://twitter.com/python_tip/status/1314561051581722625,[],[]
1314129787112296451,2020-10-08 09:05:31+00:00,29,9,"Slices with negative indexing
>>> a = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
>>> a[-4:-2]
[7, 8]

More slicing tips at https://t.co/CWt7WIWjDG",False,False,https://twitter.com/python_tip/status/1314129787112296451,"[{'url': 'https://t.co/CWt7WIWjDG', 'expanded_url': 'http://sahandsaba.com/thirty-python-language-features-and-tricks-you-may-not-know.html#id1', 'display_url': 'sahandsaba.com/thirty-python-…'}]",[]
1313565408251740160,2020-10-06 19:42:52+00:00,86,28,"#python 3.9 is out!

https://t.co/lEP9z9g5TT",False,False,https://twitter.com/python_tip/status/1313565408251740160,"[{'url': 'https://t.co/lEP9z9g5TT', 'expanded_url': 'https://docs.python.org/3.9/whatsnew/3.9.html', 'display_url': 'docs.python.org/3.9/whatsnew/3…'}]",[]
1313226474607042560,2020-10-05 21:16:04+00:00,0,0,RT @ThePSF: Help us map out an accurate landscape of the Python community – join the official Python Survey 2020.  https://t.co/devKyhusbN,False,True,https://twitter.com/python_tip/status/1313226474607042560,"[{'url': 'https://t.co/devKyhusbN', 'expanded_url': 'https://surveys.jetbrains.com/s3/c12-python-developers-survey-2020', 'display_url': 'surveys.jetbrains.com/s3/c12-python-…'}]",[]
1313220455914971141,2020-10-05 20:52:09+00:00,54,13,"Turn your #jupyter notebooks into slides with the RISE extension
https://t.co/46sgpUbaw2 https://t.co/n86PzZMN0f",False,False,https://twitter.com/python_tip/status/1313220455914971141,"[{'url': 'https://t.co/46sgpUbaw2', 'expanded_url': 'https://rise.readthedocs.io/en/stable/', 'display_url': 'rise.readthedocs.io/en/stable/'}]","[{'url': 'https://t.co/n86PzZMN0f', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/Ejl-4mBWAAAaBXT.jpg', 'display_url': 'pic.twitter.com/n86PzZMN0f'}]"
1312523832297582594,2020-10-03 22:44:01+00:00,194,47,"AutoScraper: give it a URL and an example what would you like to scrape, and it learns the scraping rules and returns similar elements

https://t.co/38avVIvoBc

Example: web page, code, results https://t.co/gFXQWvsiS6",False,False,https://twitter.com/python_tip/status/1312523832297582594,"[{'url': 'https://t.co/38avVIvoBc', 'expanded_url': 'https://medium.com/better-programming/introducing-autoscraper-a-smart-fast-and-lightweight-web-scraper-for-python-20987f52c749', 'display_url': 'medium.com/better-program…'}]","[{'url': 'https://t.co/gFXQWvsiS6', 'media_url': 'http://pbs.twimg.com/media/EjcE70ZXsAESsVb.png', 'display_url': 'pic.twitter.com/gFXQWvsiS6'}]"
1311683042067480578,2020-10-01 15:03:01+00:00,64,22,"To create a zip/tar archive of a folder, use shutil.make_archive:

>>> import shutil
>>> shutil.make_archive(output_filename, 'zip', dir_name)

Thanks @pndrej for the tip.",False,False,https://twitter.com/python_tip/status/1311683042067480578,[],[]
1311406200270053377,2020-09-30 20:42:57+00:00,143,41,"bpython = fancy interface to the Python interactive interpreter (with auto completion, highlighting, auto indent)

See https://t.co/FYwPvTC0Pr https://t.co/HMcE366K41",False,False,https://twitter.com/python_tip/status/1311406200270053377,"[{'url': 'https://t.co/FYwPvTC0Pr', 'expanded_url': 'https://bpython-interpreter.org/', 'display_url': 'bpython-interpreter.org'}]","[{'url': 'https://t.co/HMcE366K41', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/EjMMtEVWsAQrXbS.jpg', 'display_url': 'pic.twitter.com/HMcE366K41'}]"
1311403454108229632,2020-09-30 20:32:02+00:00,1,0,@NurmeAve Thanks for the great tip!,True,False,https://twitter.com/python_tip/status/1311403454108229632,[],[]
1311069231182753793,2020-09-29 22:23:57+00:00,95,27,"You can save memory by fixing types in your #pandas DataFrame

https://t.co/HjD4toofDM https://t.co/v1iu8IqWWr",False,False,https://twitter.com/python_tip/status/1311069231182753793,"[{'url': 'https://t.co/HjD4toofDM', 'expanded_url': 'https://www.kaggle.com/python10pm/pandas-100-tricks#Trick-94:-Save-memory-by-fixing-your-date', 'display_url': 'kaggle.com/python10pm/pan…'}]","[{'url': 'https://t.co/v1iu8IqWWr', 'media_url': 'http://pbs.twimg.com/media/EjHafqBXsAMpEZy.png', 'display_url': 'pic.twitter.com/v1iu8IqWWr'}]"
1310532251441037312,2020-09-28 10:50:11+00:00,27,14,"Good news! IPywidgets (library providing easy way to add interactivity to your Jupyter notebooks) finally works in Google Colaboratory.

Try to run example browsing MNIST images: 
https://t.co/LpFyhM4OVE https://t.co/YXoP7xBA4Q",False,False,https://twitter.com/python_tip/status/1310532251441037312,"[{'url': 'https://t.co/LpFyhM4OVE', 'expanded_url': 'https://colab.research.google.com/github/jupyter-widgets/ipywidgets/blob/master/docs/source/examples/Image%20Browser.ipynb#scrollTo=Qbb4ZcsETj0Q', 'display_url': 'colab.research.google.com/github/jupyter…'}]","[{'url': 'https://t.co/YXoP7xBA4Q', 'media_url': 'http://pbs.twimg.com/media/Ei_xEa-XgAUtn50.jpg', 'display_url': 'pic.twitter.com/YXoP7xBA4Q'}]"
1309412744949571585,2020-09-25 08:41:40+00:00,22,11,"#PyCon Turkey - this Saturday, fully online and free
https://t.co/dJrSDDk6Ty",False,False,https://twitter.com/python_tip/status/1309412744949571585,"[{'url': 'https://t.co/dJrSDDk6Ty', 'expanded_url': 'https://tr.pycon.org/', 'display_url': 'tr.pycon.org'}]",[]
1309070062393978881,2020-09-24 09:59:58+00:00,126,31,">>> a = 1
>>> b = 5
>>> a, b = b, a
>>> a
5
>>> b
1

#Python https://t.co/r5Tr75i3pJ",False,False,https://twitter.com/python_tip/status/1309070062393978881,[],"[{'url': 'https://t.co/r5Tr75i3pJ', 'media_url': 'http://pbs.twimg.com/media/EirAMl9WkAA4Xzg.jpg', 'display_url': 'pic.twitter.com/r5Tr75i3pJ'}]"
1308676662494662656,2020-09-23 07:56:45+00:00,112,22,"Guess the result:

>>> lst = [0, 1, 2]
>>> lst[-1] += lst.pop()
>>> lst

#python_tip by @irdb",False,False,https://twitter.com/python_tip/status/1308676662494662656,[],[]
1308124412210802690,2020-09-21 19:22:18+00:00,60,18,"#Python3 Tip from @rickjdon: To zip 2 lists of different lengths use ‘zip_longest()’.

from itertools import zip_longest 
x =[1, 2] ; y =[3] 
list(zip_longest(x, y))
[(1, 3), (2, None)]

https://t.co/Ar5otciOxS",False,False,https://twitter.com/python_tip/status/1308124412210802690,"[{'url': 'https://t.co/Ar5otciOxS', 'expanded_url': 'https://docs.python.org/3/library/itertools.html', 'display_url': 'docs.python.org/3/library/iter…'}]",[]
1307306189886312449,2020-09-19 13:10:58+00:00,51,18,"Programming in @TensorFlow by example. 

This might sound like magic but with TF-Coder, you provide an input/output example, and TF-Coder finds the appropriate TensorFlow code for this transformation.

Try it out → https://t.co/88CHbucR6G https://t.co/IM3I75UroF",False,False,https://twitter.com/python_tip/status/1307306189886312449,"[{'url': 'https://t.co/88CHbucR6G', 'expanded_url': 'https://goo.gle/3gtexPX', 'display_url': 'goo.gle/3gtexPX'}]","[{'url': 'https://t.co/IM3I75UroF', 'media_url': 'http://pbs.twimg.com/media/EiR7osEXsAA_ufE.png', 'display_url': 'pic.twitter.com/IM3I75UroF'}]"
1306733380105654277,2020-09-17 23:14:50+00:00,55,13,"To convert data from wide df into a long one, use DataFrame.melt

Example:
https://t.co/j5U0ofJHAd https://t.co/G9ADnglRPN",False,False,https://twitter.com/python_tip/status/1306733380105654277,"[{'url': 'https://t.co/j5U0ofJHAd', 'expanded_url': 'https://www.kaggle.com/python10pm/pandas-100-tricks#Trick-98:-Convert-a-wide-DF-into-a-long-one', 'display_url': 'kaggle.com/python10pm/pan…'}]","[{'url': 'https://t.co/G9ADnglRPN', 'media_url': 'http://pbs.twimg.com/media/EiJzBo8XYAEYv9f.png', 'display_url': 'pic.twitter.com/G9ADnglRPN'}]"
1306228363766435840,2020-09-16 13:48:05+00:00,174,35,"#pythontip by @NurmeAve:

You can use an asterisk for unpacking and with any separator (for printing) you like. 

A few examples shown below. https://t.co/kXN3JMVvTU",False,False,https://twitter.com/python_tip/status/1306228363766435840,[],"[{'url': 'https://t.co/kXN3JMVvTU', 'media_url': 'http://pbs.twimg.com/media/EiCncHaWoAEZk7-.jpg', 'display_url': 'pic.twitter.com/kXN3JMVvTU'}]"
1305950746962264066,2020-09-15 19:24:56+00:00,47,19,"Is conda package manager too slow for you? Try a drop-in replacement mamba:

conda install mamba -c conda-forge

and you can then install conda packages as follows

mamba install PACKAGE_NAME -c conda-forge

https://t.co/QFvd6QVA5m",False,False,https://twitter.com/python_tip/status/1305950746962264066,"[{'url': 'https://t.co/QFvd6QVA5m', 'expanded_url': 'https://github.com/mamba-org/mamba', 'display_url': 'github.com/mamba-org/mamba'}]",[]
1305626873137950724,2020-09-14 21:57:58+00:00,35,14,"Comparison of the most popular libraries for exploratory visualizations: pandas, seaborn, plotnine, plotly, altair & ggplot2 (R).

It can be also used as a Rosetta stone on typical exploratory plots.

https://t.co/eZTWeV9old https://t.co/48eiYLcqKO",False,False,https://twitter.com/python_tip/status/1305626873137950724,"[{'url': 'https://t.co/eZTWeV9old', 'expanded_url': 'http://pythonplot.com', 'display_url': 'pythonplot.com'}, {'url': 'https://t.co/48eiYLcqKO', 'expanded_url': 'https://twitter.com/SciPyTip/status/1305528017079459840', 'display_url': 'twitter.com/SciPyTip/statu…'}]",[]
1304428483683123202,2020-09-11 14:36:00+00:00,27,5,"Let's go back to 80s and create full screen text UIs with asciimatics

https://t.co/lx0dYhWoFy https://t.co/eZWjr1AVlN",False,False,https://twitter.com/python_tip/status/1304428483683123202,"[{'url': 'https://t.co/lx0dYhWoFy', 'expanded_url': 'https://github.com/peterbrittain/asciimatics', 'display_url': 'github.com/peterbrittain/…'}]","[{'url': 'https://t.co/eZWjr1AVlN', 'media_url': 'http://pbs.twimg.com/media/EhZhi_uX0AArO0d.png', 'display_url': 'pic.twitter.com/eZWjr1AVlN'}]"
1304067102685294592,2020-09-10 14:40:00+00:00,60,14,"#python_tip  from @NurmeAve:

Python's divmod() is one way to convert months into years and months:

divmod(1, 12)     # (0, 1)   -> 0 years & 1 month
divmod(12, 12)   # (1, 0)   -> 1 year  & 0 months
divmod(55, 12)   # (4, 7)   -> 4 years & 7 months",False,False,https://twitter.com/python_tip/status/1304067102685294592,[],[]
1303702449669111815,2020-09-09 14:31:00+00:00,78,21,"Create a zip archive in #python:

from zipfile import ZipFile 

with ZipFile('https://t.co/6ASg62olYM', 'w') as zip_ref:
   zip_ref.write('data.csv')
   zip_ref.write('test.log')",False,False,https://twitter.com/python_tip/status/1303702449669111815,"[{'url': 'https://t.co/6ASg62olYM', 'expanded_url': 'http://my.zip', 'display_url': 'my.zip'}]",[]
1303329692913668101,2020-09-08 13:49:48+00:00,273,67,"Use handcalcs as  #Jupyter cell magic to render python calculation code in LaTeX 

https://t.co/aWIriXDfyw https://t.co/hNWPIA5ZxT",False,False,https://twitter.com/python_tip/status/1303329692913668101,"[{'url': 'https://t.co/aWIriXDfyw', 'expanded_url': 'https://github.com/connorferster/handcalcs', 'display_url': 'github.com/connorferster/…'}]","[{'url': 'https://t.co/hNWPIA5ZxT', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/EhZbRSrWkAEVKC5.jpg', 'display_url': 'pic.twitter.com/hNWPIA5ZxT'}]"
1302964972352417793,2020-09-07 13:40:31+00:00,68,23,"#python_tip by @raymondh:

several ways to interactively display results of a calculation:

# Two liner
>>> q = 3.5 * 1.5
>>> q
5.25

# Second expression
>>> q = 3.5 * 1.5; q
5.25

# Walrus
>>> (q := 3.5 * 1.5)
5.25

# Invisible
>>> q = 3.5 * 1.5",False,False,https://twitter.com/python_tip/status/1302964972352417793,[],[]
1302549942905573376,2020-09-06 10:11:21+00:00,0,0,RT @dwightwgunning: @python_tip @delegates @Patch @HamelHusain You probably mean #fastcore not #fastpages,False,True,https://twitter.com/python_tip/status/1302549942905573376,[],[]
1302549866778951680,2020-09-06 10:11:03+00:00,0,0,"@dwightwgunning @delegates @Patch @HamelHusain Thank you. Of course, you are right.",True,False,https://twitter.com/python_tip/status/1302549866778951680,[],[]
1302361473046515714,2020-09-05 21:42:26+00:00,44,12,"#fastpages is a backbone of #fastai library that brings advanced Python constructs like  @typedispatch, store_attr(), @delegates, @patch, ...

See examples 👇 and read intro from @HamelHusain
https://t.co/pwYi4TdWy1 https://t.co/qzcaVa4PjW",False,False,https://twitter.com/python_tip/status/1302361473046515714,"[{'url': 'https://t.co/pwYi4TdWy1', 'expanded_url': 'https://fastpages.fast.ai/fastcore/', 'display_url': 'fastpages.fast.ai/fastcore/'}]","[{'url': 'https://t.co/qzcaVa4PjW', 'media_url': 'http://pbs.twimg.com/media/EhLp_C3XcAEt1jq.png', 'display_url': 'pic.twitter.com/qzcaVa4PjW'}]"
1301768959075577857,2020-09-04 06:28:00+00:00,40,12,"#einops library = easy manipulation of multidimensional arrays (not only #numpy, but also #PyTorch, #TF, #jax...)

E.g. Instead of

y = x.view(x.shape[0], -1)

you can express the same as

y = rearrange(x, 'b c h w -> b (c h w)') https://t.co/uSM6NksMJ9",False,False,https://twitter.com/python_tip/status/1301768959075577857,[],"[{'url': 'https://t.co/uSM6NksMJ9', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/Eg3XvHdXcAEsj2c.jpg', 'display_url': 'pic.twitter.com/uSM6NksMJ9'}]"
1301404054732468225,2020-09-03 06:18:00+00:00,14,9,"patsy - Python implementation of R's formulas and design matrices

https://t.co/pkbtnrmiii",False,False,https://twitter.com/python_tip/status/1301404054732468225,"[{'url': 'https://t.co/pkbtnrmiii', 'expanded_url': 'https://patsy.readthedocs.io/en/latest/quickstart.html', 'display_url': 'patsy.readthedocs.io/en/latest/quic…'}]",[]
1301039905347231749,2020-09-02 06:11:00+00:00,207,68,"Python 3.9 is coming!

Check the new features:
* Dictionary merge (|) and update (|=) operators
* removeprefix() and removesuffix() string methods
* Easier type annotations for lists and dicts
* ...

https://t.co/lEP9z8Yuvj",False,False,https://twitter.com/python_tip/status/1301039905347231749,"[{'url': 'https://t.co/lEP9z8Yuvj', 'expanded_url': 'https://docs.python.org/3.9/whatsnew/3.9.html', 'display_url': 'docs.python.org/3.9/whatsnew/3…'}]",[]
1300921345824481280,2020-09-01 22:19:53+00:00,19,8,"Our 3h intro into Deep Learning at European Conference on Computational Biology. Six colab exercises. 

https://t.co/lNfmdhJV1V

#ECCB2020 #selfpromo https://t.co/D3WGvsBqYD",False,False,https://twitter.com/python_tip/status/1300921345824481280,"[{'url': 'https://t.co/lNfmdhJV1V', 'expanded_url': 'https://github.com/ML-Bioinfo-CEITEC/ECCB2020', 'display_url': 'github.com/ML-Bioinfo-CEI…'}, {'url': 'https://t.co/D3WGvsBqYD', 'expanded_url': 'https://twitter.com/simecek/status/1300824293954277377', 'display_url': 'twitter.com/simecek/status…'}]",[]
1300793389802233856,2020-09-01 13:51:26+00:00,519,164,"handcalcs - a library to render Python calculation code automatically in Latex (+some extra magic allowing numeric substitutions into formula) -- via @omarsar0

https://t.co/aWIriXDfyw https://t.co/C8LOYm301K",False,False,https://twitter.com/python_tip/status/1300793389802233856,"[{'url': 'https://t.co/aWIriXDfyw', 'expanded_url': 'https://github.com/connorferster/handcalcs', 'display_url': 'github.com/connorferster/…'}]","[{'url': 'https://t.co/C8LOYm301K', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/Eg1Yr2TXsAAYxRL.jpg', 'display_url': 'pic.twitter.com/C8LOYm301K'}]"
1299263830984478722,2020-08-28 08:33:31+00:00,61,11,"You can write #pandas objects directly to compressed format.

By default, Pandas will infer the file type:
>>> https://t.co/yGT52QVczk_csv('https://t.co/7Ehn0xJHET')

or you can specify the mode:
>>> https://t.co/yGT52QVczk_csv('data.csv.gz', compression='gzip’)",False,False,https://twitter.com/python_tip/status/1299263830984478722,"[{'url': 'https://t.co/yGT52QVczk', 'expanded_url': 'http://df.to', 'display_url': 'df.to'}, {'url': 'https://t.co/yGT52QVczk', 'expanded_url': 'http://df.to', 'display_url': 'df.to'}]",[]
1298875354325700608,2020-08-27 06:49:51+00:00,0,0,RT @starenka: @python_tip collections.Counter.most_common is faster afaik,False,True,https://twitter.com/python_tip/status/1298875354325700608,[],[]
1298730513042157570,2020-08-26 21:14:18+00:00,174,28,"#python lists have the count() method that returns the number of occurrences of an element:

>>> lst = [1, 1, 2, 3, 4, 5, 1, 3, 3, 3, 7, 9, 3]
>>> lst.count(2)
1

Most common item:
>>> max(lst, key=lst.count) 
3",False,False,https://twitter.com/python_tip/status/1298730513042157570,[],[]
1298373969729466368,2020-08-25 21:37:31+00:00,40,12,"HTTPX is an asyncio HTTP client library, with an API almost identical to Requests.

https://t.co/o1DC7Xkm2Z
thanks @jdbowman for today's #python_tip",False,False,https://twitter.com/python_tip/status/1298373969729466368,"[{'url': 'https://t.co/o1DC7Xkm2Z', 'expanded_url': 'https://github.com/encode/httpx', 'display_url': 'github.com/encode/httpx'}]",[]
1297992779335950336,2020-08-24 20:22:48+00:00,19,9,"in is a comparison operator and so it is subject to comparison chaining:

>>> l = ['b', 'c']
>>> 'b' in l == True
False
>>> 'a' in 'bar' < 'baz'
True

https://t.co/4dC3kLS6rZ
#python",False,False,https://twitter.com/python_tip/status/1297992779335950336,"[{'url': 'https://t.co/4dC3kLS6rZ', 'expanded_url': 'https://docs.python.org/3/reference/expressions.html#comparisons', 'display_url': 'docs.python.org/3/reference/ex…'}]",[]
1297461499489853441,2020-08-23 09:11:41+00:00,38,7,"New @fastdotai deep learning course
https://t.co/epzZhv1VVf

...coming with a book written in Jupyter notebooks
https://t.co/NujNeSAJVF
https://t.co/xe1paL38wT

...and a complete rewrite of the library
https://t.co/vIg5tG6o1L",False,False,https://twitter.com/python_tip/status/1297461499489853441,"[{'url': 'https://t.co/epzZhv1VVf', 'expanded_url': 'https://course.fast.ai/', 'display_url': 'course.fast.ai'}, {'url': 'https://t.co/NujNeSAJVF', 'expanded_url': 'https://github.com/fastai/fastbook', 'display_url': 'github.com/fastai/fastbook'}, {'url': 'https://t.co/xe1paL38wT', 'expanded_url': 'https://www.amazon.com/Deep-Learning-Coders-fastai-PyTorch/dp/1492045527', 'display_url': 'amazon.com/Deep-Learning-…'}, {'url': 'https://t.co/vIg5tG6o1L', 'expanded_url': 'https://www.fast.ai/2020/08/21/fastai2-launch/', 'display_url': 'fast.ai/2020/08/21/fas…'}]",[]
1297211319721103362,2020-08-22 16:37:34+00:00,0,0,@thelinekioubeur @abhi_bops Thanks!,True,False,https://twitter.com/python_tip/status/1297211319721103362,[],[]
1297056658581905408,2020-08-22 06:23:00+00:00,60,10,"#pythontip by @abhi_bops:

If you want to split a string and use the individual elements but worried about getting IndexError.

>> a='x/y/z'
>> d={n:i for n, i in enumerate(a.split('/'))}
>> d.get(1)
'y'
>> d.get(10)

(Contribute tips by tagging us or use https://t.co/mfUQ9twkWS)",False,False,https://twitter.com/python_tip/status/1297056658581905408,"[{'url': 'https://t.co/mfUQ9twkWS', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]",[]
1296690999171772416,2020-08-21 06:10:00+00:00,166,40,"Tqdm is a well known tool for progress bars. But did you know you can have double progress bars and name them?

Colab: 👇👇
https://t.co/gIWJ2e9jAJ https://t.co/v2ltoUDK15",False,False,https://twitter.com/python_tip/status/1296690999171772416,"[{'url': 'https://t.co/gIWJ2e9jAJ', 'expanded_url': 'https://gist.github.com/simecek/0ee10e9d1fbc54c156b566386ca6806f', 'display_url': 'gist.github.com/simecek/0ee10e…'}]","[{'url': 'https://t.co/v2ltoUDK15', 'media_url': 'http://pbs.twimg.com/media/EftfFpDWkAgXYJM.png', 'display_url': 'pic.twitter.com/v2ltoUDK15'}]"
1296328244099272706,2020-08-20 06:08:32+00:00,46,8,"Floating point math is hard.

>>> 0.1 + 0.2
0.30000000000000004

>>> 0.4 == 0.399999999999999999
True
>>> 0.399999999999999999 == 0.399999999999999998
True https://t.co/nk1YUmOJu8",False,False,https://twitter.com/python_tip/status/1296328244099272706,"[{'url': 'https://t.co/nk1YUmOJu8', 'expanded_url': 'https://twitter.com/jakevdp/status/1296127415551311874', 'display_url': 'twitter.com/jakevdp/status…'}]",[]
1295975534783090688,2020-08-19 06:47:00+00:00,78,20,"To get memory usage of DataFrame and its every column:

https://t.co/8vD3tlajX5(memory_usage = ""deep"")
df.memory_usage(deep = True)

https://t.co/tkf1jzdSoC

#pandas",False,False,https://twitter.com/python_tip/status/1295975534783090688,"[{'url': 'https://t.co/8vD3tlajX5', 'expanded_url': 'http://df.info', 'display_url': 'df.info'}, {'url': 'https://t.co/tkf1jzdSoC', 'expanded_url': 'https://www.kaggle.com/python10pm/pandas-100-tricks#Trick-19:-Show-memory-usage-of-a-df-and-every-column', 'display_url': 'kaggle.com/python10pm/pan…'}]",[]
1295728392491368449,2020-08-18 14:24:56+00:00,2,0,@neilbhav @michalovamichle It is easy to overlook missing brackets and then be surprised by the program behavior.,True,False,https://twitter.com/python_tip/status/1295728392491368449,[],[]
1295723815952166912,2020-08-18 14:06:45+00:00,61,16,"By default, Python objects are evaluated as true. Sometimes, it might bite you.

def muFunc():
    return False

>>> if myFunc:
               print(""OMG!"")
OMG! https://t.co/kZDwNyC6Dh",False,False,https://twitter.com/python_tip/status/1295723815952166912,"[{'url': 'https://t.co/kZDwNyC6Dh', 'expanded_url': 'https://twitter.com/raymondh/status/1278477169237176320', 'display_url': 'twitter.com/raymondh/statu…'}]",[]
1295352184213823489,2020-08-17 13:30:01+00:00,14,2,"@AjayKaphola A solution using pathlib (instead of os):

from pathlib import Path

file_path = './folder1/folder2/file.txt'
p = Path(file_path)

p.parents[0].mkdir(parents=True, exist_ok=True)
p.write_text(""Sample file content"")
https://t.co/9eDp1MMd2i_text()  # will read the file content https://t.co/Zuaowldgjj",True,False,https://twitter.com/python_tip/status/1295352184213823489,"[{'url': 'https://t.co/9eDp1MMd2i', 'expanded_url': 'http://p.read', 'display_url': 'p.read'}]","[{'url': 'https://t.co/Zuaowldgjj', 'media_url': 'http://pbs.twimg.com/media/EfoD3e4XgAAxm3t.jpg', 'display_url': 'pic.twitter.com/Zuaowldgjj'}]"
1295350942712332288,2020-08-17 13:25:05+00:00,38,8,"#pythontip from @AjayKaphola to create a file with parent folders:

file_path = '/folder1/folder2/file.txt'
os.makedirs(os.path.dirname(file_path ), exist_ok=True)
with open(file_path , ""w"") as f:
    f.write(""Sample file content"") https://t.co/uKTYyXArtw",False,False,https://twitter.com/python_tip/status/1295350942712332288,[],"[{'url': 'https://t.co/uKTYyXArtw', 'media_url': 'http://pbs.twimg.com/media/EfoCwyZXsAE_Mi5.jpg', 'display_url': 'pic.twitter.com/uKTYyXArtw'}]"
1294141161334960128,2020-08-14 05:17:51+00:00,0,0,RT @starenka: @python_tip vars(obj) whats inside,False,True,https://twitter.com/python_tip/status/1294141161334960128,[],[]
1294033102738722816,2020-08-13 22:08:28+00:00,58,16,"type() - what is this object?
dir() - what can I do with it?
help()

>>> type(df)
<class 'pandas.core.frame.DataFrame'>
>>> dir(df)
>>> help(https://t.co/yGT52QVczk_latex)

#Python",False,False,https://twitter.com/python_tip/status/1294033102738722816,"[{'url': 'https://t.co/yGT52QVczk', 'expanded_url': 'http://df.to', 'display_url': 'df.to'}]",[]
1293667821562593281,2020-08-12 21:56:58+00:00,64,15,"When maxsplit is specified in str.split(), it will limit the number of splits:

>>> s = 'a,,b, c, d,e'
>>> s.split(',')
['a', '', 'b', ' c', ' d', 'e']
>>> s.split(',', maxsplit=2)
['a', '', 'b, c, d,e']
>>> s.split(maxsplit=2)
['a,,b,', 'c,', 'd,e']

https://t.co/o3YxgkOwUj",False,False,https://twitter.com/python_tip/status/1293667821562593281,"[{'url': 'https://t.co/o3YxgkOwUj', 'expanded_url': 'https://docs.python.org/3/library/stdtypes.html#str.split', 'display_url': 'docs.python.org/3/library/stdt…'}]",[]
1293314816480878592,2020-08-11 22:34:15+00:00,103,24,"Table in pdf? No problem :-)

>>> from tabula import read_pdf
>>> df_lst = read_pdf(""some.pdf"", pages = ""all"")

https://t.co/3zd1DHySjz",False,False,https://twitter.com/python_tip/status/1293314816480878592,"[{'url': 'https://t.co/3zd1DHySjz', 'expanded_url': 'https://pypi.org/project/tabula-py/', 'display_url': 'pypi.org/project/tabula…'}]",[]
1292795622333067270,2020-08-10 12:11:10+00:00,35,16,"randint(a, b) returns random number between a and b, but be careful: b is inclusive if  random.randint is used, but exclusive if np.random.randint is used  

Thanks, @PetraVidnerova! 

Do you have a #python_tip? Share it with us:  https://t.co/NXevFNKLXH",False,False,https://twitter.com/python_tip/status/1292795622333067270,"[{'url': 'https://t.co/NXevFNKLXH', 'expanded_url': 'https://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]",[]
1292791585344815104,2020-08-10 11:55:07+00:00,0,0,@starenka Cool. I did not know that.,True,False,https://twitter.com/python_tip/status/1292791585344815104,[],[]
1291618575757848576,2020-08-07 06:14:00+00:00,48,17,"Sometimes, you run into a project using dependency management tool, unknown to you. To get some overview, read 

https://t.co/Gq5uQa0ds7

(Personally, I am #pyenv guy, most my colleagues like #conda and I have just run into my 1st #poetry project) https://t.co/Jb0eciKdoz",False,False,https://twitter.com/python_tip/status/1291618575757848576,"[{'url': 'https://t.co/Gq5uQa0ds7', 'expanded_url': 'https://modelpredict.com/python-dependency-management-tools', 'display_url': 'modelpredict.com/python-depende…'}]","[{'url': 'https://t.co/Jb0eciKdoz', 'media_url': 'http://pbs.twimg.com/media/EehxSZbXkAIrmek.png', 'display_url': 'pic.twitter.com/Jb0eciKdoz'}]"
1291261975960395776,2020-08-06 06:37:00+00:00,17,6,"#vscode like online IDE for your GitHub repo

https://t.co/t10odSysbZ",False,False,https://twitter.com/python_tip/status/1291261975960395776,"[{'url': 'https://t.co/t10odSysbZ', 'expanded_url': 'https://gitpod.io/#get-started', 'display_url': 'gitpod.io/#get-started'}]",[]
1290901601368997888,2020-08-05 06:45:00+00:00,18,3,"Python 3.7+ contains a dummy context manager contextlib.nullcontext that does nothing. For more information, see this thread
https://t.co/T6JycCShBl

And you can even pass an argument
>>> with contextlib.nullcontext('world') as planet:
        print('Hello', planet)
Hello world",False,False,https://twitter.com/python_tip/status/1290901601368997888,"[{'url': 'https://t.co/T6JycCShBl', 'expanded_url': 'https://twitter.com/raymondh/status/1280666652812562432', 'display_url': 'twitter.com/raymondh/statu…'}]",[]
1290536445401354240,2020-08-04 06:34:00+00:00,54,15,"#pythontip by @fgomezdelarosa_:

df.columns = [x.replace(' ', '_').lower() for x in df.columns]

replace spaces and transform in lowercase the variable names in df columns.

(Do you know a good Python tip? Just tag us the tweet, or even better, fill it to https://t.co/mfUQ9teK5k)",False,False,https://twitter.com/python_tip/status/1290536445401354240,"[{'url': 'https://t.co/mfUQ9teK5k', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]",[]
1290393929221918722,2020-08-03 21:07:41+00:00,196,54,"Youtube-dl: Python package to download YouTube videos (also a command line tool).

https://t.co/MCAMQcpRVc https://t.co/VRYDEPYqrr",False,False,https://twitter.com/python_tip/status/1290393929221918722,"[{'url': 'https://t.co/MCAMQcpRVc', 'expanded_url': 'https://github.com/ytdl-org/youtube-dl#embedding-youtube-dl', 'display_url': 'github.com/ytdl-org/youtu…'}]","[{'url': 'https://t.co/VRYDEPYqrr', 'media_url': 'http://pbs.twimg.com/media/EehmAABWAAEyja7.png', 'display_url': 'pic.twitter.com/VRYDEPYqrr'}]"
1288802911070359552,2020-07-30 11:45:33+00:00,31,17,"you can use user-defined separator and end parameters in print():
print(*objects, sep=' ', end='\n', file=sys.stdout, flush=False)

print('a', 'b', sep='_')

a_b

print('a', end=',')
print('b', end=',')
print('c')

a,b,c

#python 
https://t.co/Jm8LgioMJb",False,False,https://twitter.com/python_tip/status/1288802911070359552,"[{'url': 'https://t.co/Jm8LgioMJb', 'expanded_url': 'https://docs.python.org/3/library/functions.html#print', 'display_url': 'docs.python.org/3/library/func…'}]",[]
1288485781103935491,2020-07-29 14:45:23+00:00,56,9,"Need to double check your working directory?

>>> import os
>>> os.getcwd()
'/home/karla/some/strange/folder'

#python",False,False,https://twitter.com/python_tip/status/1288485781103935491,[],[]
1288073549928894465,2020-07-28 11:27:20+00:00,13,11,"#python + #pyjamas = Pyjamas.
https://t.co/djc67EwQCD

Rule number 1 of Pyjamas is “One shall present your talk wearing pyjamas”.",False,False,https://twitter.com/python_tip/status/1288073549928894465,"[{'url': 'https://t.co/djc67EwQCD', 'expanded_url': 'https://pyjamas.live/', 'display_url': 'pyjamas.live'}]",[]
1287755095686471681,2020-07-27 14:21:54+00:00,51,17,"use dtypes=None in numpy.genfromtxt() to auto detect data types by column. 

#numpy #python https://t.co/flFSTEiyKi",False,False,https://twitter.com/python_tip/status/1287755095686471681,[],"[{'url': 'https://t.co/flFSTEiyKi', 'media_url': 'http://pbs.twimg.com/media/Ed8GZYuWkAA68Ks.png', 'display_url': 'pic.twitter.com/flFSTEiyKi'}]"
1286577861239828480,2020-07-24 08:24:00+00:00,30,10,"Real-time data streaming using #FastAPI and #WebSocket by @stribrny

https://t.co/EaJ74T7k26 https://t.co/Q5cn30udVN",False,False,https://twitter.com/python_tip/status/1286577861239828480,"[{'url': 'https://t.co/EaJ74T7k26', 'expanded_url': 'https://stribny.name/blog/2020/07/real-time-data-streaming-using-fastapi-and-websockets', 'display_url': 'stribny.name/blog/2020/07/r…'}]","[{'url': 'https://t.co/Q5cn30udVN', 'media_url': 'http://pbs.twimg.com/media/Edb24gMXYAkTbad.png', 'display_url': 'pic.twitter.com/Q5cn30udVN'}]"
1286179738059280386,2020-07-23 06:02:00+00:00,62,16,"Style #pandas DataFrame (using formatting dictionary):

https://t.co/fDsq4B3JD0 https://t.co/j5NFi1FBml",False,False,https://twitter.com/python_tip/status/1286179738059280386,"[{'url': 'https://t.co/fDsq4B3JD0', 'expanded_url': 'https://www.kaggle.com/python10pm/pandas-100-tricks#Trick-26:-Formatting-different-columns-of-a-df-(using-dictionaries)', 'display_url': 'kaggle.com/python10pm/pan…'}]","[{'url': 'https://t.co/j5NFi1FBml', 'media_url': 'http://pbs.twimg.com/media/Edb_RuYXoAESM88.png', 'display_url': 'pic.twitter.com/j5NFi1FBml'}]"
1285815840013615104,2020-07-22 05:56:00+00:00,87,25,"To find the index of minimum element in a list:
> a = [2, 1, 3]
> a.index(min(a))
1
> # another solution (single pass) 
> min(enumerate(a), key=lambda x: x[1])[0]
1

To get all positions of minima:
> a = [2, 1, 3, 1]
> m = min(a)
> [i for i, j in enumerate(a) if j == m]
[1, 3]",False,False,https://twitter.com/python_tip/status/1285815840013615104,[],[]
1285484781850038272,2020-07-21 08:00:29+00:00,68,20,"To download (large) files from Google drive without mounting the drive: 

from google_drive_downloader import GoogleDriveDownloader as gdd

https://t.co/E7HjHdAma5_file_from_google_drive(file_id='**GDRIVE_FILE_ID**', dest_path='local.pkl')

https://t.co/5VGUc18KVU",False,False,https://twitter.com/python_tip/status/1285484781850038272,"[{'url': 'https://t.co/E7HjHdAma5', 'expanded_url': 'http://gdd.download', 'display_url': 'gdd.download'}, {'url': 'https://t.co/5VGUc18KVU', 'expanded_url': 'https://stackoverflow.com/a/47761459', 'display_url': 'stackoverflow.com/a/47761459'}]",[]
1285319487055691776,2020-07-20 21:03:40+00:00,33,10,"#pythontip by @verosk:

'randomcolor' is a Python port of a library for generating attractive random colors. https://t.co/MKzz7YNUu3 

Link to the original JS library with examples:
https://t.co/wreNqk61ye https://t.co/pidyWt6awx",False,False,https://twitter.com/python_tip/status/1285319487055691776,"[{'url': 'https://t.co/MKzz7YNUu3', 'expanded_url': 'https://github.com/kevinwuhoo/randomcolor-py', 'display_url': 'github.com/kevinwuhoo/ran…'}, {'url': 'https://t.co/wreNqk61ye', 'expanded_url': 'https://github.com/davidmerfield/randomColor', 'display_url': 'github.com/davidmerfield/…'}]","[{'url': 'https://t.co/pidyWt6awx', 'media_url': 'http://pbs.twimg.com/media/EdZfJnRWkAA_u9H.png', 'display_url': 'pic.twitter.com/pidyWt6awx'}]"
1284114089975918594,2020-07-17 13:13:51+00:00,88,26,"Trying to print() a large nested structure? 
pretty-print will look better.
https://t.co/dzFJQLErQG

#python

>>> import requests
>>> from pprint import pprint
>>> url = 'https://t.co/3kfWu2Eq3H'
>>> res = requests.get(url).json()
>>> pprint(res) https://t.co/K2CZVOICvK",False,False,https://twitter.com/python_tip/status/1284114089975918594,"[{'url': 'https://t.co/dzFJQLErQG', 'expanded_url': 'https://docs.python.org/3/library/pprint.html', 'display_url': 'docs.python.org/3/library/ppri…'}, {'url': 'https://t.co/3kfWu2Eq3H', 'expanded_url': 'https://www.ebi.ac.uk/mi/impc/solr/statistical-result/select?q=marker_symbol:Car4', 'display_url': 'ebi.ac.uk/mi/impc/solr/s…'}]","[{'url': 'https://t.co/K2CZVOICvK', 'media_url': 'http://pbs.twimg.com/media/EdIWxUhX0AAdA1k.png', 'display_url': 'pic.twitter.com/K2CZVOICvK'}]"
1283759556284252162,2020-07-16 13:45:03+00:00,94,19,"Parse #pandas dataframe to #markdown:
>>> df = pd.DataFrame({'a': [1, 2], 'b': ['x', 'y']})
>>> https://t.co/yGT52QVczk_markdown()
'|    |   a | b   |\n|---:|----:|:----|\n|  0 |   1 | x   |\n|  1 |   2 | y   |' https://t.co/GWoOzGGPAL",False,False,https://twitter.com/python_tip/status/1283759556284252162,"[{'url': 'https://t.co/yGT52QVczk', 'expanded_url': 'http://df.to', 'display_url': 'df.to'}]","[{'url': 'https://t.co/GWoOzGGPAL', 'media_url': 'http://pbs.twimg.com/media/EdDUd5-WkAE5lqM.png', 'display_url': 'pic.twitter.com/GWoOzGGPAL'}]"
1283323069013131269,2020-07-15 08:50:37+00:00,111,19,"frequency count:

>>> from collections import Counter
>>> a = 'dfjkdfjkaaabckdjfoe'
>>> Counter(a)
Counter({'d': 3, 'f': 3, 'j': 3, 'k': 3, 'a': 3, 'b': 1, 'c': 1, 'o': 1, 'e': 1})

#python",False,False,https://twitter.com/python_tip/status/1283323069013131269,[],[]
1282962835765694464,2020-07-14 08:59:11+00:00,102,31,"for loops may have an else clause - it is executed after the loop completes normally, but not when the loop is terminated by a break statement.

for item in items:
    if something(item):
        do_st(item)
        break
else:
   print(""Not found."")

https://t.co/sVf67lSdCL",False,False,https://twitter.com/python_tip/status/1282962835765694464,"[{'url': 'https://t.co/sVf67lSdCL', 'expanded_url': 'https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops', 'display_url': 'docs.python.org/3/tutorial/con…'}]",[]
1281507897571250176,2020-07-10 08:37:46+00:00,0,0,"RT @abhi_bops: @python_tip In cases where there are duplicate items, I find enumerate very helpful
>>> a = ['car', 'bike', 'scooter', 'bike…",False,True,https://twitter.com/python_tip/status/1281507897571250176,[],[]
1281467437154807810,2020-07-10 05:57:00+00:00,90,11,"Finding the index of an item in a list:

>>> a = ['car', 'bike', 'scooter']
>>> a.index('bike')
1",False,False,https://twitter.com/python_tip/status/1281467437154807810,[],[]
1281350573057609728,2020-07-09 22:12:37+00:00,15,7,"Q: quick and dirty debugging
https://t.co/xmwiRL9WOk

All output goes to /tmp/q

To print the value of foo, insert this into your program:
import q; q(foo)

To trace a function’s arguments and return value, insert this above the def:
import q
@q",False,False,https://twitter.com/python_tip/status/1281350573057609728,"[{'url': 'https://t.co/xmwiRL9WOk', 'expanded_url': 'https://pypi.org/project/q/', 'display_url': 'pypi.org/project/q/'}]",[]
1281349237100486656,2020-07-09 22:07:19+00:00,0,0,@mhlkong The syntax is similar. More comparisons at https://t.co/o64fciCLap,True,False,https://twitter.com/python_tip/status/1281349237100486656,"[{'url': 'https://t.co/o64fciCLap', 'expanded_url': 'https://fastapi.tiangolo.com/alternatives/', 'display_url': 'fastapi.tiangolo.com/alternatives/'}]",[]
1280743164869931009,2020-07-08 05:59:00+00:00,46,10,"A bit crazy but creative #pythontip by Błażej Michalik:

def ________________________________________():
    print('─' * 80)

The function above can make your print-heavy script a bit more readable (also the output).",False,False,https://twitter.com/python_tip/status/1280743164869931009,[],[]
1280380021891268608,2020-07-07 05:56:00+00:00,66,9,"For #pandas series indexed by time, you can subset by the hour https://t.co/SxmZXpqvri",False,False,https://twitter.com/python_tip/status/1280380021891268608,[],"[{'url': 'https://t.co/SxmZXpqvri', 'media_url': 'http://pbs.twimg.com/media/Ebzdz7ZWsAA0lo-.png', 'display_url': 'pic.twitter.com/SxmZXpqvri'}]"
1280018643632324609,2020-07-06 06:00:00+00:00,135,21,"FastAPI = web framework for building APIs in Python 3.6+

* type hints
* automatic interactive API documentation 
* asynchronous
 https://t.co/tzy1yf7dNY https://t.co/2XTJU6iVnG",False,False,https://twitter.com/python_tip/status/1280018643632324609,"[{'url': 'https://t.co/tzy1yf7dNY', 'expanded_url': 'https://fastapi.tiangolo.com/#example', 'display_url': 'fastapi.tiangolo.com/#example'}]","[{'url': 'https://t.co/2XTJU6iVnG', 'media_url': 'http://pbs.twimg.com/media/EbzcBWAXYAcOM84.jpg', 'display_url': 'pic.twitter.com/2XTJU6iVnG'}]"
1279133055526019074,2020-07-03 19:21:00+00:00,22,5,"f = 2
𝑓 = 42
print(f)
42

Explanation: https://t.co/4YDVJFRa4C",False,False,https://twitter.com/python_tip/status/1279133055526019074,"[{'url': 'https://t.co/4YDVJFRa4C', 'expanded_url': 'https://stackoverflow.com/a/62256274', 'display_url': 'stackoverflow.com/a/62256274'}]",[]
1278934937803141120,2020-07-03 06:13:45+00:00,96,15,"You can sort using a tuple as a key:
scores = [{'score': 20, 'id':11}, {'score': 1, 'id': 10}, {'score': 20, 'id': 3}]
print(sorted(scores, key=lambda k: (k['score'], k['id'])))

[{'score': 1, 'id': 10}, {'score': 20, 'id': 3}, {'score': 20, 'id': 11}]

#Python",False,False,https://twitter.com/python_tip/status/1278934937803141120,[],[]
1278388902345224192,2020-07-01 18:04:00+00:00,259,43,">>> import calendar
>>> print(calendar.month(2020, 7)) https://t.co/XQTc4mNtgJ",False,False,https://twitter.com/python_tip/status/1278388902345224192,[],"[{'url': 'https://t.co/XQTc4mNtgJ', 'media_url': 'http://pbs.twimg.com/media/Eb0Wl0cWAAE-8F2.png', 'display_url': 'pic.twitter.com/XQTc4mNtgJ'}]"
1278198251284508672,2020-07-01 05:26:25+00:00,202,38,"zip magic

>>> a = ['a', 'b', 'c']
>>> b = [1, 2, 3]

>>> c = list(zip(a,b))
>>> c
[('a', 1), ('b', 2), ('c', 3)]

>>> list(zip(*c))
[('a', 'b', 'c'), (1, 2, 3)]

>>> dict(zip(a, b))
{'a': 1, 'b': 2, 'c': 3}

#python",False,False,https://twitter.com/python_tip/status/1278198251284508672,[],[]
1277713248750575619,2020-06-29 21:19:11+00:00,89,25,"slicing in #python:
s[start:end] 
s[start:end:step]

>>> lst = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
>>> lst[2:4]
[2, 3]
>>> lst[8:2:-1]
[8, 7, 6, 5, 4, 3]
>>> lst[1:8:2]
[1, 3, 5, 7]
>>> lst[:-2:3]
[0, 3, 6]
>>> lst[::-2]
[9, 7, 5, 3, 1]",False,False,https://twitter.com/python_tip/status/1277713248750575619,[],[]
1276394258707210240,2020-06-26 05:58:00+00:00,24,4,"Resample/groupby #pandas time-series data:

https://t.co/32BRPt0iJL https://t.co/DJS6BpSGtF",False,False,https://twitter.com/python_tip/status/1276394258707210240,"[{'url': 'https://t.co/32BRPt0iJL', 'expanded_url': 'https://www.kaggle.com/python10pm/pandas-100-tricks#Trick-27:-Aggregation-over-timeseries-(resample)', 'display_url': 'kaggle.com/python10pm/pan…'}]","[{'url': 'https://t.co/DJS6BpSGtF', 'media_url': 'http://pbs.twimg.com/media/EbH6faAUwAIrz7W.png', 'display_url': 'pic.twitter.com/DJS6BpSGtF'}]"
1276035394400706560,2020-06-25 06:12:00+00:00,252,44,"Zip is its own inverse!

a = (1, 2, 3, 4)
b = (5, 6, 7, 8)

ab_zip = zip(a, b)
# ab_zip = [(1, 5), (2, 6), (3, 7), (4, 8)]

zip(*ab_zip)
# returns [(1, 2, 3, 4), (5, 6, 7, 8)] https://t.co/tTGUM5d0eT",False,False,https://twitter.com/python_tip/status/1276035394400706560,[],"[{'url': 'https://t.co/tTGUM5d0eT', 'media_url': 'http://pbs.twimg.com/media/EbJCQV6WoAgaeKN.png', 'display_url': 'pic.twitter.com/tTGUM5d0eT'}]"
1275669988284784642,2020-06-24 06:00:00+00:00,94,32,"Did you know you can now use plotly/bokeh backends for #pandas (interactive) plots?

E.g. just set
pd.options.plotting.backend = ""plotly""

https://t.co/g3QvHfW28a",False,False,https://twitter.com/python_tip/status/1275669988284784642,"[{'url': 'https://t.co/g3QvHfW28a', 'expanded_url': 'https://towardsdatascience.com/plotting-in-pandas-just-got-prettier-289d0e0fe5c0', 'display_url': 'towardsdatascience.com/plotting-in-pa…'}]",[]
1275424368168800256,2020-06-23 13:44:00+00:00,87,22,"Importing functions from a local file is easy, just

>>> import file

But what if the file is not in the same folder/subfolder? This is the workaround:

>>> import sys
>>> sys.path.insert(1, '/path/to/the/file')
>>> import file

Details at
https://t.co/P1j5Xyhne5 https://t.co/EhU4pBye4a",False,False,https://twitter.com/python_tip/status/1275424368168800256,"[{'url': 'https://t.co/P1j5Xyhne5', 'expanded_url': 'https://stackoverflow.com/questions/4383571/importing-files-from-different-folder', 'display_url': 'stackoverflow.com/questions/4383…'}]","[{'url': 'https://t.co/EhU4pBye4a', 'media_url': 'http://pbs.twimg.com/media/EbHpGWvU8AAKRDS.png', 'display_url': 'pic.twitter.com/EhU4pBye4a'}]"
1275053451488215041,2020-06-22 13:10:06+00:00,54,17,"Do you need to do statistics in Python? Are statmodels / scipy.stats too much / not enough at the same time? Try pingouin!

https://t.co/dUi8Ij96ob

Several examples here 👇👇
https://t.co/reV9rd8FTG https://t.co/YkYitMkfeo",False,False,https://twitter.com/python_tip/status/1275053451488215041,"[{'url': 'https://t.co/dUi8Ij96ob', 'expanded_url': 'https://pingouin-stats.org/index.html', 'display_url': 'pingouin-stats.org/index.html'}, {'url': 'https://t.co/reV9rd8FTG', 'expanded_url': 'https://towardsdatascience.com/new-python-library-for-statistical-tests-simpler-than-statsmodels-richer-than-scipy-stats-ff380d4673c0', 'display_url': 'towardsdatascience.com/new-python-lib…'}]","[{'url': 'https://t.co/YkYitMkfeo', 'media_url': 'http://pbs.twimg.com/media/EbHmNqcWsAIsl28.png', 'display_url': 'pic.twitter.com/YkYitMkfeo'}]"
1274052075589074946,2020-06-19 18:51:00+00:00,16,5,"Common plots in #python, comparison of different modules:

https://t.co/Rle7Sfm1Ys",False,False,https://twitter.com/python_tip/status/1274052075589074946,"[{'url': 'https://t.co/Rle7Sfm1Ys', 'expanded_url': 'https://pythonplot.com/#scatter-plot-with-colors', 'display_url': 'pythonplot.com/#scatter-plot-…'}]",[]
1273849068079452160,2020-06-19 05:24:19+00:00,44,10,"Open a page using the default web browser:

>>> import webbrowser
>>> https://t.co/JZLG2SaDuI('https://t.co/hqu0Ad9e8j')
True

#Python",False,False,https://twitter.com/python_tip/status/1273849068079452160,"[{'url': 'https://t.co/JZLG2SaDuI', 'expanded_url': 'http://webbrowser.open', 'display_url': 'webbrowser.open'}]",[]
1273182387703296001,2020-06-17 09:15:10+00:00,9,4,"Guess the results:
>>> import numpy as np
>>> import pandas as pd

>>> np.nan == np.nan

>>> https://t.co/kKksLTtTy3 == https://t.co/kKksLTtTy3

#pandas #numpy",False,False,https://twitter.com/python_tip/status/1273182387703296001,"[{'url': 'https://t.co/kKksLTtTy3', 'expanded_url': 'http://pd.NA', 'display_url': 'pd.NA'}, {'url': 'https://t.co/kKksLTtTy3', 'expanded_url': 'http://pd.NA', 'display_url': 'pd.NA'}]",[]
1272625742417997824,2020-06-15 20:23:15+00:00,123,24,"str.startswith() accepts also a tuple of prefixes to look for:
>>> ""somestring"".startswith((""aa"", ""xx"", ""z"", ""som""))
True
#python
https://t.co/0bM41Fb5p3",False,False,https://twitter.com/python_tip/status/1272625742417997824,"[{'url': 'https://t.co/0bM41Fb5p3', 'expanded_url': 'https://docs.python.org/3/library/stdtypes.html#str.startswith', 'display_url': 'docs.python.org/3/library/stdt…'}]",[]
1271575758448680960,2020-06-12 22:51:00+00:00,60,9,"Get signature of a function with inspect.signature

Example: use argument only if it is in the signature
https://t.co/wN0NzX3Fzf https://t.co/RT3iFEItcj",False,False,https://twitter.com/python_tip/status/1271575758448680960,"[{'url': 'https://t.co/wN0NzX3Fzf', 'expanded_url': 'https://gist.github.com/simecek/346683b38627f95075eb940e6d753ba2', 'display_url': 'gist.github.com/simecek/346683…'}]","[{'url': 'https://t.co/RT3iFEItcj', 'media_url': 'http://pbs.twimg.com/media/EaRUIuiXgAE31ut.jpg', 'display_url': 'pic.twitter.com/RT3iFEItcj'}]"
1271214668506431488,2020-06-11 22:56:09+00:00,61,14,"tqdm() gives you a progress bar for any iterable. But what about pd.Series.apply function? Use pd.Series.progress_apply instead.

Example:
df = pd.DataFrame(range(1000), columns=['numbers'])
df.numbers.progress_apply(lambda x: x**2)

https://t.co/4HYWggzcxh",False,False,https://twitter.com/python_tip/status/1271214668506431488,"[{'url': 'https://t.co/4HYWggzcxh', 'expanded_url': 'https://colab.research.google.com/gist/simecek/f3a30b2b4cd590c31e35f0e4e1fb3462/untitled1.ipynb', 'display_url': 'colab.research.google.com/gist/simecek/f…'}]",[]
1270847614066601986,2020-06-10 22:37:37+00:00,48,16,"Create Python (or R) dashboards directly inside Google Sheets

https://t.co/ZjSwGqqR9J",False,False,https://twitter.com/python_tip/status/1270847614066601986,"[{'url': 'https://t.co/ZjSwGqqR9J', 'expanded_url': 'https://towardsdatascience.com/using-r-and-python-in-google-sheets-formulas-b397b302098', 'display_url': 'towardsdatascience.com/using-r-and-py…'}]",[]
1270423845195911169,2020-06-09 18:33:42+00:00,19,4,"#pythontip by @cpwood:

https://t.co/6woqgz9Bam is a quick way to test the endpoint of a #Flask or #Django webapp -- why write tests for every endpoint when you can have a spider do it for you?",False,False,https://twitter.com/python_tip/status/1270423845195911169,"[{'url': 'https://t.co/6woqgz9Bam', 'expanded_url': 'https://github.com/python-testing-crawler/python-testing-crawler', 'display_url': 'github.com/python-testing…'}]",[]
1270138613817151488,2020-06-08 23:40:18+00:00,52,9,"#pandas pd.describe_option(opt_name) prints the description for `opt_name` option.

Most common pandas display options:
* max_rows
* max_columns
* width
* precision

https://t.co/1RLO6Qdupl https://t.co/GNQhp9TDOL",False,False,https://twitter.com/python_tip/status/1270138613817151488,"[{'url': 'https://t.co/1RLO6Qdupl', 'expanded_url': 'https://www.kaggle.com/python10pm/pandas-100-tricks#Trick-33:-Pandas-display-options', 'display_url': 'kaggle.com/python10pm/pan…'}]","[{'url': 'https://t.co/GNQhp9TDOL', 'media_url': 'http://pbs.twimg.com/media/EaBvcZ2XQAUE01I.png', 'display_url': 'pic.twitter.com/GNQhp9TDOL'}]"
1269103468041682951,2020-06-06 03:07:00+00:00,42,7,"Practical Python Programming - a course by @dabeaz, under CC license. Enjoy!

https://t.co/Yijk640ajY",False,False,https://twitter.com/python_tip/status/1269103468041682951,"[{'url': 'https://t.co/Yijk640ajY', 'expanded_url': 'https://dabeaz-course.github.io/practical-python/', 'display_url': 'dabeaz-course.github.io/practical-pyth…'}]",[]
1268919215295209472,2020-06-05 14:54:50+00:00,77,18,"#pythontip by @1adityajoshi

Use f-strings for string formatting:

lives = ""Black""
print(f""{lives} lives matter"") 
>> ""Black lives matter""

As opposed to 
lives = ""Black""
print(f""{lives} lives matter"".format(lives))
>> ""Black lives matter""",False,False,https://twitter.com/python_tip/status/1268919215295209472,[],[]
1268168638047100930,2020-06-03 13:12:19+00:00,103,36,"If you are new to #python and #github, you can follow @github's introduction and intermediate tutorials.

https://t.co/5g2eLrsNa6
https://t.co/Yrv6aGOxKs",False,False,https://twitter.com/python_tip/status/1268168638047100930,"[{'url': 'https://t.co/5g2eLrsNa6', 'expanded_url': 'https://lab.github.com/everydeveloper/introduction-to-python', 'display_url': 'lab.github.com/everydeveloper…'}, {'url': 'https://t.co/Yrv6aGOxKs', 'expanded_url': 'https://lab.github.com/everydeveloper/intermediate-python', 'display_url': 'lab.github.com/everydeveloper…'}]",[]
1267808435015266304,2020-06-02 13:21:00+00:00,16,3,"Writing blog post in #Jupyter notebooks?  (Almost) no problem for Pelican and the pelican-jupyter plugin.

https://t.co/ehzsNaWiYD",False,False,https://twitter.com/python_tip/status/1267808435015266304,"[{'url': 'https://t.co/ehzsNaWiYD', 'expanded_url': 'https://github.com/danielfrg/pelican-jupyter', 'display_url': 'github.com/danielfrg/peli…'}]",[]
1267432434422996993,2020-06-01 12:26:54+00:00,51,9,"Do you need fake data for your project? Names, addresses or text? Try Faker.

https://t.co/QitcjcHld8",False,False,https://twitter.com/python_tip/status/1267432434422996993,"[{'url': 'https://t.co/QitcjcHld8', 'expanded_url': 'https://github.com/joke2k/faker', 'display_url': 'github.com/joke2k/faker'}]",[]
1266243372378804225,2020-05-29 05:42:00+00:00,42,11,"OpenStreetMaps (OSM) are an incredible resource of information. Here is a colab with an example how to mine for specif points of interest (e.g. mexican restaurant in S.F.) using #OSMnx and plot the result on #folium map.

https://t.co/Rw2gkXuzDM https://t.co/zXpaMWuzdA",False,False,https://twitter.com/python_tip/status/1266243372378804225,"[{'url': 'https://t.co/Rw2gkXuzDM', 'expanded_url': 'https://colab.research.google.com/gist/simecek/fd0eca9fcf29c1816887c10a18d4d5b7/osmnx-example.ipynb', 'display_url': 'colab.research.google.com/gist/simecek/f…'}]","[{'url': 'https://t.co/zXpaMWuzdA', 'media_url': 'http://pbs.twimg.com/media/EY0qGWJXQAUEYwx.jpg', 'display_url': 'pic.twitter.com/zXpaMWuzdA'}]"
1265885513929691143,2020-05-28 06:00:00+00:00,37,18,"Do you feel that #pandas sometimes need complicated statements for a basic stuff?

Have a look at #siuba, a Python port of #rstats #dplyr library:

https://t.co/zBfeH6nEnQ https://t.co/ogVCiNouVn",False,False,https://twitter.com/python_tip/status/1265885513929691143,"[{'url': 'https://t.co/zBfeH6nEnQ', 'expanded_url': 'https://github.com/machow/siuba', 'display_url': 'github.com/machow/siuba'}, {'url': 'https://t.co/ogVCiNouVn', 'expanded_url': 'https://twitter.com/vboykis/status/1256576336254074883', 'display_url': 'twitter.com/vboykis/status…'}]",[]
1265523126718222336,2020-05-27 06:00:00+00:00,84,26,"ipywidgets = interactive HTML widgets for Jupyter notebooks (JN)

voilà = JNs turned into web applications

binder = run JN in a reproducible way online

ipywidgets + voilà + binder = turn your JN into a web app accessible for anybody 

Example: https://t.co/INx50UE8Uv",False,False,https://twitter.com/python_tip/status/1265523126718222336,"[{'url': 'https://t.co/INx50UE8Uv', 'expanded_url': 'https://github.com/voila-gallery/gaussian-density', 'display_url': 'github.com/voila-gallery/…'}]",[]
1265159228328566784,2020-05-26 05:54:00+00:00,40,10,"Cool hack from @raymondh: you can use a dictionary for __slots__ of your class to document the attributes.

If you have never heard about __slots__, read the whole thread. https://t.co/I6VoX9oQbo",False,False,https://twitter.com/python_tip/status/1265159228328566784,"[{'url': 'https://t.co/I6VoX9oQbo', 'expanded_url': 'https://twitter.com/raymondh/status/1255230102754951173', 'display_url': 'twitter.com/raymondh/statu…'}]",[]
1264794827163447296,2020-05-25 05:46:00+00:00,119,21,"#pandas Split a string column into multiple columns with Series.str.split(..., expand = True) 

Example: 👇👇
https://t.co/5ujM9kDFRd https://t.co/ldGtFby6Xs",False,False,https://twitter.com/python_tip/status/1264794827163447296,"[{'url': 'https://t.co/5ujM9kDFRd', 'expanded_url': 'https://www.kaggle.com/python10pm/pandas-100-tricks#Trick-21:-Split-a-string-column-into-multiple-columns', 'display_url': 'kaggle.com/python10pm/pan…'}]","[{'url': 'https://t.co/ldGtFby6Xs', 'media_url': 'http://pbs.twimg.com/media/EYz0DZaXQAAVc5L.jpg', 'display_url': 'pic.twitter.com/ldGtFby6Xs'}]"
1263788523590684676,2020-05-22 11:07:18+00:00,73,11,">>> s = ""Große""
>>> s.upper()
'GROSSE'
>>> s.lower()
'große'
>>> s.casefold()
'grosse'",False,False,https://twitter.com/python_tip/status/1263788523590684676,[],[]
1262973579181817856,2020-05-20 05:09:00+00:00,147,28,#Jupyter notebook magic %history gives you a list of all the commands run in the notebook. https://t.co/Uwy5s8d64V,False,False,https://twitter.com/python_tip/status/1262973579181817856,[],"[{'url': 'https://t.co/Uwy5s8d64V', 'media_url': 'http://pbs.twimg.com/media/EYb7m1zXQAImXPP.jpg', 'display_url': 'pic.twitter.com/Uwy5s8d64V'}]"
1262964183550877697,2020-05-20 04:31:40+00:00,0,0,"RT @eumiro: @jonaro00 @python_tip One of the mañanas contains one character ""\N{latin small letter n with tilde}"", another one two characte…",False,True,https://twitter.com/python_tip/status/1262964183550877697,[],[]
1262725016153661440,2020-05-19 12:41:18+00:00,62,15,"Normalize, normalize,... and normalize.

>>> 'mañana' == 'mañana'
False
>>> from unicodedata import normalize
>>> normalize('NFC', 'mañana') == normalize('NFC', 'mañana')
True
>>>",False,False,https://twitter.com/python_tip/status/1262725016153661440,[],[]
1261567058539511808,2020-05-16 08:00:00+00:00,134,32,"Simple animations with #celluloid. Just call camera.snap() after each plot

fig = plt.figure()
camera = https://t.co/O2fo1IwBR6(fig)

t = np.linspace(0, 2*np.pi, 128, endpoint=False)
for i in t:
    plt.plot(t, np.sin(t+i), color='blue')
    camera.snap()

https://t.co/ZuB4oUiGFo https://t.co/CFHUctSw7a",False,False,https://twitter.com/python_tip/status/1261567058539511808,"[{'url': 'https://t.co/O2fo1IwBR6', 'expanded_url': 'http://celluloid.Camera', 'display_url': 'celluloid.Camera'}, {'url': 'https://t.co/ZuB4oUiGFo', 'expanded_url': 'https://github.com/jwkvam/celluloid/', 'display_url': 'github.com/jwkvam/cellulo…'}]","[{'url': 'https://t.co/CFHUctSw7a', 'media_url': 'http://pbs.twimg.com/ext_tw_video_thumb/1261379229729595394/pu/img/MFvI3fwjx9kvMv-b.jpg', 'display_url': 'pic.twitter.com/CFHUctSw7a'}]"
1261365933999681537,2020-05-15 18:40:48+00:00,10,2,"#pythontip by @psincraian:

View download stats of python packages at https://t.co/C0hnDMOhEA",False,False,https://twitter.com/python_tip/status/1261365933999681537,"[{'url': 'https://t.co/C0hnDMOhEA', 'expanded_url': 'https://pepy.tech/', 'display_url': 'pepy.tech'}]",[]
1261044134057476097,2020-05-14 21:22:05+00:00,33,10,"List unpacking is faster than indexing 👇👇

Thanks, @sponsfreixes.

More discussion at
https://t.co/PAPELdhSEz https://t.co/oxcFE3Mo2G",False,False,https://twitter.com/python_tip/status/1261044134057476097,"[{'url': 'https://t.co/PAPELdhSEz', 'expanded_url': 'https://stackoverflow.com/questions/13024416/how-come-unpacking-is-faster-than-accessing-by-index', 'display_url': 'stackoverflow.com/questions/1302…'}, {'url': 'https://t.co/oxcFE3Mo2G', 'expanded_url': 'https://twitter.com/sponsfreixes/status/1260969323163615235', 'display_url': 'twitter.com/sponsfreixes/s…'}]",[]
1260365737715253249,2020-05-13 00:26:22+00:00,36,2,"Use #folium to create interactive maps. 

It works even in Colab 👇
https://t.co/VmlEZyLxEe

You can save your map into a static web page with 

your_map.save(outfile= ""my_map_page.html"") https://t.co/pVsTdNjqij",False,False,https://twitter.com/python_tip/status/1260365737715253249,"[{'url': 'https://t.co/VmlEZyLxEe', 'expanded_url': 'https://colab.research.google.com/gist/simecek/32f934aa2ad2b6442fb634f38b846066/folium_demo.ipynb', 'display_url': 'colab.research.google.com/gist/simecek/3…'}]","[{'url': 'https://t.co/pVsTdNjqij', 'media_url': 'http://pbs.twimg.com/media/EX23BvgXkAE5xSP.png', 'display_url': 'pic.twitter.com/pVsTdNjqij'}]"
1259981022252408835,2020-05-11 22:57:39+00:00,114,36,"#Pandas https://t.co/ZTlyyXqxn1 enables you to
a) hide index (hide_index)
b) set caption (set_caption)
c) formatting and highlighting of columns (format, highlight_min, highlight_max, background_gradient)

For examples, see
https://t.co/zLX99Kb8FP https://t.co/aU2r0nFxIN",False,False,https://twitter.com/python_tip/status/1259981022252408835,"[{'url': 'https://t.co/ZTlyyXqxn1', 'expanded_url': 'http://DataFrame.style', 'display_url': 'DataFrame.style'}, {'url': 'https://t.co/zLX99Kb8FP', 'expanded_url': 'https://towardsdatascience.com/style-pandas-dataframe-like-a-master-6b02bf6468b0', 'display_url': 'towardsdatascience.com/style-pandas-d…'}]","[{'url': 'https://t.co/aU2r0nFxIN', 'media_url': 'http://pbs.twimg.com/media/EXxZ2csWkAIZQuL.png', 'display_url': 'pic.twitter.com/aU2r0nFxIN'}]"
1258886266055266306,2020-05-08 22:27:29+00:00,109,33,"Rich:  #Python library for rendering rich text and beautiful formatting to the terminal. Compatible with Linux, OSX and Windows. Version 1.0 just released. 
https://t.co/f9C2D4MpCv",False,False,https://twitter.com/python_tip/status/1258886266055266306,"[{'url': 'https://t.co/f9C2D4MpCv', 'expanded_url': 'https://github.com/willmcgugan/rich', 'display_url': 'github.com/willmcgugan/ri…'}]",[]
1258297158207451136,2020-05-07 07:26:35+00:00,81,19,"Do you need something like range() but with float numbers? Try numpy.arange()

>>> range(0, 5, 0.5) #Error!

>>> np.arange(0, 5, 0.5)
array([0. , 0.5, 1. , 1.5, 2. , 2.5, 3. , 3.5, 4. , 4.5])

#numpy",False,False,https://twitter.com/python_tip/status/1258297158207451136,[],[]
1257804376829308928,2020-05-05 22:48:26+00:00,51,6,"If the local date format us DD/MM/YYYY, you can use the dayfirst=True argument in dateutil.parser.parse:

>>> from dateutil.parser import parse
>>> s = '6.5.2020'
>>> parse(s)
datetime.datetime(2020, 6, 5, 0, 0)
>>> parse(s, dayfirst=True)
datetime.datetime(2020, 5, 6, 0, 0)",False,False,https://twitter.com/python_tip/status/1257804376829308928,[],[]
1257645833174028290,2020-05-05 12:18:27+00:00,66,12,"Apart of converting strings to lowercase or uppercase, you can use the swapcase() method. 

>>> s = 'Python is aWeSome.'
>>> s.upper()
'PYTHON IS AWESOME.'
>>> s.lower()
'python is awesome.'
>>> s.swapcase()
'pYTHON IS AwEsOME.'

https://t.co/wFce5kNyF9

#Python",False,False,https://twitter.com/python_tip/status/1257645833174028290,"[{'url': 'https://t.co/wFce5kNyF9', 'expanded_url': 'https://docs.python.org/3/library/stdtypes.html#str.swapcase', 'display_url': 'docs.python.org/3/library/stdt…'}]",[]
1256227258689294337,2020-05-01 14:21:32+00:00,32,11,"mkdir test
echo ""print('Hello world!')"" > test/__main__.py
zip -j https://t.co/4nNyHnUmpT test/*
python https://t.co/4nNyHnUmpT

Note, it can further improved 
https://t.co/WMYlPGATSP
(also note, this opens Pandora's box of security vulnerabilities) https://t.co/KcMMiVmAAw",False,False,https://twitter.com/python_tip/status/1256227258689294337,"[{'url': 'https://t.co/4nNyHnUmpT', 'expanded_url': 'http://test.zip', 'display_url': 'test.zip'}, {'url': 'https://t.co/4nNyHnUmpT', 'expanded_url': 'http://test.zip', 'display_url': 'test.zip'}, {'url': 'https://t.co/WMYlPGATSP', 'expanded_url': 'https://stackoverflow.com/a/19543959', 'display_url': 'stackoverflow.com/a/19543959'}, {'url': 'https://t.co/KcMMiVmAAw', 'expanded_url': 'https://twitter.com/indiecom/status/1255555099088338946', 'display_url': 'twitter.com/indiecom/statu…'}]",[]
1255981809814441984,2020-04-30 22:06:13+00:00,79,15,"Use `subplots=True` to plot columns of #pandas DataFrame into separate subfigures (and `subplots=False` to combine them into one figure). 

Example: 👇👇
https://t.co/jC6KjzAQez https://t.co/L1TPfaQjXC",False,False,https://twitter.com/python_tip/status/1255981809814441984,"[{'url': 'https://t.co/jC6KjzAQez', 'expanded_url': 'https://gist.github.com/simecek/7aa4bbfafdb5df4e21f4581b5843c69c', 'display_url': 'gist.github.com/simecek/7aa4bb…'}]","[{'url': 'https://t.co/L1TPfaQjXC', 'media_url': 'http://pbs.twimg.com/media/EW4fjmMXgAIPByH.png', 'display_url': 'pic.twitter.com/L1TPfaQjXC'}]"
1255376267928571905,2020-04-29 06:00:00+00:00,68,13,"Interpolate missing values in your series with pd.Series.interpolate.

Example: 👇👇 https://t.co/9Zp5efRa8k",False,False,https://twitter.com/python_tip/status/1255376267928571905,[],"[{'url': 'https://t.co/9Zp5efRa8k', 'media_url': 'http://pbs.twimg.com/media/EWkPms4WsAEOzCv.png', 'display_url': 'pic.twitter.com/9Zp5efRa8k'}]"
1255013374653587456,2020-04-28 05:58:00+00:00,48,18,"Find Errors Faster and Write Simpler Functions with Sonarlint
- identify uncalled code
- security risks
- cognitive complexity
More info: weapon #3 at
https://t.co/9e8pIXbDoj

VS code extension:
https://t.co/a6UsoEnhwx",False,False,https://twitter.com/python_tip/status/1255013374653587456,"[{'url': 'https://t.co/9e8pIXbDoj', 'expanded_url': 'https://towardsdatascience.com/the-3-secret-weapons-that-changed-my-python-editor-forever-c99f7b2e0084', 'display_url': 'towardsdatascience.com/the-3-secret-w…'}, {'url': 'https://t.co/a6UsoEnhwx', 'expanded_url': 'https://www.sonarlint.org/vscode/', 'display_url': 'sonarlint.org/vscode/'}]",[]
1254733346908901381,2020-04-27 11:25:16+00:00,111,55,"Thanks, Springer, for releasing many Python/ML/DS books for free:

https://t.co/p3PcoWmIRQ

Including...

Data Structures and Algorithms with Python, https://t.co/zzbeTudBF1

Python Programming Fundamentals, https://t.co/Ca5sUwyWVG

Python For ArcGIS, https://t.co/0UsuDYmYN8",False,False,https://twitter.com/python_tip/status/1254733346908901381,"[{'url': 'https://t.co/p3PcoWmIRQ', 'expanded_url': 'https://towardsdatascience.com/springer-has-released-65-machine-learning-and-data-books-for-free-961f8181f189', 'display_url': 'towardsdatascience.com/springer-has-r…'}, {'url': 'https://t.co/zzbeTudBF1', 'expanded_url': 'https://link.springer.com/book/10.1007/978-3-319-13072-9', 'display_url': 'link.springer.com/book/10.1007/9…'}, {'url': 'https://t.co/Ca5sUwyWVG', 'expanded_url': 'https://link.springer.com/book/10.1007/978-1-4471-6642-9', 'display_url': 'link.springer.com/book/10.1007/9…'}, {'url': 'https://t.co/0UsuDYmYN8', 'expanded_url': 'https://link.springer.com/book/10.1007/978-3-319-18398-5', 'display_url': 'link.springer.com/book/10.1007/9…'}]",[]
1254651491152953347,2020-04-27 06:00:00+00:00,22,5,"Do you want to avoid problems with math.nan? Use #numpy!

> np.sort([5., math.nan, 10., 0.])
array([ 0.,  5., 10., nan])

> np.sort([math.nan, 1.])
array([ 1., nan])
> sorted([1., math.nan])
array([ 1., nan])

> np.max([3., math.nan, 1.])
nan
> np.nanmax([3., math.nan, 1.])
3.0 https://t.co/d3HKD31aw9",False,False,https://twitter.com/python_tip/status/1254651491152953347,"[{'url': 'https://t.co/d3HKD31aw9', 'expanded_url': 'https://twitter.com/python_tip/status/1253646874306924545', 'display_url': 'twitter.com/python_tip/sta…'}]",[]
1253646874306924545,2020-04-24 11:28:01+00:00,54,11,"Beware of nan!  
😱#python

>>> sorted([5.0, math.nan, 10.0, 0.0])
[5.0, nan, 0.0, 10.0]

>>> sorted([math.nan, 1.0])
[nan, 1.0]
>>> sorted([1.0, math.nan])
[1.0, nan]

>>> min(3, math.nan, 1)
1
>>> min(math.nan, 3, 1)
nan

#pythontip by @raymondh",False,False,https://twitter.com/python_tip/status/1253646874306924545,[],[]
1253236187906572288,2020-04-23 08:16:05+00:00,44,14,"None is evaluated as False so you can write 

>>> results = None
>>> print(results or ""No results"")

Use case:
def query(q, connection=None):
    conn = connection or create_connection()
    c = conn.cursor()
    ...

#python_tip by @IDryer and @Pythonic_",False,False,https://twitter.com/python_tip/status/1253236187906572288,[],[]
1252720331350999041,2020-04-21 22:06:16+00:00,31,11,"#pydoc is a fantastic tool for viewing documentation of #python libraries.

Link: https://t.co/iKKKP0EFkv

Usage

$ pydoc numpy.array 

or

$ pydoc -p 1234   # browse to localhost:1234

#pythontip by @mmngreco",False,False,https://twitter.com/python_tip/status/1252720331350999041,"[{'url': 'https://t.co/iKKKP0EFkv', 'expanded_url': 'https://docs.python.org/3/library/pydoc.html', 'display_url': 'docs.python.org/3/library/pydo…'}]",[]
1252371754581803008,2020-04-20 23:01:08+00:00,47,27,"Have you tried PyCaret?  
An open source, low-code #MachineLearning library. Share your experience with us.

https://t.co/GisEOQk7XX",False,False,https://twitter.com/python_tip/status/1252371754581803008,"[{'url': 'https://t.co/GisEOQk7XX', 'expanded_url': 'https://towardsdatascience.com/announcing-pycaret-an-open-source-low-code-machine-learning-library-in-python-4a1f1aad8d46', 'display_url': 'towardsdatascience.com/announcing-pyc…'}]",[]
1251533428098555904,2020-04-18 15:29:56+00:00,84,17,"Get 1% random sample of a huge CSV file (+ other 99 #pandas tricks):

df = https://t.co/KBWVZaKP7L_csv(""YOUR_BIG_FILE.csv"", skiprows = lambda x: x>0 and np.random.rand() > 0.01)

https://t.co/iiDCjk3oOX",False,False,https://twitter.com/python_tip/status/1251533428098555904,"[{'url': 'https://t.co/KBWVZaKP7L', 'expanded_url': 'http://pd.read', 'display_url': 'pd.read'}, {'url': 'https://t.co/iiDCjk3oOX', 'expanded_url': 'https://www.kaggle.com/python10pm/pandas-100-tricks#Trick-100:-Loading-sample-of-big-data', 'display_url': 'kaggle.com/python10pm/pan…'}]",[]
1251305436441202691,2020-04-18 00:23:58+00:00,19,8,"PyConUS is taking place right now. Read intro https://t.co/TOBhLLNnV1 & subscribe to YT channel https://t.co/1myy0jozdW

Still hungry? Come to Remote Python 🍕https://t.co/9bX4QTZmON

Or join us at ""Optimization for ML: From Theory to Practice and Back"" https://t.co/lqDnHEn7Sw https://t.co/jg6oULh1OZ",False,False,https://twitter.com/python_tip/status/1251305436441202691,"[{'url': 'https://t.co/TOBhLLNnV1', 'expanded_url': 'https://us.pycon.org/2020/online/', 'display_url': 'us.pycon.org/2020/online/'}, {'url': 'https://t.co/1myy0jozdW', 'expanded_url': 'https://www.youtube.com/c/PyCon2020', 'display_url': 'youtube.com/c/PyCon2020'}, {'url': 'https://t.co/9bX4QTZmON', 'expanded_url': 'https://remote.python.pizza/', 'display_url': 'remote.python.pizza'}, {'url': 'https://t.co/lqDnHEn7Sw', 'expanded_url': 'https://www.meetup.com/Machine-Learning-Meetup-Brno/events/270062275/', 'display_url': 'meetup.com/Machine-Learni…'}]","[{'url': 'https://t.co/jg6oULh1OZ', 'media_url': 'http://pbs.twimg.com/media/EV2Hm-AWoAEGbgf.jpg', 'display_url': 'pic.twitter.com/jg6oULh1OZ'}]"
1250737136149692417,2020-04-16 10:45:45+00:00,31,8,"#pythontip by @RashmikaNawa:

How to increase speed when iterating over rows in a DataFrame? Use `itertuples()` instead of `iterrows()`.

Also, consider vectorization or `apply()` instead. 

More info:
https://t.co/4irSUKz3Eh

#pandas #performance https://t.co/exaEnelqq4",False,False,https://twitter.com/python_tip/status/1250737136149692417,"[{'url': 'https://t.co/4irSUKz3Eh', 'expanded_url': 'https://stackoverflow.com/questions/16476924/how-to-iterate-over-rows-in-a-dataframe-in-pandas', 'display_url': 'stackoverflow.com/questions/1647…'}, {'url': 'https://t.co/exaEnelqq4', 'expanded_url': 'https://twitter.com/RashmikaNawa/status/1250599237529657346', 'display_url': 'twitter.com/RashmikaNawa/s…'}]",[]
1250557581560623108,2020-04-15 22:52:16+00:00,26,6,"Cookiecutter template for a data science project

https://t.co/L98dKi25ox",False,False,https://twitter.com/python_tip/status/1250557581560623108,"[{'url': 'https://t.co/L98dKi25ox', 'expanded_url': 'https://github.com/drivendata/cookiecutter-data-science', 'display_url': 'github.com/drivendata/coo…'}]",[]
1250198338152128514,2020-04-14 23:04:46+00:00,107,20,"Use `parse` package as an alternative to string parsing with regular expressions. In short, parse() is the opposite of format().

https://t.co/lUQObe6umZ

Examples: 👇👇 https://t.co/Z7Sh4jQyoz",False,False,https://twitter.com/python_tip/status/1250198338152128514,"[{'url': 'https://t.co/lUQObe6umZ', 'expanded_url': 'https://pypi.org/project/parse/', 'display_url': 'pypi.org/project/parse/'}]","[{'url': 'https://t.co/Z7Sh4jQyoz', 'media_url': 'http://pbs.twimg.com/media/EVmYwAVXYAQr1NC.png', 'display_url': 'pic.twitter.com/Z7Sh4jQyoz'}]"
1250048761314902017,2020-04-14 13:10:24+00:00,2,2,Which one do you prefer?,False,False,https://twitter.com/python_tip/status/1250048761314902017,[],[]
1250048286293196800,2020-04-14 13:08:30+00:00,54,7,"It has been three years since we posted the first #pythontip.

To celebrate, we decided to come with a new logo. Please, help us choosing from two candidates: https://t.co/Qp81qcS6tY",False,False,https://twitter.com/python_tip/status/1250048286293196800,[],"[{'url': 'https://t.co/Qp81qcS6tY', 'media_url': 'http://pbs.twimg.com/media/EVkP8DrX0AANWHz.jpg', 'display_url': 'pic.twitter.com/Qp81qcS6tY'}]"
1249818468859498498,2020-04-13 21:55:18+00:00,33,16,"Create geographical scatter plots with #python and #plotly (plotly.graph_objects.Scattergeo or https://t.co/7rUbsWonBC.scatter_geo)

https://t.co/spmqGLbvBJ

Example:
https://t.co/imdEPvX6ut

#dataviz",False,False,https://twitter.com/python_tip/status/1249818468859498498,"[{'url': 'https://t.co/7rUbsWonBC', 'expanded_url': 'http://plotly.express', 'display_url': 'plotly.express'}, {'url': 'https://t.co/spmqGLbvBJ', 'expanded_url': 'https://plotly.com/python/scatter-plots-on-maps/', 'display_url': 'plotly.com/python/scatter…'}, {'url': 'https://t.co/imdEPvX6ut', 'expanded_url': 'https://www.geodose.com/2020/02/tracking-coronavirus-python-map.html', 'display_url': 'geodose.com/2020/02/tracki…'}]",[]
1248357517832437762,2020-04-09 21:10:00+00:00,42,9,"Remove a file in #python #pathlib:

from pathlib import Path
file_path = Path('/path/to/myfile.xyz')
file_path.unlink()",False,False,https://twitter.com/python_tip/status/1248357517832437762,[],[]
1248202849818992641,2020-04-09 10:55:24+00:00,14,2,"#pycon 2020 has been cancelled.  

Good news: online content coming soon. Sign up for updates https://t.co/TOBhLLNnV1

via @naPyvo",False,False,https://twitter.com/python_tip/status/1248202849818992641,"[{'url': 'https://t.co/TOBhLLNnV1', 'expanded_url': 'https://us.pycon.org/2020/online/', 'display_url': 'us.pycon.org/2020/online/'}]",[]
1247658802603855877,2020-04-07 22:53:33+00:00,29,8,"#pandas 

df.pct_change() calculates percentage change between the current and a prior element.

https://t.co/NDpJMxcyln",False,False,https://twitter.com/python_tip/status/1247658802603855877,"[{'url': 'https://t.co/NDpJMxcyln', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.pct_change.html', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}]",[]
1247259752410865666,2020-04-06 20:27:52+00:00,58,14,"Turn #Jupyter notebooks into web applications with Voilà.

#Voilà
> supports interactive widgets
> doesn't permit arbitrary code execution
> works with any Jupyter kernel
> includes a template system to produce app layouts
 
https://t.co/VdqXGxD8vn",False,False,https://twitter.com/python_tip/status/1247259752410865666,"[{'url': 'https://t.co/VdqXGxD8vn', 'expanded_url': 'https://github.com/voila-dashboards/voila', 'display_url': 'github.com/voila-dashboar…'}]",[]
1245954181346684929,2020-04-03 06:00:00+00:00,10,4,"#pythontip from @Tiff_callahan:

The setup_python_package (by @workaholicyeast) helps to automate the process of creating a new Python package.

https://t.co/Woe9weHThz

(alternatively, you can use a #cookiecutter https://t.co/XIC5JMdngV)",False,False,https://twitter.com/python_tip/status/1245954181346684929,"[{'url': 'https://t.co/Woe9weHThz', 'expanded_url': 'https://github.com/LucaCappelletti94/setup_python_package', 'display_url': 'github.com/LucaCappellett…'}, {'url': 'https://t.co/XIC5JMdngV', 'expanded_url': 'https://github.com/audreyr/cookiecutter-pypackage', 'display_url': 'github.com/audreyr/cookie…'}]",[]
1245591796098318339,2020-04-02 06:00:00+00:00,37,10,"Deploy your Python app to Heroku

https://t.co/NtMHOCbXvf",False,False,https://twitter.com/python_tip/status/1245591796098318339,"[{'url': 'https://t.co/NtMHOCbXvf', 'expanded_url': 'https://github.com/heroku/python-getting-started', 'display_url': 'github.com/heroku/python-…'}]",[]
1245308006126010370,2020-04-01 11:12:20+00:00,0,0,"@P_Zawadzki88 I love those two friends, adding them to our name.",True,False,https://twitter.com/python_tip/status/1245308006126010370,[],[]
1245233683948331009,2020-04-01 06:17:00+00:00,14,3,"We are creating a new PyData chapter – PyAntarctica: 
* Free penguin to every new member
* The only continent without COVID-19
* PyCon.Antartica should be a real thing. Also, the stickers!

We are accepting Antarcticans-in-heart from all 7 continents –
https://t.co/pjJG7nCC02 https://t.co/MHvT3U64BC",False,False,https://twitter.com/python_tip/status/1245233683948331009,"[{'url': 'https://t.co/pjJG7nCC02', 'expanded_url': 'https://forms.gle/Cx56MXpBucTKa8dH7', 'display_url': 'forms.gle/Cx56MXpBucTKa8…'}]","[{'url': 'https://t.co/MHvT3U64BC', 'media_url': 'http://pbs.twimg.com/media/EUeeP2_XQAck67R.jpg', 'display_url': 'pic.twitter.com/MHvT3U64BC'}]"
1245123709251264512,2020-03-31 23:00:00+00:00,14,8,"Are you tired of parsing HTTP/IMAP headers? 

Is you code as unreadable as
>>> charset = headers['Content-Type'].split(';')[-1].split('=')[-1].replace('""', '')

Try @Ousret's `kiss_headers` package:

https://t.co/07DIC42QG0 https://t.co/UhuBQvzr2v",False,False,https://twitter.com/python_tip/status/1245123709251264512,"[{'url': 'https://t.co/07DIC42QG0', 'expanded_url': 'https://github.com/Ousret/kiss-headers', 'display_url': 'github.com/Ousret/kiss-he…'}]","[{'url': 'https://t.co/UhuBQvzr2v', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/EUcZue-WoAAjLVr.jpg', 'display_url': 'pic.twitter.com/UhuBQvzr2v'}]"
1244984244318896128,2020-03-31 13:45:49+00:00,33,8,"#pandas groupby silently drops NaNs:

import pandas as pd
import numpy as np

birds = pd.Series([390., 350., 30., 20., np.NaN], index=['Falcon', 'Falcon', 'Parrot', 'Parrot', 'Dodo'])
len(birds)   # = 5

birds.groupby(birds > 100).count().sum()   # = 4 https://t.co/sOlPLaE1dO",False,False,https://twitter.com/python_tip/status/1244984244318896128,"[{'url': 'https://t.co/sOlPLaE1dO', 'expanded_url': 'https://twitter.com/benhamner/status/1242332601332842496', 'display_url': 'twitter.com/benhamner/stat…'}]",[]
1244720093688475648,2020-03-30 20:16:10+00:00,0,0,RT @Elisabeth57runk: @python_tip This Meetup with Wild Code School - Dublin @Wild_Dublin could be fun especially for #codenewbies: Creating…,False,True,https://twitter.com/python_tip/status/1244720093688475648,[],[]
1244409027771224064,2020-03-29 23:40:06+00:00,12,3,"I'll start... first Brno Machine Learning Meetup will be held online (streamed on Zoom) on March 31, 18:30 CEST (= 12:30 EDT or 9:30 PDT).

A. Sedlakova will speak about telling stories with data, details at
https://t.co/S8Qp35jdlr

Everybody is welcome!",False,False,https://twitter.com/python_tip/status/1244409027771224064,"[{'url': 'https://t.co/S8Qp35jdlr', 'expanded_url': 'https://www.meetup.com/Machine-Learning-Meetup-Brno/events/269547314/', 'display_url': 'meetup.com/Machine-Learni…'}]",[]
1244407617373552642,2020-03-29 23:34:30+00:00,18,7,"Many of us are stuck home quarantined. But it gives you a chance to visit events in a different city or country that were converted to remote/online. 

Any tips for the next 10 days? Share them in this thread!",False,False,https://twitter.com/python_tip/status/1244407617373552642,[],[]
1244360047595044866,2020-03-29 20:25:29+00:00,30,10,"Free read under CC license: Automate the Boring Stuff with Python by @AlSweigart 

https://t.co/YYlIqGnpt4

#python",False,False,https://twitter.com/python_tip/status/1244360047595044866,"[{'url': 'https://t.co/YYlIqGnpt4', 'expanded_url': 'https://automatetheboringstuff.com/', 'display_url': 'automatetheboringstuff.com'}]",[]
1243313653471948801,2020-03-26 23:07:29+00:00,51,10,"What will be the output? Try it for yourself.

>>> arr3 = [1, 2, 3]
>>> arr4 = [10, 20, 30]
>>> gen = (i + j for i in arr3 for j in arr4)
>>> arr3 = [4, 5, 6]
>>> arr4 = [400, 500, 600]
>>> print(list(gen))

Explanation: https://t.co/5VGEX9FWPv 

#wtf #python",False,False,https://twitter.com/python_tip/status/1243313653471948801,"[{'url': 'https://t.co/5VGEX9FWPv', 'expanded_url': 'https://www.python.org/dev/peps/pep-0289/#the-details', 'display_url': 'python.org/dev/peps/pep-0…'}]",[]
1242932898191290368,2020-03-25 21:54:30+00:00,11,7,"#StayHome and attend Remote #Python Pizza. April 25, 1 day, 1 track, 10 min talks. 
https://t.co/LSHOxg0BaP

CFP and ticket sale are open. 

All proceeds will go to Doctors Without Borders.",False,False,https://twitter.com/python_tip/status/1242932898191290368,"[{'url': 'https://t.co/LSHOxg0BaP', 'expanded_url': 'https://remote.python.pizza', 'display_url': 'remote.python.pizza'}]",[]
1242559703776976901,2020-03-24 21:11:33+00:00,10,6,"It's Tuesday already but you can still join Pyweek. Create a game in #python and have fun.
https://t.co/pyRfTS1SiJ",False,False,https://twitter.com/python_tip/status/1242559703776976901,"[{'url': 'https://t.co/pyRfTS1SiJ', 'expanded_url': 'https://pyweek.org/', 'display_url': 'pyweek.org'}]",[]
1242208935299428358,2020-03-23 21:57:43+00:00,32,13,"Create geographical statter plots with #python and #plotly.
Try plotly.graph_objects.Scattergeo or https://t.co/7rUbsWonBC.scatter_geo

https://t.co/imdEPvX6ut

https://t.co/spmqGLbvBJ

#dataviz",False,False,https://twitter.com/python_tip/status/1242208935299428358,"[{'url': 'https://t.co/7rUbsWonBC', 'expanded_url': 'http://plotly.express', 'display_url': 'plotly.express'}, {'url': 'https://t.co/imdEPvX6ut', 'expanded_url': 'https://www.geodose.com/2020/02/tracking-coronavirus-python-map.html', 'display_url': 'geodose.com/2020/02/tracki…'}, {'url': 'https://t.co/spmqGLbvBJ', 'expanded_url': 'https://plotly.com/python/scatter-plots-on-maps/', 'display_url': 'plotly.com/python/scatter…'}]",[]
1240898115730722816,2020-03-20 07:09:00+00:00,21,2,"Save the environment with #conda (and let others run your programs)

https://t.co/MpU4Mq5sMt https://t.co/mTEYKIpLNk",False,False,https://twitter.com/python_tip/status/1240898115730722816,"[{'url': 'https://t.co/MpU4Mq5sMt', 'expanded_url': 'https://kiwidamien.github.io/save-the-environment-with-conda-and-how-to-let-others-run-your-programs.html', 'display_url': 'kiwidamien.github.io/save-the-envir…'}]","[{'url': 'https://t.co/mTEYKIpLNk', 'media_url': 'http://pbs.twimg.com/media/ETbgHUEWoAoUpuR.jpg', 'display_url': 'pic.twitter.com/mTEYKIpLNk'}]"
1240534469850914819,2020-03-19 07:04:00+00:00,107,18,"Plot diagrams with #graphviz

Example: 👇
(`gv` code copied from fastai utils)

import graphviz
def gv(s): return graphviz.Source('digraph G{ rankdir=""LR""' + s + '; }')

gv('diagrams[shape=box3d width=1 height=0.7] my->diagrams->are->very; diagrams->very->complex; my->complex') https://t.co/QtrLayMWkl",False,False,https://twitter.com/python_tip/status/1240534469850914819,[],"[{'url': 'https://t.co/QtrLayMWkl', 'media_url': 'http://pbs.twimg.com/media/ETbe5xkXYAMfnby.png', 'display_url': 'pic.twitter.com/QtrLayMWkl'}]"
1240392335667724288,2020-03-18 21:39:12+00:00,17,6,"Sampling saves time. Are your data too big? Calculate statistics on a random sample:

Gist with a Colab link:
https://t.co/nZ9JrZZQHN

(based on a tweet from @raymondh https://t.co/QW3VKFycwE) https://t.co/4c7OM0ub23",False,False,https://twitter.com/python_tip/status/1240392335667724288,"[{'url': 'https://t.co/nZ9JrZZQHN', 'expanded_url': 'https://gist.github.com/simecek/d56e5d50ebe8ba9ca4b31b4e0c775738', 'display_url': 'gist.github.com/simecek/d56e5d…'}, {'url': 'https://t.co/QW3VKFycwE', 'expanded_url': 'https://twitter.com/raymondh/status/1202772908696854528', 'display_url': 'twitter.com/raymondh/statu…'}]","[{'url': 'https://t.co/4c7OM0ub23', 'media_url': 'http://pbs.twimg.com/media/ETbCJtgXkAQ0tEw.png', 'display_url': 'pic.twitter.com/4c7OM0ub23'}]"
1240016313881448449,2020-03-17 20:45:02+00:00,167,80,"Do you want to analyze COVID-19 data in Python?

a)  Johns Hopkins CSSE dataset https://t.co/uSKsTyFYqD

b) COVID-19 Dashboards (click on ""View on Github"" to see Python code producing dashboards) https://t.co/cKk6Jqj3aL

c) Lots of inspiration on Kaggle
https://t.co/yQO9Mqf6Go",False,False,https://twitter.com/python_tip/status/1240016313881448449,"[{'url': 'https://t.co/uSKsTyFYqD', 'expanded_url': 'https://github.com/CSSEGISandData/COVID-19', 'display_url': 'github.com/CSSEGISandData…'}, {'url': 'https://t.co/cKk6Jqj3aL', 'expanded_url': 'http://covid19dashboards.com/', 'display_url': 'covid19dashboards.com'}, {'url': 'https://t.co/yQO9Mqf6Go', 'expanded_url': 'https://www.kaggle.com/search?q=coronavirus+in%3Anotebooks', 'display_url': 'kaggle.com/search?q=coron…'}]",[]
1239637151970668552,2020-03-16 19:38:23+00:00,11,5,"#pythontip by @ori75660:

Python and PayPal API, it is not that scary —
https://t.co/dGDrQq4wkw

Do you have a tip you wanna share? Just tag @python_tip in your tweet.
#api #requests #paypal",False,False,https://twitter.com/python_tip/status/1239637151970668552,"[{'url': 'https://t.co/dGDrQq4wkw', 'expanded_url': 'https://dapythonista.com/2020/03/03/api-its-not-that-scary/', 'display_url': 'dapythonista.com/2020/03/03/api…'}]",[]
1238465351895171075,2020-03-13 14:02:04+00:00,74,12,"Number of values that meet a condition:
(df.rating > 90).sum()
df.somecol.isnull().sum()

Proportion of values that meet a condition:
(df.rating > 90).mean()

#Pandas",False,False,https://twitter.com/python_tip/status/1238465351895171075,[],[]
1237862587586338816,2020-03-11 22:06:53+00:00,97,25,"from pathlib import Path

file_path = ""/path/to/myfile.png""

file_name = Path(file_path).name  # myfile.png
file_stem = Path(file_path).stem  # myfile
file_ext = Path(file_path).suffix # .png",False,False,https://twitter.com/python_tip/status/1237862587586338816,[],[]
1237117902488305664,2020-03-09 20:47:47+00:00,121,21,">>> numbers = ['9', '44', '8', '222']
>>> max(numbers)
'9'
>>> max(numbers, key=int)
'222'
#python",False,False,https://twitter.com/python_tip/status/1237117902488305664,[],[]
1236802842901524481,2020-03-08 23:55:51+00:00,24,4,"How to run Jupyter Notebook as a service (on Ubuntu 18.04)

https://t.co/NulO72AoKB

You can use this to run Jupyter Notebook on Amazon EC2 instance. Here are a few tricks (e.g. how to start/stop the instance from the command line)

https://t.co/Eml7DCWWlE",False,False,https://twitter.com/python_tip/status/1236802842901524481,"[{'url': 'https://t.co/NulO72AoKB', 'expanded_url': 'https://naysan.ca/2019/09/07/jupyter-notebook-as-a-service-on-ubuntu-18-04-with-python-3/', 'display_url': 'naysan.ca/2019/09/07/jup…'}, {'url': 'https://t.co/Eml7DCWWlE', 'expanded_url': 'http://simecek.xyz/blog/2020/03/08/Jupyter-Notebook-on-Amazon-EC2-Virtual-Machine.html', 'display_url': 'simecek.xyz/blog/2020/03/0…'}]",[]
1235551355038765056,2020-03-05 13:02:53+00:00,91,18,"Do you need to remove a column from `DataFrame` and store it separately? (for example to remove the target from training data) Use `pop` method!

target = train_data.pop('target_col_name')

https://t.co/cCs9eZv8lJ

#pandas https://t.co/oa79VtJ2IE",False,False,https://twitter.com/python_tip/status/1235551355038765056,"[{'url': 'https://t.co/cCs9eZv8lJ', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.pop.html', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}]","[{'url': 'https://t.co/oa79VtJ2IE', 'media_url': 'http://pbs.twimg.com/media/ESWPKziWAAEIRBw.png', 'display_url': 'pic.twitter.com/oa79VtJ2IE'}]"
1235282180710027265,2020-03-04 19:13:16+00:00,45,14,"And this is why should use a sentinel value (like None) instead of a mutable default.

Workaround:

def f(x=None):
  if x is None:
    x = []
  x.append(1)
  return x

print(f(), f())  # no surprise https://t.co/OLAmEKvveW",False,False,https://twitter.com/python_tip/status/1235282180710027265,"[{'url': 'https://t.co/OLAmEKvveW', 'expanded_url': 'https://twitter.com/jakevdp/status/1235271748867612673', 'display_url': 'twitter.com/jakevdp/status…'}]",[]
1234963392621948928,2020-03-03 22:06:31+00:00,44,8,"Have you ever wanted to build your own interactive Python or R course?

Try: https://t.co/qCo9rbS439

Examples:
spaCy - https://t.co/XDmg8ZJNFj
Supervised ML - https://t.co/UcCw6pKn27
GAMs - https://t.co/qofOXO9jMI",False,False,https://twitter.com/python_tip/status/1234963392621948928,"[{'url': 'https://t.co/qCo9rbS439', 'expanded_url': 'https://github.com/ines/course-starter-python', 'display_url': 'github.com/ines/course-st…'}, {'url': 'https://t.co/XDmg8ZJNFj', 'expanded_url': 'https://course.spacy.io/', 'display_url': 'course.spacy.io'}, {'url': 'https://t.co/UcCw6pKn27', 'expanded_url': 'https://supervised-ml-course.netlify.com/', 'display_url': 'supervised-ml-course.netlify.com'}, {'url': 'https://t.co/qofOXO9jMI', 'expanded_url': 'https://noamross.github.io/gams-in-r-course/', 'display_url': 'noamross.github.io/gams-in-r-cour…'}]",[]
1234491450492149760,2020-03-02 14:51:12+00:00,25,9,"Great #pythontip from @mcbigcz: List multiplication multiply references, not objects.

>>> x = [[], [], [], []]
>>> y = [[]]*4
>>> x == y
True
>>> x[0].append(0)
>>> y[0].append(0)
>>> x == y
False https://t.co/0P4Mn3EuRT",False,False,https://twitter.com/python_tip/status/1234491450492149760,"[{'url': 'https://t.co/0P4Mn3EuRT', 'expanded_url': 'https://twitter.com/mcbig_cz/status/1233424846329131009', 'display_url': 'twitter.com/mcbig_cz/statu…'}]",[]
1234224117160857604,2020-03-01 21:08:54+00:00,163,42,"Enable interactive features of #matplotlib plots in #jupyter notebook by adding 

%matplotlib widget

https://t.co/68RC48uDuG https://t.co/EOhI6kegoY",False,False,https://twitter.com/python_tip/status/1234224117160857604,"[{'url': 'https://t.co/68RC48uDuG', 'expanded_url': 'https://github.com/matplotlib/jupyter-matplotlib/', 'display_url': 'github.com/matplotlib/jup…'}]","[{'url': 'https://t.co/EOhI6kegoY', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/ESDYPj2WsAEAky-.jpg', 'display_url': 'pic.twitter.com/EOhI6kegoY'}]"
1233423222940618755,2020-02-28 16:06:26+00:00,105,32,">>> a = 1
>>> b = 2
>>> a, b = b, a
>>> a
2
>>> b
1

#python #tgif https://t.co/4Q4O70Dll0",False,False,https://twitter.com/python_tip/status/1233423222940618755,[],"[{'url': 'https://t.co/4Q4O70Dll0', 'media_url': 'http://pbs.twimg.com/media/ER3_vXlXkAEmf42.jpg', 'display_url': 'pic.twitter.com/4Q4O70Dll0'}]"
1232775052267065345,2020-02-26 21:10:50+00:00,36,23,"D-Tale: visualize #pandas datastructures both in #jupyter notebook and #python terminal

https://t.co/iLq7cHAlYe

Demo: https://t.co/OZn2clpc7j",False,False,https://twitter.com/python_tip/status/1232775052267065345,"[{'url': 'https://t.co/iLq7cHAlYe', 'expanded_url': 'https://github.com/man-group/dtale', 'display_url': 'github.com/man-group/dtale'}, {'url': 'https://t.co/OZn2clpc7j', 'expanded_url': 'http://andrewschonfeld.pythonanywhere.com/', 'display_url': 'andrewschonfeld.pythonanywhere.com'}]",[]
1232398937962749954,2020-02-25 20:16:18+00:00,44,12,"Create blogposts directly from #jupyter notebook with #fastpages.
https://t.co/pPtum3uUoC

(tip by @HamelHusain)",False,False,https://twitter.com/python_tip/status/1232398937962749954,"[{'url': 'https://t.co/pPtum3uUoC', 'expanded_url': 'https://fastpages.fast.ai/fastpages/jupyter/2020/02/21/introducing-fastpages.html', 'display_url': 'fastpages.fast.ai/fastpages/jupy…'}]",[]
1232062185586798593,2020-02-24 21:58:10+00:00,92,34,"Calculate memory used by a #pandas dataframe:

df.memory_usage(deep=True).sum()",False,False,https://twitter.com/python_tip/status/1232062185586798593,[],[]
1231725159297536012,2020-02-23 23:38:56+00:00,223,62,"Do you want to do yourself a favor? Learn how to use #PDB debugger.

For Jupyter notebooks, it is easy. If you get an error...

1) Type %debug into a new cell and run it

2) To examine the code, this cheatsheet might help:
https://t.co/SVIxoBI6ab https://t.co/VJSJpaOCLx",False,False,https://twitter.com/python_tip/status/1231725159297536012,"[{'url': 'https://t.co/SVIxoBI6ab', 'expanded_url': 'https://appletree.or.kr/quick_reference_cards/Python/Python%20Debugger%20Cheatsheet.pdf', 'display_url': 'appletree.or.kr/quick_referenc…'}]","[{'url': 'https://t.co/VJSJpaOCLx', 'media_url': 'http://pbs.twimg.com/media/ERf3Qy0WkAAEAuZ.jpg', 'display_url': 'pic.twitter.com/VJSJpaOCLx'}]"
1230590987615002624,2020-02-20 20:32:09+00:00,48,16,"With #pandas (>=0.19.2), you can read the table directly from URL:

Example:
>>> import pandas as pd
>>> reviews = https://t.co/KBWVZaKP7L_csv(""https://t.co/sz08ZFRuDZ"")
>>> 
>>> reviews.shape
(129971, 14)",False,False,https://twitter.com/python_tip/status/1230590987615002624,"[{'url': 'https://t.co/KBWVZaKP7L', 'expanded_url': 'http://pd.read', 'display_url': 'pd.read'}, {'url': 'https://t.co/sz08ZFRuDZ', 'expanded_url': 'https://raw.githubusercontent.com/davestroud/Wine/master/winemag-data-130k-v2.csv', 'display_url': 'raw.githubusercontent.com/davestroud/Win…'}]",[]
1230376812070522883,2020-02-20 06:21:05+00:00,25,7,"In the dark corners of scipy.misc, there is a staircase, an electrocardiogram and a raccoon!

https://t.co/17ml5JY94Q

import scipy.misc
import matplotlib.pyplot as plt
face = scipy.misc.face()
plt.gray()
plt.imshow(face)
https://t.co/mdh1L2FULi()

(via @SciPyTip) https://t.co/YfnJHRAllV",False,False,https://twitter.com/python_tip/status/1230376812070522883,"[{'url': 'https://t.co/17ml5JY94Q', 'expanded_url': 'https://docs.scipy.org/doc/scipy/reference/misc.html', 'display_url': 'docs.scipy.org/doc/scipy/refe…'}, {'url': 'https://t.co/mdh1L2FULi', 'expanded_url': 'http://plt.show', 'display_url': 'plt.show'}]","[{'url': 'https://t.co/YfnJHRAllV', 'media_url': 'http://pbs.twimg.com/media/ERMsYIdXYAAn6_r.png', 'display_url': 'pic.twitter.com/YfnJHRAllV'}]"
1229869917538836482,2020-02-18 20:46:52+00:00,119,27,"#Pendulum = Python dates made easy

https://t.co/ZyFwEmYu2u https://t.co/AXX2M385Ex",False,False,https://twitter.com/python_tip/status/1229869917538836482,"[{'url': 'https://t.co/ZyFwEmYu2u', 'expanded_url': 'https://pendulum.eustace.io/', 'display_url': 'pendulum.eustace.io'}]","[{'url': 'https://t.co/AXX2M385Ex', 'media_url': 'http://pbs.twimg.com/media/ERFgGRfXUAEJxTj.png', 'display_url': 'pic.twitter.com/AXX2M385Ex'}]"
1229540004801720320,2020-02-17 22:55:55+00:00,39,19,"#NumPy has many function ignoring NaN values (the list is 👇👇👇)

>>> import numpy as np
>>> 
>>> np.nanvar([1,2,3])
0.6666666666666666
>>> np.nanvar([1,2,3,np.NaN])
0.6666666666666666
>>> np.var([1,2,3,np.NaN])
nan https://t.co/aMxHLGMZQ7",False,False,https://twitter.com/python_tip/status/1229540004801720320,[],"[{'url': 'https://t.co/aMxHLGMZQ7', 'media_url': 'http://pbs.twimg.com/media/ERAzw3uWsAkHB9v.png', 'display_url': 'pic.twitter.com/aMxHLGMZQ7'}]"
1228308951734915073,2020-02-14 13:24:09+00:00,107,23,"Get last n lines of a file:

from collections import deque

def tail(filename, n=10):
    with open(filename) as f:
        return deque(f, n)

#python",False,False,https://twitter.com/python_tip/status/1228308951734915073,[],[]
1228009811637346305,2020-02-13 17:35:29+00:00,35,14,"pandas.DataFrame.append() and pandas.concat() can raise error if creating index with duplicates:

>>> df1.append(df2, verify_integrity=True)

#pandas https://t.co/IAuuGz8J1j",False,False,https://twitter.com/python_tip/status/1228009811637346305,[],"[{'url': 'https://t.co/IAuuGz8J1j', 'media_url': 'http://pbs.twimg.com/media/EQrEaguX0AAB31D.png', 'display_url': 'pic.twitter.com/IAuuGz8J1j'}]"
1227714128585818113,2020-02-12 22:00:32+00:00,43,10,"np.set_printoptions(suppress=False) may be your friend:

>>> import numpy as np
>>> x = np.array([0.000015, 0.001, 1, 0])
>>> print(x)
[1.5e-05 1.0e-03 1.0e+00 0.0e+00]
>>> np.set_printoptions(suppress=True)
>>> print(x)
[0.000015 0.001    1.       0.      ]

#numpy",False,False,https://twitter.com/python_tip/status/1227714128585818113,[],[]
1227176404728586240,2020-02-11 10:23:49+00:00,40,10,"Get number of Null values in a #pandas dataframe:

df.isnull().sum() (column wise)

df.isnull().sum(axis=1) (row wise)

#python",False,False,https://twitter.com/python_tip/status/1227176404728586240,[],[]
1225679586958172165,2020-02-07 07:16:00+00:00,30,13,"For #numpy arrays with invalid entries, you may use masked arrays:

> import numpy as np, https://t.co/fnCFXcnK15 as ma
> x = ma.array([1.,-1.,3.,4.,5., 6.], mask=[0,0,0,0,1,0])
> y = ma.array([1.,2.,0.,4.,5.,6.], mask=[0,0,0,0,0,1])
> print(np.sqrt(x/y))
[1.0 -- -- 1.0 -- --]",False,False,https://twitter.com/python_tip/status/1225679586958172165,"[{'url': 'https://t.co/fnCFXcnK15', 'expanded_url': 'http://numpy.ma', 'display_url': 'numpy.ma'}]",[]
1225313173529661440,2020-02-06 07:00:00+00:00,16,4,"Thanks for tagging @python_tip on your tweets. Two recent #pythontip(s):

* @Tiff_callahan told us about  @HamelHusain's ktext package for text preprocessing
https://t.co/cmdDBQrAlS

* @MatinSoleimani tagged us on a tweet about Basketball Reference scraper
https://t.co/vowaFsIkBq",False,False,https://twitter.com/python_tip/status/1225313173529661440,"[{'url': 'https://t.co/cmdDBQrAlS', 'expanded_url': 'https://github.com/hamelsmu/ktext', 'display_url': 'github.com/hamelsmu/ktext'}, {'url': 'https://t.co/vowaFsIkBq', 'expanded_url': 'https://github.com/vishaalagartha/basketball_reference_scraper', 'display_url': 'github.com/vishaalagartha…'}]",[]
1224993292556951553,2020-02-05 09:48:54+00:00,9,3,"@b11c @ilyaschurov This is tricky. 

Docs really listed 69 of them, see https://t.co/aYD1qTPwGe

However, when I tried to filter dir(__builtin__) based on type, as advised on https://t.co/B2XirMjBsN, I did not get even close. https://t.co/iacnVViVLQ",True,False,https://twitter.com/python_tip/status/1224993292556951553,"[{'url': 'https://t.co/aYD1qTPwGe', 'expanded_url': 'https://docs.python.org/3/library/functions.html', 'display_url': 'docs.python.org/3/library/func…'}, {'url': 'https://t.co/B2XirMjBsN', 'expanded_url': 'https://stackoverflow.com/a/50112479', 'display_url': 'stackoverflow.com/a/50112479'}]","[{'url': 'https://t.co/iacnVViVLQ', 'media_url': 'http://pbs.twimg.com/media/EQAL3tKWsAEpZE9.png', 'display_url': 'pic.twitter.com/iacnVViVLQ'}]"
1224979686368972801,2020-02-05 08:54:50+00:00,0,0,RT @pyconcz: The #CfP for #PyConCZ 2020 is open! Would you like to recommend some #Python #libraries? Submit a talk https://t.co/eGECnfNUbq…,False,True,https://twitter.com/python_tip/status/1224979686368972801,"[{'url': 'https://t.co/eGECnfNUbq', 'expanded_url': 'https://cz.pycon.org/2020/cfp/', 'display_url': 'cz.pycon.org/2020/cfp/'}]",[]
1224976238676205568,2020-02-05 08:41:08+00:00,125,54,"There are 69 built-in functions in Python. How many of them can you name?

You might have used `print`, `range` and `enumerate.` But have you ever heard about `frozenset`? 

Hint: It makes a set immutable (see 👇👇👇)

(Thanks @ilyaschurov for pointing to mistake in prev. tweet.) https://t.co/JNe6vCxJen",False,False,https://twitter.com/python_tip/status/1224976238676205568,[],"[{'url': 'https://t.co/JNe6vCxJen', 'media_url': 'http://pbs.twimg.com/media/EP_8-DkXsAAn-2v.png', 'display_url': 'pic.twitter.com/JNe6vCxJen'}]"
1224971319076368385,2020-02-05 08:21:35+00:00,0,0,@ilyaschurov Thanks. I am just looking for an appropriate example. Any idea?,True,False,https://twitter.com/python_tip/status/1224971319076368385,[],[]
1224966001009287169,2020-02-05 08:00:28+00:00,1,0,@ilyaschurov You are right. Sorry about that and thanks for the correction. I have googled an example of usage of `frozenset` last night and found this. I run the code and got the expected output. I will try to do a better job  next time.,True,False,https://twitter.com/python_tip/status/1224966001009287169,[],[]
1224825412141965325,2020-02-04 22:41:49+00:00,12,6,"#pythontip from @piratefache:
Put your live-feed on a map. https://t.co/iWE1uVZY4d https://t.co/1iEU57Dsvr",False,False,https://twitter.com/python_tip/status/1224825412141965325,"[{'url': 'https://t.co/iWE1uVZY4d', 'expanded_url': 'https://twitter.com/piratefache/status/1219262295349448704', 'display_url': 'twitter.com/piratefache/st…'}]","[{'url': 'https://t.co/1iEU57Dsvr', 'media_url': 'http://pbs.twimg.com/media/EP90N0PXkAA1ewi.jpg', 'display_url': 'pic.twitter.com/1iEU57Dsvr'}]"
1224272518938267649,2020-02-03 10:04:49+00:00,31,8,"With #pandas 1.0.0, the three-value logic arrived to Python:

>>> import numpy as np
>>> import pandas as pd
>>> 
>>> np.NaN == np.NaN
False
>>> https://t.co/kKksLTtTy3 == https://t.co/kKksLTtTy3
<NA>

Also see this #pythontip by @PetraVidnerova (guess what is 'a' and 'b'): https://t.co/2oLJoNG1CC",False,False,https://twitter.com/python_tip/status/1224272518938267649,"[{'url': 'https://t.co/kKksLTtTy3', 'expanded_url': 'http://pd.NA', 'display_url': 'pd.NA'}, {'url': 'https://t.co/kKksLTtTy3', 'expanded_url': 'http://pd.NA', 'display_url': 'pd.NA'}, {'url': 'https://t.co/2oLJoNG1CC', 'expanded_url': 'https://twitter.com/PetraVidnerova/status/1222467961690185728', 'display_url': 'twitter.com/PetraVidnerova…'}]",[]
1223930140629008386,2020-02-02 11:24:19+00:00,0,0,"RT @RitzyFraud: @python_tip Wait till you try:

>>> {float('nan') : 1, float('nan'): ""Good night"", float('nan'): ""Bye""}",False,True,https://twitter.com/python_tip/status/1223930140629008386,[],[]
1223345514827128832,2020-01-31 20:41:14+00:00,0,0,"RT @starenka: @python_tip anyways #til there's -a switch for mkvirtualenv (saves the setvirtualenvproject hassle):

mkdir foo_projectdir &&…",False,True,https://twitter.com/python_tip/status/1223345514827128832,[],[]
1223339059327664128,2020-01-31 20:15:34+00:00,0,0,RT @starenka: @python_tip Life is to short for making venvs for one off scripts (will be destroyed after 'deactivate') https://t.co/AyHNqrr…,False,True,https://twitter.com/python_tip/status/1223339059327664128,[],[]
1223316767856103424,2020-01-31 18:47:00+00:00,55,18,"pip install that
python -m that

#TGIF https://t.co/JURcKEx08c",False,False,https://twitter.com/python_tip/status/1223316767856103424,[],"[{'url': 'https://t.co/JURcKEx08c', 'media_url': 'http://pbs.twimg.com/media/EPeplMcX4AYGCxy.png', 'display_url': 'pic.twitter.com/JURcKEx08c'}]"
1222893478788640768,2020-01-30 14:45:00+00:00,20,2,"#Pandas 1.0 is here! 
Read the release notes, install & enjoy 🐼

https://t.co/z0sj0wk85Z

https://t.co/9Bg4pIG833 https://t.co/Im5lKgbVce",False,False,https://twitter.com/python_tip/status/1222893478788640768,"[{'url': 'https://t.co/z0sj0wk85Z', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/version/1.0/whatsnew/v1.0.0.html', 'display_url': 'pandas.pydata.org/pandas-docs/ve…'}, {'url': 'https://t.co/9Bg4pIG833', 'expanded_url': 'https://twitter.com/pandas_dev/status/1222856129774018560?s=20', 'display_url': 'twitter.com/pandas_dev/sta…'}]","[{'url': 'https://t.co/Im5lKgbVce', 'media_url': 'http://pbs.twimg.com/media/EPiSq2nUUAAVRDY.jpg', 'display_url': 'pic.twitter.com/Im5lKgbVce'}]"
1222631812146614275,2020-01-29 21:25:14+00:00,41,12,"Do you call the function repeatedly for the same parameters? functools.lru_cache is your friend.

https://t.co/rthK3jMD2l",False,False,https://twitter.com/python_tip/status/1222631812146614275,"[{'url': 'https://t.co/rthK3jMD2l', 'expanded_url': 'https://docs.python.org/3/library/functools.html#functools.lru_cache', 'display_url': 'docs.python.org/3/library/func…'}]",[]
1222241601000476673,2020-01-28 19:34:40+00:00,63,10,"You can call different functions with the same arguments based on a condition:

>>> (foo if cond else bar)(5,7)

https://t.co/9ejrgVkLk4

#python_tip by @PetraVidnerova",False,False,https://twitter.com/python_tip/status/1222241601000476673,"[{'url': 'https://t.co/9ejrgVkLk4', 'expanded_url': 'https://miro.medium.com/max/1430/1*aOiTdt5zjHRGrCMYAegdyg.png', 'display_url': 'miro.medium.com/max/1430/1*aOi…'}]",[]
1221897262932078593,2020-01-27 20:46:23+00:00,81,14,"Guess what will be the result of the following line:

>>> {True: ""Hello"", 1: ""Good night"", 1.0: ""Bye""}

#wtfpython",False,False,https://twitter.com/python_tip/status/1221897262932078593,[],[]
1220602132287459328,2020-01-24 07:00:00+00:00,69,9,"Have you written an awesome Python code and you want to share with others on PyPi? (so they can install it with `pip install your_package_name`) 

How to upload your python package to PyPi 
https://t.co/0uM0XtNUHG
(it is not as hard as they told you) https://t.co/NZssOspKr7",False,False,https://twitter.com/python_tip/status/1220602132287459328,"[{'url': 'https://t.co/0uM0XtNUHG', 'expanded_url': 'https://medium.com/@joel.barmettler/how-to-upload-your-python-package-to-pypi-65edc5fe9c56', 'display_url': 'medium.com/@joel.barmettl…'}]","[{'url': 'https://t.co/NZssOspKr7', 'media_url': 'http://pbs.twimg.com/media/EO6ugdyWoAcS6Vl.png', 'display_url': 'pic.twitter.com/NZssOspKr7'}]"
1220341487872946176,2020-01-23 13:44:18+00:00,2,0,"@b11c I love the term, ☕ for each improvement. (@JanPipek  already deserved one)",True,False,https://twitter.com/python_tip/status/1220341487872946176,[],[]
1220340678045130757,2020-01-23 13:41:05+00:00,3,0,"@PogrebnyakE Yes, it does. However, as Jan Pipek noted below, better way exists:

https://t.co/nWXkXV5PMW",True,False,https://twitter.com/python_tip/status/1220340678045130757,"[{'url': 'https://t.co/nWXkXV5PMW', 'expanded_url': 'https://gist.github.com/janpipek/d9e3cfe471300d40101ad61d744f3286', 'display_url': 'gist.github.com/janpipek/d9e3c…'}]",[]
1220336002457382914,2020-01-23 13:22:30+00:00,0,0,"RT @JanPipek: @python_tip If you have a trivial index, @BiohazZzZard's answer is the best answer. If you have a non-trivial index, you can…",False,True,https://twitter.com/python_tip/status/1220336002457382914,[],[]
1220244272399691778,2020-01-23 07:18:00+00:00,93,22,"Coming to Python from #rstats and miss the `which` function? (=a function giving the TRUE indices of a logical object).

This is the best Python implementation I found:
https://t.co/1NMfGqiHLh https://t.co/vykfJ9QiYB",False,False,https://twitter.com/python_tip/status/1220244272399691778,"[{'url': 'https://t.co/1NMfGqiHLh', 'expanded_url': 'https://alex.miller.im/posts/python-pandas-which-function-indices-similar-to-R/', 'display_url': 'alex.miller.im/posts/python-p…'}]","[{'url': 'https://t.co/vykfJ9QiYB', 'media_url': 'http://pbs.twimg.com/media/EOhY7I8WAAEMnE6.png', 'display_url': 'pic.twitter.com/vykfJ9QiYB'}]"
1220076309801570306,2020-01-22 20:10:34+00:00,0,0,@chinesehuazhou @Stribrny @stribny Thanks for the correction and my apology to @stribny.,True,False,https://twitter.com/python_tip/status/1220076309801570306,[],[]
1219877858048270336,2020-01-22 07:02:00+00:00,24,7,"Remote execution with #fabrik and how to use it for a deployment on a remote machine by @stribrny:

https://t.co/lzCpfM1kx6 https://t.co/iwb8PrLMTo",False,False,https://twitter.com/python_tip/status/1219877858048270336,"[{'url': 'https://t.co/lzCpfM1kx6', 'expanded_url': 'https://stribny.name/blog/2020/01/deployment-with-fabric', 'display_url': 'stribny.name/blog/2020/01/d…'}]","[{'url': 'https://t.co/iwb8PrLMTo', 'media_url': 'http://pbs.twimg.com/media/EOhVXzgXsAAx55G.png', 'display_url': 'pic.twitter.com/iwb8PrLMTo'}]"
1219407760477036544,2020-01-20 23:54:00+00:00,122,28,"Old 🧓 but Gold 🏆: In #Jupyter notebook, type double question marks to view the source code where a particular function is defined. https://t.co/DEgJfBs9z6",False,False,https://twitter.com/python_tip/status/1219407760477036544,[],"[{'url': 'https://t.co/DEgJfBs9z6', 'media_url': 'http://pbs.twimg.com/media/EOhTRISX4AEeEh3.jpg', 'display_url': 'pic.twitter.com/DEgJfBs9z6'}]"
1219352662069727232,2020-01-20 20:15:03+00:00,1,0,"@ashuvashu python -m pip install --upgrade --pre pandas==1.0.0rc0

OR

conda install -c conda-forge/label/rc pandas==1.0.0rc0",True,False,https://twitter.com/python_tip/status/1219352662069727232,[],[]
1219149055630217216,2020-01-20 06:46:00+00:00,62,13,"#pandas 1.0.0 is coming, see the NEWS

https://t.co/0i5FiPI84b

I am looking forward to `https://t.co/kKksLTtTy3` scalar and the three-valued logic. The current implementation of missing values can be counter-intuitive if you are coming from a different language. https://t.co/sMjNfDRlVO",False,False,https://twitter.com/python_tip/status/1219149055630217216,"[{'url': 'https://t.co/0i5FiPI84b', 'expanded_url': 'https://dev.pandas.io/docs/whatsnew/v1.0.0.html', 'display_url': 'dev.pandas.io/docs/whatsnew/…'}, {'url': 'https://t.co/kKksLTtTy3', 'expanded_url': 'http://pd.NA', 'display_url': 'pd.NA'}]","[{'url': 'https://t.co/sMjNfDRlVO', 'media_url': 'http://pbs.twimg.com/media/EOhRKNHX4AAZUdo.png', 'display_url': 'pic.twitter.com/sMjNfDRlVO'}]"
1218952726618558470,2020-01-19 17:45:51+00:00,37,9,"Add some color to your teminal with colorama. 
https://t.co/HvHBfusFPv
#python https://t.co/3XmS1qg097",False,False,https://twitter.com/python_tip/status/1218952726618558470,"[{'url': 'https://t.co/HvHBfusFPv', 'expanded_url': 'https://pypi.org/project/colorama/', 'display_url': 'pypi.org/project/colora…'}]","[{'url': 'https://t.co/3XmS1qg097', 'media_url': 'http://pbs.twimg.com/media/EOqW-oPWAAU8yHT.png', 'display_url': 'pic.twitter.com/3XmS1qg097'}]"
1218107811483267072,2020-01-17 09:48:28+00:00,100,27,"#pythontip from @raymondh:
Another interesting use of #python's walrus operator is to compute differences between successive values in a data stream. 

>>> data = [10, 14, 34, 49, 70, 77]
>>> prev = 0; [-prev + (prev := x) for x in data]
[10, 4, 20, 15, 21, 7]",False,False,https://twitter.com/python_tip/status/1218107811483267072,[],[]
1218106442932277248,2020-01-17 09:43:01+00:00,0,0,"RT @eumiro: @python_tip And for empty sequences:

>>> all([])
True
>>> any([])
False",False,True,https://twitter.com/python_tip/status/1218106442932277248,[],[]
1217728207882981376,2020-01-16 08:40:03+00:00,5,2,"#selfpromo

Ask @PanosAlexiou01 or me (@simecek) if you have any questions. https://t.co/zoKgH7Z50y",False,False,https://twitter.com/python_tip/status/1217728207882981376,"[{'url': 'https://t.co/zoKgH7Z50y', 'expanded_url': 'https://twitter.com/simecek/status/1217533886680485889', 'display_url': 'twitter.com/simecek/status…'}]",[]
1217697058842447872,2020-01-16 06:36:17+00:00,94,17,"any(iterable) returns True if any item is True
all(iterable) returns True if all items are True

>>> lst = [3, 6, 9, 12]
>>> any(n % 2 == 0 for n in lst)
True
>>> any(n % 5 == 0 for n in lst)
False
>>> all(n % 2 == 0 for n in lst)
False
>>> all(n % 3 == 0 for n in lst)
True",False,False,https://twitter.com/python_tip/status/1217697058842447872,[],[]
1217218591231225856,2020-01-14 22:55:01+00:00,123,32,"You can pass a default value to the dict.get method to be returned if the key is not found:

>>> mydict = {'a': 1, 'b': 33, 'c': 'x'}
>>> mydict.get('a')
1
>>> mydict.get('d')
>>> mydict.get('d', 0)
0

vs.

>>> mydict['d'] # KeyError

#python",False,False,https://twitter.com/python_tip/status/1217218591231225856,[],[]
1216855592452739074,2020-01-13 22:52:35+00:00,0,0,"RT @starenka: @python_tip reverse iterable
'aknerats'[::-1]

ps. for real code just use reversed function",False,True,https://twitter.com/python_tip/status/1216855592452739074,[],[]
1216839743184437248,2020-01-13 21:49:37+00:00,166,35,"Get every n-th item of the list: 

>>> lst =  [1, 2, 3, 4, 5, 6, 7, 8, 9]
>>> n = 3
>>> lst[n - 1::n]
[3, 6, 9]
>>> n = 4
>>> lst[n - 1::n]
[4, 8]

#python",False,False,https://twitter.com/python_tip/status/1216839743184437248,[],[]
1215578861011984386,2020-01-10 10:19:19+00:00,78,20,"To iterate through pairs of DataFrame columns,  you can use `combinations` function from `itertools` module.

Example: 👇👇👇

Full code (runnable in Colab):
https://t.co/3NMtk16ORN
#itertools #pandas https://t.co/gwxFix1kLY",False,False,https://twitter.com/python_tip/status/1215578861011984386,"[{'url': 'https://t.co/3NMtk16ORN', 'expanded_url': 'https://gist.github.com/simecek/65e80cf9693099c7ec062bd7e52c9d0d', 'display_url': 'gist.github.com/simecek/65e80c…'}]","[{'url': 'https://t.co/gwxFix1kLY', 'media_url': 'http://pbs.twimg.com/media/EN6ZuuBWAAIrZ_u.png', 'display_url': 'pic.twitter.com/gwxFix1kLY'}]"
1215166312927744000,2020-01-09 07:00:00+00:00,30,12,"ast.literal_eval() is a safer way to call eval() since it considers only a small subset of Python's syntax to be valid.

Passing `__import__('os').system('rm -rf /home')` into ast.literal_eval() will raise an error, but eval() will happily wipe your drive

https://t.co/JBqGukWyxM https://t.co/1lxsl54oga",False,False,https://twitter.com/python_tip/status/1215166312927744000,"[{'url': 'https://t.co/JBqGukWyxM', 'expanded_url': 'https://stackoverflow.com/a/15197726', 'display_url': 'stackoverflow.com/a/15197726'}]","[{'url': 'https://t.co/1lxsl54oga', 'media_url': 'http://pbs.twimg.com/media/ENd1KcXUYAIxM2h.png', 'display_url': 'pic.twitter.com/1lxsl54oga'}]"
1214803924370239488,2020-01-08 07:00:00+00:00,94,24,"For DataFrame df, `df.corr` computes pairwise correlation of columns.

Extra tips:
* If your data contains outliers, use rank based Spearman correlation. `df.corr(method=‘spearman’)`
* For better readability, do not print all digits but `df.corr().round(decimals=3)`.

#pandas https://t.co/qQ3RQrdO9n",False,False,https://twitter.com/python_tip/status/1214803924370239488,[],"[{'url': 'https://t.co/qQ3RQrdO9n', 'media_url': 'http://pbs.twimg.com/media/ENd4QO6U4AAaMZ1.png', 'display_url': 'pic.twitter.com/qQ3RQrdO9n'}]"
1214482990929235968,2020-01-07 09:44:43+00:00,1,1,@leetao94 It is from https://t.co/MwWVMKqs0q,True,False,https://twitter.com/python_tip/status/1214482990929235968,"[{'url': 'https://t.co/MwWVMKqs0q', 'expanded_url': 'https://carbon.now.sh/', 'display_url': 'carbon.now.sh'}]",[]
1214441538035617794,2020-01-07 07:00:00+00:00,137,22,"#numpy position functions; for an array `a`
* np.argmax(a) = index of maximum
* np.argmin(a) = index of minimum
* np.argwhere(condition(a)) =  indices that satisfies the condition
* np.argsort(a) = indices that would sort an array `a` https://t.co/WGpQk3f6ci",False,False,https://twitter.com/python_tip/status/1214441538035617794,[],"[{'url': 'https://t.co/WGpQk3f6ci', 'media_url': 'http://pbs.twimg.com/media/ENdussjXsAAfuXZ.png', 'display_url': 'pic.twitter.com/WGpQk3f6ci'}]"
1214079150312452099,2020-01-06 07:00:00+00:00,66,16,"Welcome to a new year, happy 50 years since Unix epoch! #python

>>> from time import time
>>> time() / 365.25 / 24 / 3600
50.009161545126794

#happynewyear2020 https://t.co/iMmVcu80I8",False,False,https://twitter.com/python_tip/status/1214079150312452099,"[{'url': 'https://t.co/iMmVcu80I8', 'expanded_url': 'https://twitter.com/rafalab/status/1212073560786833408', 'display_url': 'twitter.com/rafalab/status…'}]",[]
1212855064223768577,2020-01-02 21:55:55+00:00,136,22,"Working with currency? Issues with floating point arithmetics? Use decimal.

>>> x = 0.1*3
>>> x == 0.3
False
>>> from decimal import Decimal
>>> y = Decimal('0.1')*3
>>> y == Decimal('0.3')
True

#python",False,False,https://twitter.com/python_tip/status/1212855064223768577,[],[]
1212421969704095744,2020-01-01 17:14:57+00:00,56,31,"Say goodbye to #python 2.7. 

https://t.co/ZaI4tm8h9d",False,False,https://twitter.com/python_tip/status/1212421969704095744,"[{'url': 'https://t.co/ZaI4tm8h9d', 'expanded_url': 'https://pythonclock.org/', 'display_url': 'pythonclock.org'}]",[]
1210455270784024576,2019-12-27 07:00:00+00:00,68,20,"a.all() vs. np.all(a) vs. all(a)

If `a` is np.array, then np.all/a.all is faster then a python bulit-in `all` function.

Explanation: https://t.co/3W7OS7NYOo https://t.co/BBavDzK0Di",False,False,https://twitter.com/python_tip/status/1210455270784024576,"[{'url': 'https://t.co/3W7OS7NYOo', 'expanded_url': 'https://stackoverflow.com/questions/43382237/numpy-ndarray-all-vs-np-allndarray-vs-allndarray', 'display_url': 'stackoverflow.com/questions/4338…'}]","[{'url': 'https://t.co/BBavDzK0Di', 'media_url': 'http://pbs.twimg.com/media/EMv9qbBX0AE453M.png', 'display_url': 'pic.twitter.com/BBavDzK0Di'}]"
1210336206329974785,2019-12-26 23:06:53+00:00,95,16,"Another tool useful for Jupyter Notebooks: Recycle useful parts of your notebook with #importnb package. 

https://t.co/yHrhTBzLXQ https://t.co/nNmgrzJ9zk",False,False,https://twitter.com/python_tip/status/1210336206329974785,"[{'url': 'https://t.co/yHrhTBzLXQ', 'expanded_url': 'https://pypi.org/project/importnb', 'display_url': 'pypi.org/project/import…'}]","[{'url': 'https://t.co/nNmgrzJ9zk', 'media_url': 'http://pbs.twimg.com/media/EMv6DQMXkAAk-77.png', 'display_url': 'pic.twitter.com/nNmgrzJ9zk'}]"
1209245191430975488,2019-12-23 22:51:34+00:00,80,23,"The Norway Problem and the differences between YAML parsers

https://t.co/2MwdFLrY40

#pyyaml #strictyaml #ruamel https://t.co/2NgV9ZLg8H",False,False,https://twitter.com/python_tip/status/1209245191430975488,"[{'url': 'https://t.co/2MwdFLrY40', 'expanded_url': 'https://hitchdev.com/strictyaml/why/implicit-typing-removed/', 'display_url': 'hitchdev.com/strictyaml/why…'}]","[{'url': 'https://t.co/2NgV9ZLg8H', 'media_url': 'http://pbs.twimg.com/media/EMgZ_3sX0AIRzJ-.png', 'display_url': 'pic.twitter.com/2NgV9ZLg8H'}]"
1208860479986315264,2019-12-22 21:22:52+00:00,76,12,"Working with #fractions? Explore the fractions module:

>>> from fractions import Fraction as frac
>>> print(frac(3, 10))
3/10
>>> print(frac(0.33).limit_denominator(100))
33/100
>>> print(frac('1/4') + frac(1, 5))
9/20

https://t.co/PLaAGRK8LG",False,False,https://twitter.com/python_tip/status/1208860479986315264,"[{'url': 'https://t.co/PLaAGRK8LG', 'expanded_url': 'https://docs.python.org/3/library/fractions.html', 'display_url': 'docs.python.org/3/library/frac…'}]",[]
1208006114597638144,2019-12-20 12:47:56+00:00,120,28,"Get information about the underlying system with the platform module:

>>> import platform
>>> platform.architecture()
('64bit', '')
>>> platform.machine()
'x86_64'
>>> platform.system()
'Linux'

https://t.co/KJY7BEsrtd",False,False,https://twitter.com/python_tip/status/1208006114597638144,"[{'url': 'https://t.co/KJY7BEsrtd', 'expanded_url': 'https://docs.python.org/3/library/platform.html', 'display_url': 'docs.python.org/3/library/plat…'}]",[]
1207578845890699264,2019-12-19 08:30:07+00:00,64,14,"#pathlib Path.stat().st_size prints size of the file in bytes

https://t.co/PjvTXRNciN https://t.co/OIgpXxS0I9",False,False,https://twitter.com/python_tip/status/1207578845890699264,"[{'url': 'https://t.co/PjvTXRNciN', 'expanded_url': 'https://docs.python.org/3/library/pathlib.html#pathlib.Path.stat', 'display_url': 'docs.python.org/3/library/path…'}]","[{'url': 'https://t.co/OIgpXxS0I9', 'media_url': 'http://pbs.twimg.com/media/EMIuiUGWsAAU5MY.png', 'display_url': 'pic.twitter.com/OIgpXxS0I9'}]"
1206963913084018689,2019-12-17 15:46:35+00:00,210,29,">>> ""a""*10
'aaaaaaaaaa'
>>> [""a""]*10
['a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']

#python",False,False,https://twitter.com/python_tip/status/1206963913084018689,[],[]
1206597167982489603,2019-12-16 15:29:16+00:00,96,20,"Do you need some hints for using #pandas? Dovpanda is your friend.
https://t.co/HPrPtZJTjk https://t.co/Ri5v0LbS6a",False,False,https://twitter.com/python_tip/status/1206597167982489603,"[{'url': 'https://t.co/HPrPtZJTjk', 'expanded_url': 'https://github.com/dovpanda-dev/dovpanda', 'display_url': 'github.com/dovpanda-dev/d…'}]","[{'url': 'https://t.co/Ri5v0LbS6a', 'media_url': 'http://pbs.twimg.com/media/EL6xpsDWsAwR3fg.png', 'display_url': 'pic.twitter.com/Ri5v0LbS6a'}]"
1206344010027208705,2019-12-15 22:43:19+00:00,181,37,"The Python visualization world can be sometimes a frustrating place. It helps if you understand basic building blocks - see ""Effectively Using #Matplotlib"" tutorial

https://t.co/13KtUwHZrd https://t.co/eGldoUkymM",False,False,https://twitter.com/python_tip/status/1206344010027208705,"[{'url': 'https://t.co/13KtUwHZrd', 'expanded_url': 'https://pbpython.com/effective-matplotlib.html', 'display_url': 'pbpython.com/effective-matp…'}]","[{'url': 'https://t.co/eGldoUkymM', 'media_url': 'http://pbs.twimg.com/media/EL3LL3oWkAcm2Zr.jpg', 'display_url': 'pic.twitter.com/eGldoUkymM'}]"
1205019452145725442,2019-12-12 07:00:00+00:00,45,9,"Sometimes it is handy to get R functionality in Python (through #r2py) or Python functionality in R (through #reticulate).

But starting to think in a new language can be painful. G. V. Wilson wrote The Tidynomicon, an introduction to R for Python coders.

https://t.co/y6Ic0TziBt https://t.co/UvkSFnCSaX",False,False,https://twitter.com/python_tip/status/1205019452145725442,"[{'url': 'https://t.co/y6Ic0TziBt', 'expanded_url': 'http://tidynomicon.tech/', 'display_url': 'tidynomicon.tech'}]","[{'url': 'https://t.co/UvkSFnCSaX', 'media_url': 'http://pbs.twimg.com/media/ELcuB2hW4AA8Ok-.png', 'display_url': 'pic.twitter.com/UvkSFnCSaX'}]"
1204755168216145920,2019-12-11 13:29:50+00:00,4,1,"Also, thanks @mzeeqazi for a correction of a mistake in the first version of this tweet.",False,False,https://twitter.com/python_tip/status/1204755168216145920,[],[]
1204655327167299584,2019-12-11 06:53:06+00:00,113,29,"x += a is not always the same as x = x + a

>>> x = y = [1] 
>>> x += [2]
>>> x, y   # return ([1, 2], [1, 2])
>>> x = x + [3]
>>> x,y   # return ([1, 2, 3], [1, 2])

That is because `+=` calls __iadd__ method while `+` calls __add__.

https://t.co/8a3qV6SQiX

Another example 👇 https://t.co/9sz2y5xqYz",False,False,https://twitter.com/python_tip/status/1204655327167299584,"[{'url': 'https://t.co/8a3qV6SQiX', 'expanded_url': 'https://stackoverflow.com/questions/9766387/different-behaviour-for-list-iadd-and-list-add', 'display_url': 'stackoverflow.com/questions/9766…'}, {'url': 'https://t.co/9sz2y5xqYz', 'expanded_url': 'https://twitter.com/zzzeek/status/1203439552507076609', 'display_url': 'twitter.com/zzzeek/status/…'}]",[]
1204654446053072897,2019-12-11 06:49:35+00:00,1,0,"@mzeeqazi Thanks. A stupid mistake. The fourth line should be 

 x = x + [3]",True,False,https://twitter.com/python_tip/status/1204654446053072897,[],[]
1204473081311453185,2019-12-10 18:48:55+00:00,9,2,"#pythontip by @thisPtr

Check if the value exists in a DataFrame

https://t.co/cahPBeepW5",False,False,https://twitter.com/python_tip/status/1204473081311453185,"[{'url': 'https://t.co/cahPBeepW5', 'expanded_url': 'https://thispointer.com/pandas-check-if-a-value-exists-in-a-dataframe-using-in-not-in-operator-isin/', 'display_url': 'thispointer.com/pandas-check-i…'}]",[]
1203932288599429121,2019-12-09 07:00:00+00:00,47,16,"nbdev: using Jupyter notebooks for package development, testing and continuous integration

https://t.co/kTkCX2eVb2",False,False,https://twitter.com/python_tip/status/1203932288599429121,"[{'url': 'https://t.co/kTkCX2eVb2', 'expanded_url': 'https://www.fast.ai/2019/12/02/nbdev/', 'display_url': 'fast.ai/2019/12/02/nbd…'}]",[]
1202978726495084546,2019-12-06 15:50:53+00:00,104,31,"Need some fake data? Faker package will generate them for you.

https://t.co/5lrlbHLu4B

#python",False,False,https://twitter.com/python_tip/status/1202978726495084546,"[{'url': 'https://t.co/5lrlbHLu4B', 'expanded_url': 'https://pypi.org/project/Faker/', 'display_url': 'pypi.org/project/Faker/'}]",[]
1202698590591864840,2019-12-05 21:17:43+00:00,45,10,"Everything you never knew you wanted to know about #decorators by @radekosmulski 

https://t.co/VrMDwbmI4Q

#python",False,False,https://twitter.com/python_tip/status/1202698590591864840,"[{'url': 'https://t.co/VrMDwbmI4Q', 'expanded_url': 'https://github.com/radekosmulski/python_musings/blob/master/03_decorate_me_a_river.ipynb', 'display_url': 'github.com/radekosmulski/…'}]",[]
1202260895260446720,2019-12-04 16:18:29+00:00,56,19,"Use np.isnan(), pd.isna() or math.isnan() to check for nan values:

>>> np.nan == np.nan
False
>>> np.nan is math.nan
False
>>> math.isnan(np.nan)
True
>>> pd.isna(float('nan'))
True
>>> np.isnan(math.nan)
True

https://t.co/8pQEvegGtK

#python #pandas #numpy",False,False,https://twitter.com/python_tip/status/1202260895260446720,"[{'url': 'https://t.co/8pQEvegGtK', 'expanded_url': 'https://towardsdatascience.com/navigating-the-hell-of-nans-in-python-71b12558895b', 'display_url': 'towardsdatascience.com/navigating-the…'}]",[]
1202144769448857600,2019-12-04 08:37:02+00:00,48,14,"Need to track #jupyter notebooks changes or add comments? Try ReviewNB - an app for #github

https://t.co/eo2FV5HtGR",False,False,https://twitter.com/python_tip/status/1202144769448857600,"[{'url': 'https://t.co/eo2FV5HtGR', 'expanded_url': 'https://www.reviewnb.com/', 'display_url': 'reviewnb.com'}]",[]
1201588308012412929,2019-12-02 19:45:51+00:00,46,13,Advent of Code is here.  https://t.co/zsD8WkViEx Happy coding!,False,False,https://twitter.com/python_tip/status/1201588308012412929,"[{'url': 'https://t.co/zsD8WkViEx', 'expanded_url': 'https://adventofcode.com/', 'display_url': 'adventofcode.com'}]",[]
1201126011942965248,2019-12-01 13:08:51+00:00,399,97,"Do you run long, time-demanding calculations in Jupyter Notebook?

With `jupyter-notify` extension, you will get a browser notification when your calculation is done (=when the cell is completed)

https://t.co/2xjocGl2S4

Example: 👇 https://t.co/uugYC26qCk",False,False,https://twitter.com/python_tip/status/1201126011942965248,"[{'url': 'https://t.co/2xjocGl2S4', 'expanded_url': 'https://github.com/ShopRunner/jupyter-notify', 'display_url': 'github.com/ShopRunner/jup…'}]","[{'url': 'https://t.co/uugYC26qCk', 'media_url': 'http://pbs.twimg.com/media/EKtBnMOXUAw0HEW.png', 'display_url': 'pic.twitter.com/uugYC26qCk'}]"
1200170306989674497,2019-11-28 21:51:13+00:00,36,5,"To our US followers:

>>> from cowsay import turkey
>>> turkey('Happy Thanksgiving!')

(inspired by @RLangTip)
#cowsay https://t.co/eWyZ1kvQc4",False,False,https://twitter.com/python_tip/status/1200170306989674497,[],"[{'url': 'https://t.co/eWyZ1kvQc4', 'media_url': 'http://pbs.twimg.com/media/EKfbNlnWkAA5BC3.png', 'display_url': 'pic.twitter.com/eWyZ1kvQc4'}]"
1199803453184315393,2019-11-27 21:33:29+00:00,29,2,"#pythontip by @justmarkham: Three easy ways to rearrange the columns in your DataFrame 👇👇

(Do you have a Python tip you want to share through this account? Submit it at https://t.co/mfUQ9teK5k or just mention @python_tip in your tweet) https://t.co/JcVqu3xT2W",False,False,https://twitter.com/python_tip/status/1199803453184315393,"[{'url': 'https://t.co/mfUQ9teK5k', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}, {'url': 'https://t.co/JcVqu3xT2W', 'expanded_url': 'https://twitter.com/justmarkham/status/1196797909389455360', 'display_url': 'twitter.com/justmarkham/st…'}]",[]
1199438984381915137,2019-11-26 21:25:13+00:00,154,39,"ADTK = new Python library for time series anomaly detection

https://t.co/IwpYyNEuGP

(from the same group `tsaug` = a Python package for time series augmentation, https://t.co/fNWx5CWW1x) https://t.co/CdZ1nCkpdV",False,False,https://twitter.com/python_tip/status/1199438984381915137,"[{'url': 'https://t.co/IwpYyNEuGP', 'expanded_url': 'https://github.com/arundo/adtk', 'display_url': 'github.com/arundo/adtk'}, {'url': 'https://t.co/fNWx5CWW1x', 'expanded_url': 'https://github.com/arundo/tsaug', 'display_url': 'github.com/arundo/tsaug'}]","[{'url': 'https://t.co/CdZ1nCkpdV', 'media_url': 'http://pbs.twimg.com/media/EKVDWkqWsAAK9Fo.png', 'display_url': 'pic.twitter.com/CdZ1nCkpdV'}]"
1198747702953234433,2019-11-24 23:38:18+00:00,123,29,"If you want to get multiple items from a dictionary, you might either use a list comprehension

>>> [mydict[x] for x in mykeys]

or you can use `operator.itemgetter` as follows

>>> from operator import itemgetter
>>> itemgetter(*mykeys)(mydict)  

#pythontip from @IDryer 👇 https://t.co/B34eaYdeqF",False,False,https://twitter.com/python_tip/status/1198747702953234433,"[{'url': 'https://t.co/B34eaYdeqF', 'expanded_url': 'https://twitter.com/IDryer/status/1196526211796783110', 'display_url': 'twitter.com/IDryer/status/…'}]",[]
1198011173293248512,2019-11-22 22:51:36+00:00,51,12,"In #python 3.8, we have a prod() function:

>>> import math
>>> p = [0.2, 0.1, 0.3]
>>> https://t.co/sLCVht7XMh(p)
0.006000000000000001
>>> https://t.co/sLCVht7XMh(p, start=0.8)
0.004800000000000001

https://t.co/Tf2MeUjCgh

#python3_8",False,False,https://twitter.com/python_tip/status/1198011173293248512,"[{'url': 'https://t.co/sLCVht7XMh', 'expanded_url': 'http://math.prod', 'display_url': 'math.prod'}, {'url': 'https://t.co/sLCVht7XMh', 'expanded_url': 'http://math.prod', 'display_url': 'math.prod'}, {'url': 'https://t.co/Tf2MeUjCgh', 'expanded_url': 'https://docs.python.org/3.8/library/math.html#math.prod', 'display_url': 'docs.python.org/3.8/library/ma…'}]",[]
1197841692138835969,2019-11-22 11:38:08+00:00,0,0,"RT @PyTorch: To help developers get started with PyTorch, we’re making the 'Deep Learning with PyTorch' book, written by Luca Antiga and El…",False,True,https://twitter.com/python_tip/status/1197841692138835969,[],[]
1197551348457320448,2019-11-21 16:24:25+00:00,172,25,">>> x, *y, z = 0, 1, 2, 3, 4, 5
>>> x
0
>>> y
[1, 2, 3, 4]
>>> z
5

#python",False,False,https://twitter.com/python_tip/status/1197551348457320448,[],[]
1197274885380288513,2019-11-20 22:05:51+00:00,117,24,"In #python3_8, f-strings support the = specifier:

>>> a = 42
>>> f""{a=}""
'a=42'
>>> f""{a/7=}""
'a/7=6.0'",False,False,https://twitter.com/python_tip/status/1197274885380288513,[],[]
1196899426100490250,2019-11-19 21:13:55+00:00,56,7,"IPython ? magic accepts wildcards:

?np.*close*

np.allclose
np.isclose
np.real_if_close

#ipython #jupyter",False,False,https://twitter.com/python_tip/status/1196899426100490250,[],[]
1196529487934115841,2019-11-18 20:43:55+00:00,89,20,"Recursive folder globbing is easy in #python3

imgs = glob.glob('/path/**/*.png')
or 
imgs = pathlib.Path('/path').glob('**/*.png')

https://t.co/HjmOW04Tal
https://t.co/jyNqpHaJXi

#python",False,False,https://twitter.com/python_tip/status/1196529487934115841,"[{'url': 'https://t.co/HjmOW04Tal', 'expanded_url': 'https://docs.python.org/3/library/glob.html', 'display_url': 'docs.python.org/3/library/glob…'}, {'url': 'https://t.co/jyNqpHaJXi', 'expanded_url': 'https://docs.python.org/3/library/pathlib.html#basic-use', 'display_url': 'docs.python.org/3/library/path…'}]",[]
1195379871574372359,2019-11-15 16:35:45+00:00,2,1,@justmarkham Thank you for sharing such nice tricks.,True,False,https://twitter.com/python_tip/status/1195379871574372359,[],[]
1195126249368240128,2019-11-14 23:47:56+00:00,83,14,"#pandas Three ways to convert one set of values to another 👇

See other 84 @justmarkham's pandas tricks at https://t.co/26BvCDC4ex https://t.co/ibvxnETc5V",False,False,https://twitter.com/python_tip/status/1195126249368240128,"[{'url': 'https://t.co/26BvCDC4ex', 'expanded_url': 'https://www.dataschool.io/python-pandas-tips-and-tricks/', 'display_url': 'dataschool.io/python-pandas-…'}, {'url': 'https://t.co/ibvxnETc5V', 'expanded_url': 'https://twitter.com/justmarkham/status/1194708511546105858', 'display_url': 'twitter.com/justmarkham/st…'}]",[]
1194876115157803009,2019-11-14 07:14:00+00:00,55,7,"#pythontip from @RaphaelVallat to researchers:

Use #Pandas to create a ready-to-publish table by combining groupby/aggregate...

https://t.co/U4cLnVr73u

...and then use #Pingouin to calculate the T/F/Chi2 statistics and p-values (see the thread). https://t.co/2o2wOpLXBR",False,False,https://twitter.com/python_tip/status/1194876115157803009,"[{'url': 'https://t.co/U4cLnVr73u', 'expanded_url': 'https://twitter.com/RaphaelVallat/status/1156947441658130432', 'display_url': 'twitter.com/RaphaelVallat/…'}]","[{'url': 'https://t.co/2o2wOpLXBR', 'media_url': 'http://pbs.twimg.com/media/EJQFY9IXYAIC0QD.png', 'display_url': 'pic.twitter.com/2o2wOpLXBR'}]"
1194542119270199296,2019-11-13 09:06:49+00:00,109,20,"VS Code now supports editing and running Jupyter notebooks

https://t.co/X1IRIzJAhw

Honestly, I still did not switch from classical NB but better autocompletion and variable explorer seem tempting.

#vscode #jupyter https://t.co/jhB53gxA6j",False,False,https://twitter.com/python_tip/status/1194542119270199296,"[{'url': 'https://t.co/X1IRIzJAhw', 'expanded_url': 'https://towardsdatascience.com/jupyter-notebook-in-visual-studio-code-3fc21a36fe43', 'display_url': 'towardsdatascience.com/jupyter-notebo…'}]","[{'url': 'https://t.co/jhB53gxA6j', 'media_url': 'http://pbs.twimg.com/media/EJPdo2qXYAEHzTB.png', 'display_url': 'pic.twitter.com/jhB53gxA6j'}]"
1194150584384815106,2019-11-12 07:11:00+00:00,133,19,"Easy way to get stock market prices (and others economic data):

>>> from pandas_datareader import data as wb
>>>  ticker_name = '^GSPC'
>>> ticker = wb.DataReader(ticker_name, start='2010-1-1', data_source='yahoo')

More info:
https://t.co/3Sx13D5VVg https://t.co/IZUKnSQyrC",False,False,https://twitter.com/python_tip/status/1194150584384815106,"[{'url': 'https://t.co/3Sx13D5VVg', 'expanded_url': 'https://pandas-datareader.readthedocs.io/en/latest/remote_data.html', 'display_url': 'pandas-datareader.readthedocs.io/en/latest/remo…'}]","[{'url': 'https://t.co/IZUKnSQyrC', 'media_url': 'http://pbs.twimg.com/media/EJIiNrBXsAA6JRM.jpg', 'display_url': 'pic.twitter.com/IZUKnSQyrC'}]"
1193886376497946625,2019-11-11 13:41:08+00:00,39,7,"Be aware that `numpy.isin(a, b)` can return a wrong result if `b` is set: 

import numpy as np

a = np.array([[0, 2], [4, 6]])
b = {1, 2, 4, 8}

# wrong
np.isin(a, b)
# correct
np.isin(a, list(b))

And in general, `numpy.isin(a, b)` is slow for large `b`.

https://t.co/ihrxxlkh2z https://t.co/w8j0LA2nt9",False,False,https://twitter.com/python_tip/status/1193886376497946625,"[{'url': 'https://t.co/ihrxxlkh2z', 'expanded_url': 'https://twitter.com/jeremyphoward/status/1193554679071821824', 'display_url': 'twitter.com/jeremyphoward/…'}]","[{'url': 'https://t.co/w8j0LA2nt9', 'media_url': 'http://pbs.twimg.com/media/EJGJKu2WsAAnIYW.png', 'display_url': 'pic.twitter.com/w8j0LA2nt9'}]"
1192938647588409349,2019-11-08 22:55:11+00:00,279,65,"With the walrus operator

while True:
    line = fp.readline()
    if not line:
        break
    do_something(line)

can be written as:

while line := fp.readline():
    do_something(line)

More examples: https://t.co/4WCBSdizFF

#python3_8 #walrusoperator",False,False,https://twitter.com/python_tip/status/1192938647588409349,"[{'url': 'https://t.co/4WCBSdizFF', 'expanded_url': 'https://www.python.org/dev/peps/pep-0572/#examples', 'display_url': 'python.org/dev/peps/pep-0…'}]",[]
1192432262123360258,2019-11-07 13:23:00+00:00,32,8,"Weird things you can, but probably shouldn't do in #Python by @ThoughtWill 

https://t.co/B4y7PAnw3Z https://t.co/rLNLBWqqzn",False,False,https://twitter.com/python_tip/status/1192432262123360258,"[{'url': 'https://t.co/B4y7PAnw3Z', 'expanded_url': 'https://thoughts.willcipriano.com/weird-python-tricks/', 'display_url': 'thoughts.willcipriano.com/weird-python-t…'}]","[{'url': 'https://t.co/rLNLBWqqzn', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/EIsQygiXsAA6aGw.jpg', 'display_url': 'pic.twitter.com/rLNLBWqqzn'}]"
1192214829257363458,2019-11-06 22:59:00+00:00,78,15,"Use beautiful_date when need to create date/datetime objects in a simple way.

pip install beautiful-date

from beautiful_date import *

>>> d = 5/Mar/2019
BeautifulDate(2019, 3, 5)

>>> d[4:13]
datetime.datetime(2019, 3, 5, 4, 13)

#pythontip from @KuzmovychBox",False,False,https://twitter.com/python_tip/status/1192214829257363458,[],[]
1192055718075088897,2019-11-06 12:26:45+00:00,249,65,"Do you need to extract tables from a pdf document? Try camelot.
>>> import camelot
>>> tables = https://t.co/ttwuRpFpGR_pdf('foo.pdf')
>>> tables[0].to_csv('foo.csv') 
>>> tables[0].df # get a pandas DataFrame!

https://t.co/p7ckqIoC46",False,False,https://twitter.com/python_tip/status/1192055718075088897,"[{'url': 'https://t.co/ttwuRpFpGR', 'expanded_url': 'http://camelot.read', 'display_url': 'camelot.read'}, {'url': 'https://t.co/p7ckqIoC46', 'expanded_url': 'https://camelot-py.readthedocs.io/en/master/', 'display_url': 'camelot-py.readthedocs.io/en/master/'}]",[]
1191627500042018819,2019-11-05 08:05:10+00:00,49,10,If you are using #matplotlib publish your visualizations and tutorials on Matplotblog. https://t.co/bei4rHdmwf https://t.co/Bu4hCxvSL5,False,False,https://twitter.com/python_tip/status/1191627500042018819,"[{'url': 'https://t.co/bei4rHdmwf', 'expanded_url': 'https://matplotlib.org/matplotblog/posts/how-to-contribute/', 'display_url': 'matplotlib.org/matplotblog/po…'}, {'url': 'https://t.co/Bu4hCxvSL5', 'expanded_url': 'https://twitter.com/matplotlib/status/1191464007988908032', 'display_url': 'twitter.com/matplotlib/sta…'}]",[]
1190407280111628288,2019-11-01 23:16:26+00:00,210,64,"Data-to-Viz will help you to choose the visualization for your data. It provides the code to reproduce the graph, not only for #python, but for #rstats and #d3 as well.

https://t.co/X3G3oePfp3
https://t.co/RSQiHuUv2y https://t.co/ONZY0WbDFK",False,False,https://twitter.com/python_tip/status/1190407280111628288,"[{'url': 'https://t.co/X3G3oePfp3', 'expanded_url': 'https://www.data-to-viz.com/', 'display_url': 'data-to-viz.com'}, {'url': 'https://t.co/RSQiHuUv2y', 'expanded_url': 'https://python-graph-gallery.com/', 'display_url': 'python-graph-gallery.com'}]","[{'url': 'https://t.co/ONZY0WbDFK', 'media_url': 'http://pbs.twimg.com/media/EIUq6u8WwAAHBCP.jpg', 'display_url': 'pic.twitter.com/ONZY0WbDFK'}]"
1189948394841759744,2019-10-31 16:53:00+00:00,18,5,"Happy Halloween! Wanna create something spooky? Learn how to turn any image into a pencil sketch

https://t.co/w6nJrU1Jjm

#imageio #pyplot https://t.co/2thMzdudmu",False,False,https://twitter.com/python_tip/status/1189948394841759744,"[{'url': 'https://t.co/w6nJrU1Jjm', 'expanded_url': 'https://medium.com/free-code-camp/sketchify-turn-any-image-into-a-pencil-sketch-with-10-lines-of-code-cf67fa4f68ce', 'display_url': 'medium.com/free-code-camp…'}]","[{'url': 'https://t.co/2thMzdudmu', 'media_url': 'http://pbs.twimg.com/media/EIOLkBDXkAAxILd.png', 'display_url': 'pic.twitter.com/2thMzdudmu'}]"
1189308037040934914,2019-10-29 22:28:26+00:00,63,10,"#pythontip by @ori75660:

Sending emails with Python, incl.
- Setting dummy SMTP server
- HTML content, attachments, images...
- Gmail 

https://t.co/tQsBC5ElNy

Do you have any #pythontip to share? Just mention @python_tip in your tweet or send it to https://t.co/mfUQ9teK5k",False,False,https://twitter.com/python_tip/status/1189308037040934914,"[{'url': 'https://t.co/tQsBC5ElNy', 'expanded_url': 'https://dapythonista.com/2019/10/24/sending-emails-in-python-tutorial-with-code-examples/', 'display_url': 'dapythonista.com/2019/10/24/sen…'}, {'url': 'https://t.co/mfUQ9teK5k', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]",[]
1189072624372125696,2019-10-29 06:53:00+00:00,155,38,"Chip Huyen (@chipro) 'python-is-cool' collection of tips

https://t.co/ZxAR72A8eG https://t.co/eCMX5JqZt6",False,False,https://twitter.com/python_tip/status/1189072624372125696,"[{'url': 'https://t.co/ZxAR72A8eG', 'expanded_url': 'https://github.com/chiphuyen/python-is-cool', 'display_url': 'github.com/chiphuyen/pyth…'}]","[{'url': 'https://t.co/eCMX5JqZt6', 'media_url': 'http://pbs.twimg.com/media/EHw7kx2WoAAo2W5.png', 'display_url': 'pic.twitter.com/eCMX5JqZt6'}]"
1188711999259037696,2019-10-28 07:00:00+00:00,76,8,"Imagine you have got a custom class `MyClass` with __add__ (or similar) method. 

Then MyClass(4)+1 works fine but 1+MyClass(4) throws an error because it calls int.__add__ , not MyClass.__add__. 

The solution (__radd__):
https://t.co/ERyk0Ka5LR

Docs:
https://t.co/LTWJz1ylEf",False,False,https://twitter.com/python_tip/status/1188711999259037696,"[{'url': 'https://t.co/ERyk0Ka5LR', 'expanded_url': 'https://gist.github.com/simecek/8be0adf3d3f1cd0f82524229efeb4216', 'display_url': 'gist.github.com/simecek/8be0ad…'}, {'url': 'https://t.co/LTWJz1ylEf', 'expanded_url': 'https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types', 'display_url': 'docs.python.org/3/reference/da…'}]",[]
1187870871253389313,2019-10-25 23:17:39+00:00,68,9,"Get the count of unique items in a #pandas series:
 
df['embarked'].value_counts(dropna=False)

S      914
C      270
Q      123
NaN      2
Name: embarked, dtype: int64",False,False,https://twitter.com/python_tip/status/1187870871253389313,[],[]
1187614763813167104,2019-10-25 06:19:59+00:00,253,71,"convert two lists into dictionary:

>>> a = ['a', 'b', 'c']
>>> b = [1, 2, 3]
>>> dict(zip(a, b))
{'a': 1, 'b': 2, 'c': 3}

#python",False,False,https://twitter.com/python_tip/status/1187614763813167104,[],[]
1187123361274617862,2019-10-23 21:47:19+00:00,68,8,"You can use #pandas str methods to rename the columns of your dataframe:

>>> df.colums = df.columns.str.replace(' ', '-')

>>> df = pd.DataFrame({'John Doe': [1, 2, 3], 'Jim Smith': [4, 5, 6]})
>>> df.columns = df.columns.str.split().str.get(-1)",False,False,https://twitter.com/python_tip/status/1187123361274617862,[],[]
1186857483572305920,2019-10-23 04:10:49+00:00,102,15,">>> mylst = [1, 2, 3]
>>> a, b, c =  mylst
>>> a
1
>>> b
2
>>> c
3

#python",False,False,https://twitter.com/python_tip/status/1186857483572305920,[],[]
1186389928520962048,2019-10-21 21:12:55+00:00,76,18,"os.fspath normalizes both path strings and Path objects to string:

>>> from pathlib import Path
>>> import os.path
>>> p1 = os.path.join('Downloads', 'zzz')
>>> p2 = Path('Downloads/zzz')
>>> from os import fspath
>>> fspath(p1), fspath(p2)
('Downloads/zzz', 'Downloads/zzz')",False,False,https://twitter.com/python_tip/status/1186389928520962048,[],[]
1185233326434476032,2019-10-18 16:37:00+00:00,12,4,"Not really a #pythontip by @honza95m:

What can go wrong with your times and timezones

https://t.co/OWynPlFuVg",False,False,https://twitter.com/python_tip/status/1185233326434476032,"[{'url': 'https://t.co/OWynPlFuVg', 'expanded_url': 'https://www.youtube.com/watch?v=-5wpm-gesOY', 'display_url': 'youtube.com/watch?v=-5wpm-…'}]",[]
1184860661601275909,2019-10-17 15:56:10+00:00,88,15,"#pandas 0.25 comes with `Series.explode` functionality to split list-like values to rows.

Example:

df = pd.DataFrame([{'var1': 'a,b,c', 'var2': 1}, {'var1': 'd,e,f', 'var2': 2}])

df.assign(var1=df.var1.str.split(',')).explode('var1') https://t.co/OShhGVwTQa",False,False,https://twitter.com/python_tip/status/1184860661601275909,[],"[{'url': 'https://t.co/OShhGVwTQa', 'media_url': 'http://pbs.twimg.com/media/EHF4TC0UUAAEIpn.png', 'display_url': 'pic.twitter.com/OShhGVwTQa'}]"
1184621430685614080,2019-10-17 00:05:32+00:00,33,9,"#pickle protocols explained:

https://t.co/9qNb133ln2

Python 3.8.0 introduced a pickle protocol 5 with out-of-band data (PEP574). Also, DEFAULT_PROTOCOL is now 4. https://t.co/UevS0lYbsI",False,False,https://twitter.com/python_tip/status/1184621430685614080,"[{'url': 'https://t.co/9qNb133ln2', 'expanded_url': 'https://stackoverflow.com/questions/23582489/python-pickle-protocol-choice/46213977#46213977', 'display_url': 'stackoverflow.com/questions/2358…'}]","[{'url': 'https://t.co/UevS0lYbsI', 'media_url': 'http://pbs.twimg.com/media/EHCYTHiUEAAcSmB.png', 'display_url': 'pic.twitter.com/UevS0lYbsI'}]"
1184243873700147200,2019-10-15 23:05:16+00:00,88,39,"The final version of Python 3.8.0 is out!  Here is the list of new cool features:

https://t.co/HIXAf4UX54

Wanna try out? #pyenv enables you to manage multiple Python versions on a single machine.

https://t.co/wCyNX5XJ9K

To get a new Python 3.8 environment with #pyenv 👇 https://t.co/BjiSiiPuM6",False,False,https://twitter.com/python_tip/status/1184243873700147200,"[{'url': 'https://t.co/HIXAf4UX54', 'expanded_url': 'https://deepsource.io/blog/python-3-8-whats-new/', 'display_url': 'deepsource.io/blog/python-3-…'}, {'url': 'https://t.co/wCyNX5XJ9K', 'expanded_url': 'https://realpython.com/intro-to-pyenv/', 'display_url': 'realpython.com/intro-to-pyenv/'}]","[{'url': 'https://t.co/BjiSiiPuM6', 'media_url': 'http://pbs.twimg.com/media/EG9HWFKUUAAk2zD.png', 'display_url': 'pic.twitter.com/BjiSiiPuM6'}]"
1183865671890812929,2019-10-14 22:02:25+00:00,0,0,"RT @raymondh: Woohoo!  #Python 3.8 was just released.   And on the same day that PyPI hit 200,000 packages :-)

This one really is the best…",False,True,https://twitter.com/python_tip/status/1183865671890812929,[],[]
1183751130573987840,2019-10-14 14:27:17+00:00,24,5,"Python News aggregator (a hacker news lookalike) written in Python/Django by @sebastiansteins 

https://t.co/4R8YYRLKDa

(GitHub repo: https://t.co/LPrOsTiLmm)",False,False,https://twitter.com/python_tip/status/1183751130573987840,"[{'url': 'https://t.co/4R8YYRLKDa', 'expanded_url': 'https://news.python.sc', 'display_url': 'news.python.sc'}, {'url': 'https://t.co/LPrOsTiLmm', 'expanded_url': 'http://github.com/sebst/pythonic-news', 'display_url': 'github.com/sebst/pythonic…'}]",[]
1182955278045794304,2019-10-12 09:44:51+00:00,55,11,"Check out the “Tour of #JupyterLab Extensions” by @jtpio 

https://t.co/X2Q2zPFBPA

#PyConDE #PyDataBerlin",False,False,https://twitter.com/python_tip/status/1182955278045794304,"[{'url': 'https://t.co/X2Q2zPFBPA', 'expanded_url': 'https://github.com/jtpio/a-tour-of-jupyterlab-extensions', 'display_url': 'github.com/jtpio/a-tour-o…'}]",[]
1182365356683345922,2019-10-10 18:40:42+00:00,67,19,"Turn your #jupyter notebook into a reveal.js-based slides with RISE extension.

https://t.co/usQhx6tTNe",False,False,https://twitter.com/python_tip/status/1182365356683345922,"[{'url': 'https://t.co/usQhx6tTNe', 'expanded_url': 'https://rise.readthedocs.io/en/maint-5.5/', 'display_url': 'rise.readthedocs.io/en/maint-5.5/'}]",[]
1181958913283018753,2019-10-09 15:45:39+00:00,167,32,"List comprehensions can contain more then one for and if clauses:

[
(x, y) 
for x in range(4) 
for y in range (x + 2) 
if x != 0 
if y != x
]",False,False,https://twitter.com/python_tip/status/1181958913283018753,[],[]
1181669340317388806,2019-10-08 20:34:59+00:00,133,27,"enumerate() takes a second parameter to change the starting count:

>>> names = [""Alice"", ""Bob"", ""Charlie""]
>>> list(enumerate(names, start=101))
[(101, 'Alice'), (102, 'Bob'), (103, 'Charlie')]

https://t.co/SECAO6sci5

#python",False,False,https://twitter.com/python_tip/status/1181669340317388806,"[{'url': 'https://t.co/SECAO6sci5', 'expanded_url': 'https://docs.python.org/3/library/functions.html#enumerate', 'display_url': 'docs.python.org/3/library/func…'}]",[]
1181193357567184896,2019-10-07 13:03:36+00:00,47,8,"Use charset_normalizer to detect around 90 encoding and 50 languages.

>>> from charset_normalizer import detect
>>> my_byte_str = '我没有埋怨，磋砣的只是一些时间。'.encode('gb18030')
>>> detect(my_byte_str).get('encoding')
'gb18030'

#python_tip by @Ousret",False,False,https://twitter.com/python_tip/status/1181193357567184896,[],[]
1180744616175394816,2019-10-06 07:20:28+00:00,135,31,"Saving objects from Jupyter notebook session into a single compressed file (i.e. Python version of #rstats function `save`):

https://t.co/GtHcfgts9j #selfpromo #pickle

Example: https://t.co/NIApyh9wAR",False,False,https://twitter.com/python_tip/status/1180744616175394816,"[{'url': 'https://t.co/GtHcfgts9j', 'expanded_url': 'https://gist.github.com/simecek/19588c61c3430834bec01c67effa9c4a', 'display_url': 'gist.github.com/simecek/19588c…'}]","[{'url': 'https://t.co/NIApyh9wAR', 'media_url': 'http://pbs.twimg.com/media/EGLYzsFXkAA5_Ca.png', 'display_url': 'pic.twitter.com/NIApyh9wAR'}]"
1179867216218595329,2019-10-03 21:13:59+00:00,59,7,"Frustrated with #pandas output? (hidden rows, hidden columns, too many digits, ...) 

Solution: set display options
https://t.co/DJ5VZA08UF

Most likely you want to change one of those five 👇👇👇 https://t.co/90b7v4RXDS",False,False,https://twitter.com/python_tip/status/1179867216218595329,"[{'url': 'https://t.co/DJ5VZA08UF', 'expanded_url': 'https://www.tutorialspoint.com/python_pandas/python_pandas_options_and_customization.htm', 'display_url': 'tutorialspoint.com/python_pandas/…'}]","[{'url': 'https://t.co/90b7v4RXDS', 'media_url': 'http://pbs.twimg.com/media/EF-6zD8XkAMKOWC.png', 'display_url': 'pic.twitter.com/90b7v4RXDS'}]"
1179785175150018560,2019-10-03 15:47:59+00:00,1,1,"@Dementophobia @IDryer Good point. I guess if the ordering matters, the solution is to use list(dict.fromkeys(...))
as suggested at https://t.co/JLO5dBgtFw",True,False,https://twitter.com/python_tip/status/1179785175150018560,"[{'url': 'https://t.co/JLO5dBgtFw', 'expanded_url': 'https://stackoverflow.com/a/7961425', 'display_url': 'stackoverflow.com/a/7961425'}]",[]
1179556301879332865,2019-10-03 00:38:32+00:00,68,10,"#pythontip by @IDryer:

Get a unique collection of items in the list t as

>>> list(set(t))

Example: 👇 https://t.co/n5w9k3qzSI",False,False,https://twitter.com/python_tip/status/1179556301879332865,"[{'url': 'https://t.co/n5w9k3qzSI', 'expanded_url': 'https://twitter.com/IDryer/status/1175103586138767362', 'display_url': 'twitter.com/IDryer/status/…'}]",[]
1179210881865076737,2019-10-02 01:45:57+00:00,66,22,"Ever wanted to use data from OpenStreetMap?

1. Start with an easy to use web-based Overpass API

https://t.co/uU5ri37Z2Z

2. Automate with Python and overpy package

For details and examples, see Vojtěch Filipec's #PyConCZ slides

https://t.co/1eaFThaClj https://t.co/FL9Kb5M25W",False,False,https://twitter.com/python_tip/status/1179210881865076737,"[{'url': 'https://t.co/uU5ri37Z2Z', 'expanded_url': 'http://overpass-turbo.eu/', 'display_url': 'overpass-turbo.eu'}, {'url': 'https://t.co/1eaFThaClj', 'expanded_url': 'https://github.com/vojtech-filipec/PyConCZ-OSM-API/blob/master/OSM%20for%20PyConCZ%202019.pdf', 'display_url': 'github.com/vojtech-filipe…'}]","[{'url': 'https://t.co/FL9Kb5M25W', 'media_url': 'http://pbs.twimg.com/media/EF1mCwzX0AAlg3A.png', 'display_url': 'pic.twitter.com/FL9Kb5M25W'}]"
1178807625745653760,2019-09-30 23:03:33+00:00,18,4,"#pythontip by @florimong1: 'pytest-mypy-plugins' is a must for those who work a lot with type hinting

https://t.co/e0SufAUHts https://t.co/1BUBbTMmwp",False,False,https://twitter.com/python_tip/status/1178807625745653760,"[{'url': 'https://t.co/e0SufAUHts', 'expanded_url': 'https://sobolevn.me/2019/08/testing-mypy-types', 'display_url': 'sobolevn.me/2019/08/testin…'}, {'url': 'https://t.co/1BUBbTMmwp', 'expanded_url': 'https://twitter.com/florimondmanca/status/1172039719846383617', 'display_url': 'twitter.com/florimondmanca…'}]",[]
1177867114767683584,2019-09-28 08:46:18+00:00,0,0,"RT @raymondh: @python_tip >>> cmath.sqrt(-1)
1j",False,True,https://twitter.com/python_tip/status/1177867114767683584,[],[]
1177679053928701952,2019-09-27 20:19:01+00:00,54,6,">>> math.sqrt(-1)
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
ValueError: math domain error
>>> scipy.sqrt(-1)
1j

#python #scipy",False,False,https://twitter.com/python_tip/status/1177679053928701952,[],[]
1177335055628275724,2019-09-26 21:32:05+00:00,128,22,"With the #python sting replace() method, you can specify the number of occurrences to replace:
string.replace(searchString, replaceString, count)

>>> s1 = 'aaaaaaaaa'
>>> s1.replace('a', 'b')
'bbbbbbbbb'
>>> s1.replace('a', 'b', 3)
'bbbaaaaaa'",False,False,https://twitter.com/python_tip/status/1177335055628275724,[],[]
1176951869635203074,2019-09-25 20:09:27+00:00,53,12,"When working with datetime in #pandas, you can take advantage of the dt accessor.

https://t.co/BLg7x0VjCq:

>>> df['datecol'].dt.month_name() https://t.co/lofFEKQofj",False,False,https://twitter.com/python_tip/status/1176951869635203074,"[{'url': 'https://t.co/BLg7x0VjCq', 'expanded_url': 'https://www.mkanalysis.com/tutorial/23#Here-are-some-of-the-more-common-dt-accessors', 'display_url': 'mkanalysis.com/tutorial/23#He…'}]","[{'url': 'https://t.co/lofFEKQofj', 'media_url': 'http://pbs.twimg.com/media/EFVfZ21WkAE1LWI.png', 'display_url': 'pic.twitter.com/lofFEKQofj'}]"
1176571922387263489,2019-09-24 18:59:40+00:00,68,21,"In #python, you can use chained assignment:
>>> x = y = 42
>>> x, y
(42, 42)

However, be careful:
>>> a = b = []
>>> a.append(33)
>>> b
[33]",False,False,https://twitter.com/python_tip/status/1176571922387263489,[],[]
1176514864812036099,2019-09-24 15:12:57+00:00,0,0,RT @davorabbit: This is absolutely 🔥🔥🔥! #Jupyter Notebooks support in @code using @pythonvscode ext: open ipynb files in a fully-functional…,False,True,https://twitter.com/python_tip/status/1176514864812036099,[],[]
1176232106562924552,2019-09-23 20:29:22+00:00,67,25,"30 seconds of #Python: curated collection of useful Python snippets you can understand in 30 seconds or less.
https://t.co/gDKYfNxcf5 #pythontip",False,False,https://twitter.com/python_tip/status/1176232106562924552,"[{'url': 'https://t.co/gDKYfNxcf5', 'expanded_url': 'http://bit.ly/2O4uAt5', 'display_url': 'bit.ly/2O4uAt5'}]",[]
1174949234937745408,2019-09-20 07:31:41+00:00,78,9,"Weekend Reading: Implementing resumable exceptions 

https://t.co/vcutH6FrUk https://t.co/8cYuA3KgXV",False,False,https://twitter.com/python_tip/status/1174949234937745408,"[{'url': 'https://t.co/vcutH6FrUk', 'expanded_url': 'https://github.com/Aprillion/algebraic-effects/blob/master/python/Resumable%20Exceptions%20and%20Python.ipynb', 'display_url': 'github.com/Aprillion/alge…'}]","[{'url': 'https://t.co/8cYuA3KgXV', 'media_url': 'http://pbs.twimg.com/media/EE5B8w4VAAAUB4d.jpg', 'display_url': 'pic.twitter.com/8cYuA3KgXV'}]"
1174564778976526336,2019-09-19 06:04:00+00:00,58,10,"#pythontip by @justmarkham:

You can use f-strings when selecting a column from #pandas DataFrame! 👇

https://t.co/pLukgsIY6u

More awesome tips at https://t.co/26BvCDksPX https://t.co/NxSPBKBcUx",False,False,https://twitter.com/python_tip/status/1174564778976526336,"[{'url': 'https://t.co/pLukgsIY6u', 'expanded_url': 'https://twitter.com/justmarkham/status/1172579990296285185', 'display_url': 'twitter.com/justmarkham/st…'}, {'url': 'https://t.co/26BvCDksPX', 'expanded_url': 'https://www.dataschool.io/python-pandas-tips-and-tricks/', 'display_url': 'dataschool.io/python-pandas-…'}]","[{'url': 'https://t.co/NxSPBKBcUx', 'media_url': 'http://pbs.twimg.com/media/EExjfu0WwAASmtd.jpg', 'display_url': 'pic.twitter.com/NxSPBKBcUx'}]"
1174129423148355584,2019-09-18 01:14:03+00:00,59,16,"Do you need to warn the user? 

warnings.warn('I smell something fishy! 🐟')

Do you want to suppress all 'fishy' warnings?

from warnings import catch_warnings, filterwarnings

with catch_warnings():
   filterwarnings('ignore', message='.*fishy.*')
   …

https://t.co/tJdqyhfNfV https://t.co/jBEXgGzdYa",False,False,https://twitter.com/python_tip/status/1174129423148355584,"[{'url': 'https://t.co/tJdqyhfNfV', 'expanded_url': 'https://docs.python.org/3/library/warnings.html', 'display_url': 'docs.python.org/3/library/warn…'}]","[{'url': 'https://t.co/jBEXgGzdYa', 'media_url': 'http://pbs.twimg.com/media/EEtYAseX4AEhzhD.png', 'display_url': 'pic.twitter.com/jBEXgGzdYa'}]"
1173712263066243072,2019-09-16 21:36:24+00:00,70,16,"#pythontip by @mgalalen:

You can use parentheses around the multi-line data pipeline and avoid the need to add '\'s

https://t.co/DxYnmhY6KS

Examples: https://t.co/JI73cBRAWj",False,False,https://twitter.com/python_tip/status/1173712263066243072,"[{'url': 'https://t.co/DxYnmhY6KS', 'expanded_url': 'https://stackoverflow.com/a/33944618', 'display_url': 'stackoverflow.com/a/33944618'}]","[{'url': 'https://t.co/JI73cBRAWj', 'media_url': 'http://pbs.twimg.com/media/EEncpjmXYAEUvMB.png', 'display_url': 'pic.twitter.com/JI73cBRAWj'}]"
1173363459196706817,2019-09-15 22:30:23+00:00,73,31,"#Numpy broadcasting can be tricky

>>> import numpy as np
>>>
>>> (np.ones((32,)) + np.ones((32,1))).shape
(32, 32)
>>> (np.ones((32,)) + np.ones((1,32))).shape
(1, 32)
>>> (np.ones((4,1,3)) + np.ones((7,1))).shape
(4, 7, 3)

Why? Read two simple rules at https://t.co/iAnh62xI1h https://t.co/iL7s9DyJHI",False,False,https://twitter.com/python_tip/status/1173363459196706817,"[{'url': 'https://t.co/iAnh62xI1h', 'expanded_url': 'https://docs.scipy.org/doc/numpy/user/basics.broadcasting.html#general-broadcasting-rules', 'display_url': 'docs.scipy.org/doc/numpy/user…'}, {'url': 'https://t.co/iL7s9DyJHI', 'expanded_url': 'https://twitter.com/fchollet/status/1173306347175075841', 'display_url': 'twitter.com/fchollet/statu…'}]",[]
1172548019696414720,2019-09-13 16:30:07+00:00,22,2,Browse and search lightning talks from  #PyCon US and #EuroPython at https://t.co/Usf7DO95Vt,False,False,https://twitter.com/python_tip/status/1172548019696414720,"[{'url': 'https://t.co/Usf7DO95Vt', 'expanded_url': 'https://pythonlinks.info/', 'display_url': 'pythonlinks.info'}]",[]
1172251574795669513,2019-09-12 20:52:09+00:00,30,6,"The splitlines() method returns a list with all the lines in string.

#python 
https://t.co/N6Fp54MK8u",False,False,https://twitter.com/python_tip/status/1172251574795669513,"[{'url': 'https://t.co/N6Fp54MK8u', 'expanded_url': 'https://docs.python.org/3/library/stdtypes.html#str.splitlines', 'display_url': 'docs.python.org/3/library/stdt…'}]",[]
1171911087568097280,2019-09-11 22:19:10+00:00,58,10,"#pythontip by @justmarkham:

Did you encounter the dreaded SettingWithCopyWarning in #pandas? 🐼👻

The usual solution is to rewrite your assignment using ""loc"":

❌ df[df.col == val1].col = val2
✅ df.loc[df.col == val1, 'col'] = val2

See example 👇 https://t.co/8flsDcBWZh",False,False,https://twitter.com/python_tip/status/1171911087568097280,[],"[{'url': 'https://t.co/8flsDcBWZh', 'media_url': 'http://pbs.twimg.com/media/EEN205AXkAAJ6nP.jpg', 'display_url': 'pic.twitter.com/8flsDcBWZh'}]"
1171513260266278914,2019-09-10 19:58:21+00:00,28,5,"Use https://t.co/KBWVZb2pZj_clipboard() to copy and paste a table into dataframe.
https://t.co/xAeOLeM4IE
#pandas",False,False,https://twitter.com/python_tip/status/1171513260266278914,"[{'url': 'https://t.co/KBWVZb2pZj', 'expanded_url': 'http://pd.read', 'display_url': 'pd.read'}, {'url': 'https://t.co/xAeOLeM4IE', 'expanded_url': 'https://stackoverflow.com/questions/31610889/how-to-copy-paste-dataframe-from-stackoverflow-into-python', 'display_url': 'stackoverflow.com/questions/3161…'}]",[]
1171187002890489857,2019-09-09 22:21:55+00:00,109,22,"#Python3 pathlib is awesome. You can join paths by '/' operator:

data_folder = Path(""my_project/data/"")
file_to_open = data_folder/""raw_data.txt""

Moreover, you can directly get content of the file:

print(file_to_open.read_text())

https://t.co/MnvcCCtbHz",False,False,https://twitter.com/python_tip/status/1171187002890489857,"[{'url': 'https://t.co/MnvcCCtbHz', 'expanded_url': 'https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f', 'display_url': 'medium.com/@ageitgey/pyth…'}]",[]
1169882321715023873,2019-09-06 07:57:35+00:00,0,0,"RT @eumiro: @python_tip Correct! If you want to access different fields of ""today"", call ""https://t.co/FSeGYQDUg1()"" only once. Because

>…",False,True,https://twitter.com/python_tip/status/1169882321715023873,"[{'url': 'https://t.co/FSeGYQDUg1', 'expanded_url': 'http://date.today', 'display_url': 'date.today'}]",[]
1169852731449847808,2019-09-06 06:00:00+00:00,111,21,"What day is today?
> from datetime import date
> today = https://t.co/DAMy3gbWaN()

Which day of the week/month/year is it?
> today.weekday(), https://t.co/PkzxaCSmg7, today.strftime('%j')

Finally, how many days is it till Xmas
> xmas = date(2019, 12, 25)
> (xmas - today).days",False,False,https://twitter.com/python_tip/status/1169852731449847808,"[{'url': 'https://t.co/DAMy3gbWaN', 'expanded_url': 'http://date.today', 'display_url': 'date.today'}, {'url': 'https://t.co/PkzxaCSmg7', 'expanded_url': 'http://today.day', 'display_url': 'today.day'}]",[]
1169490593468375040,2019-09-05 06:01:00+00:00,74,17,"#pythontip from @ShivamKotwalia:

Multiprocess your #pandas with #swifter and #dask
https://t.co/qXYxFcuqPK
https://t.co/lCQ1Q1XnK8

Do you have any #pythontip you want to share? Just tag @python_tip in your tweet or send it to https://t.co/mfUQ9teK5k https://t.co/YyV1Ysyfrg",False,False,https://twitter.com/python_tip/status/1169490593468375040,"[{'url': 'https://t.co/qXYxFcuqPK', 'expanded_url': 'https://twitter.com/deliprao/status/1165044020977922049', 'display_url': 'twitter.com/deliprao/statu…'}, {'url': 'https://t.co/lCQ1Q1XnK8', 'expanded_url': 'https://github.com/jmcarpenter2/swifter', 'display_url': 'github.com/jmcarpenter2/s…'}, {'url': 'https://t.co/mfUQ9teK5k', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]","[{'url': 'https://t.co/YyV1Ysyfrg', 'media_url': 'http://pbs.twimg.com/media/EDUAM7vW4AMGcs1.png', 'display_url': 'pic.twitter.com/YyV1Ysyfrg'}]"
1169125688948842496,2019-09-04 05:51:00+00:00,48,14,"Too complex code that is difficult to read and maintain? Strive for simplicity with #wily. 

@realpython has a great intro
https://t.co/0SZlEmZl3z
or watch @anthonypjshaw's presentation on #PyCon2019
https://t.co/Zlktb9GL5C",False,False,https://twitter.com/python_tip/status/1169125688948842496,"[{'url': 'https://t.co/0SZlEmZl3z', 'expanded_url': 'https://realpython.com/python-refactoring/#using-wily-to-capture-and-track-your-projects-complexity', 'display_url': 'realpython.com/python-refacto…'}, {'url': 'https://t.co/Zlktb9GL5C', 'expanded_url': 'https://www.youtube.com/watch?v=dqdsNoApJ80', 'display_url': 'youtube.com/watch?v=dqdsNo…'}]",[]
1168765567076950016,2019-09-03 06:00:00+00:00,41,11,"Do you what to run your notebook both locally and on Google colab without any modification?

See this thread for advises https://t.co/j37MNhprXC",False,False,https://twitter.com/python_tip/status/1168765567076950016,"[{'url': 'https://t.co/j37MNhprXC', 'expanded_url': 'https://twitter.com/AllenDowney/status/1155906847775383553', 'display_url': 'twitter.com/AllenDowney/st…'}]",[]
1168403179077173248,2019-09-02 06:00:00+00:00,140,20,"New in #pandas 0.25 - Groupby aggregation with relabeling

https://t.co/TVTQeinhbk https://t.co/JB9w7mEqAc",False,False,https://twitter.com/python_tip/status/1168403179077173248,"[{'url': 'https://t.co/TVTQeinhbk', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/version/0.25/whatsnew/v0.25.0.html#groupby-aggregation-with-relabeling', 'display_url': 'pandas.pydata.org/pandas-docs/ve…'}]","[{'url': 'https://t.co/JB9w7mEqAc', 'media_url': 'http://pbs.twimg.com/media/EDT5nHLXsAIGW00.jpg', 'display_url': 'pic.twitter.com/JB9w7mEqAc'}]"
1167426141080182784,2019-08-30 13:17:36+00:00,40,9,"Since the version 7.3.0, #IPython supports %pip and %conda magics. These magics attempt to install packages into the kernel that is currently running in an IPython or #Jupyter notebook session.

https://t.co/v2ybEvC5qX https://t.co/mJN3yP8SbS",False,False,https://twitter.com/python_tip/status/1167426141080182784,"[{'url': 'https://t.co/v2ybEvC5qX', 'expanded_url': 'https://ipython.readthedocs.io/en/stable/whatsnew/version7.html#ipython-7-3-0', 'display_url': 'ipython.readthedocs.io/en/stable/what…'}]","[{'url': 'https://t.co/mJN3yP8SbS', 'media_url': 'http://pbs.twimg.com/media/EDOHBqrWwAE6m5H.jpg', 'display_url': 'pic.twitter.com/mJN3yP8SbS'}]"
1167177601670139906,2019-08-29 20:50:00+00:00,49,3,"Guess the output:

>>> all([])

>>> all([[]])

>>> all([[[]]])

Explanation: 
https://t.co/9WdOUKpTpB",False,False,https://twitter.com/python_tip/status/1167177601670139906,"[{'url': 'https://t.co/9WdOUKpTpB', 'expanded_url': 'https://github.com/cosmologicon/pywat/blob/master/explanation.md#all-and-emptiness', 'display_url': 'github.com/cosmologicon/p…'}]",[]
1166827139502616579,2019-08-28 21:37:23+00:00,138,31,"Compare lists without taking their order into account:

>>> from collections import Counter
>>> a = [1, 2, 3]
>>> b = [2, 1, 3]
>>> Counter(a) == Counter(b) 
True
>>> c = [1, 1, 2, 3]
>>> Counter(a) == Counter(c) # duplicates matter
False

#python",False,False,https://twitter.com/python_tip/status/1166827139502616579,[],[]
1166460268613967872,2019-08-27 21:19:34+00:00,95,26,"Implicit string concatenation in #python is nice when you have long strings...

>>> s = ('some very very very '
... 'long long long string')
>>> s
'some very very very long long long string'

...but it can surprise you:

>>> lst = [""a"", ""b"" ""c"", ""d""]
>>> lst
['a', 'bc', 'd']",False,False,https://twitter.com/python_tip/status/1166460268613967872,[],[]
1166079081424838658,2019-08-26 20:04:52+00:00,92,20,"Read all sheets in an Excel file with #pandas at once:

all_dfs = https://t.co/KBWVZaKP7L_excel('myexcel.xlsx', sheet_name= None)

# returns a collection.OrderedDict object",False,False,https://twitter.com/python_tip/status/1166079081424838658,"[{'url': 'https://t.co/KBWVZaKP7L', 'expanded_url': 'http://pd.read', 'display_url': 'pd.read'}]",[]
1164805812356702210,2019-08-23 07:45:21+00:00,0,0,"RT @starenka: @python_tip @IDryer This looks less like jquery to me:

head = [re.sub('\W', '', one.title()) for one in head]

;)",False,True,https://twitter.com/python_tip/status/1164805812356702210,[],[]
1164779299632631808,2019-08-23 06:00:00+00:00,31,6,"How to clean up a header row with vanilla python 

#pythontip from @IDryer
https://t.co/JCely0kOyK https://t.co/qbeAY5E5mu",False,False,https://twitter.com/python_tip/status/1164779299632631808,"[{'url': 'https://t.co/JCely0kOyK', 'expanded_url': 'https://twitter.com/IDryer/status/1145055358437724160', 'display_url': 'twitter.com/IDryer/status/…'}]","[{'url': 'https://t.co/qbeAY5E5mu', 'media_url': 'http://pbs.twimg.com/media/ECQ5dZcWkAIoT09.png', 'display_url': 'pic.twitter.com/qbeAY5E5mu'}]"
1164455750871203840,2019-08-22 08:34:20+00:00,1,0,"@ramvee I agree it is slightly controversial. But you can always easily add import statements at the end with 

active_imports()",True,False,https://twitter.com/python_tip/status/1164455750871203840,[],[]
1164416913276993536,2019-08-22 06:00:00+00:00,113,27,"Does all your Jupyter notebooks start with the same import statements?

import numpy as np
import pandas as pd
...

They do not have to thanks to `pyforest` package that  lazy-imports popular Python Data Science libraries.

https://t.co/dEOSGwyrqz https://t.co/w4eobcflfW",False,False,https://twitter.com/python_tip/status/1164416913276993536,"[{'url': 'https://t.co/dEOSGwyrqz', 'expanded_url': 'https://github.com/8080labs/pyforest', 'display_url': 'github.com/8080labs/pyfor…'}]","[{'url': 'https://t.co/w4eobcflfW', 'media_url': 'http://pbs.twimg.com/ext_tw_video_thumb/1164188088861679616/pu/img/k8iMMKvmJYFnYOLj.jpg', 'display_url': 'pic.twitter.com/w4eobcflfW'}]"
1164054525725929472,2019-08-21 06:00:00+00:00,22,4,"#pythontip from @thisPtr

Yield Keyword & Generators explained with examples

https://t.co/7l7irwb0XN",False,False,https://twitter.com/python_tip/status/1164054525725929472,"[{'url': 'https://t.co/7l7irwb0XN', 'expanded_url': 'https://thispointer.com/python-use-of-yield-keyword-generators-explained-with-examples/', 'display_url': 'thispointer.com/python-use-of-…'}]",[]
1163692135910203392,2019-08-20 06:00:00+00:00,60,9,"There are 3 ways to combine #pandas dataframes:

1) merge - SQL JOIN on the selected column(s)
2) join - merge by the index
3) concatenate - stack dataframes on top of each other or side by side

See examples here:
https://t.co/iHuQJgAQE5
https://t.co/hac3DWAJKj",False,False,https://twitter.com/python_tip/status/1163692135910203392,"[{'url': 'https://t.co/iHuQJgAQE5', 'expanded_url': 'https://martin-thoma.com/pandas-merge-join-concatenate/', 'display_url': 'martin-thoma.com/pandas-merge-j…'}, {'url': 'https://t.co/hac3DWAJKj', 'expanded_url': 'https://datacarpentry.org/python-ecology-lesson/05-merging-data/index.html', 'display_url': 'datacarpentry.org/python-ecology…'}]",[]
1163329749055229952,2019-08-19 06:00:00+00:00,50,18,"Deepcopy can be extremely slow.  So much that 

pickle.loads(pickle.dumps(my_object))

is actually faster. See example from @Dementophobia https://t.co/KIQBsyyBmJ

Another option is to define your own__deepcopy__ method as shown here https://t.co/7xmevJyQ80

#deepcopy https://t.co/tIn1dKfAgV",False,False,https://twitter.com/python_tip/status/1163329749055229952,"[{'url': 'https://t.co/KIQBsyyBmJ', 'expanded_url': 'https://twitter.com/Dementophobia/status/1160532561849913346', 'display_url': 'twitter.com/Dementophobia/…'}, {'url': 'https://t.co/7xmevJyQ80', 'expanded_url': 'https://stackoverflow.com/questions/24756712/deepcopy-is-extremely-slow', 'display_url': 'stackoverflow.com/questions/2475…'}]","[{'url': 'https://t.co/tIn1dKfAgV', 'media_url': 'http://pbs.twimg.com/media/ECQyU-JWsAAfbFK.png', 'display_url': 'pic.twitter.com/tIn1dKfAgV'}]"
1162485252813725697,2019-08-16 22:04:16+00:00,177,43,"print() function's sep and end arguments may come in handy:

>>> lst = [""a"", ""b"", ""c""]
>>> print(*lst)
a b c
>>> print(*lst, sep="", "")
a, b, c
>>> print(*lst, sep="", "", end=""!!!\n"")
a, b, c!!!

#python",False,False,https://twitter.com/python_tip/status/1162485252813725697,[],[]
1162047046427140097,2019-08-15 17:03:00+00:00,65,14,">>> a = ""dog""
>>> b = ""dog""
>>> a is b
True
>>> c = ""d"" + ""og""
>>> a is c
True
>>> d = """".join([""d"", ""og""])
>>> a is d
False
>>> a = ""d@g""
>>> b = ""d@g""
>>> a is b
False

Read more about string interning in #python: 
https://t.co/YMVUUs6rXb",False,False,https://twitter.com/python_tip/status/1162047046427140097,"[{'url': 'https://t.co/YMVUUs6rXb', 'expanded_url': 'https://medium.com/@bdov_/https-medium-com-bdov-python-objects-part-iii-string-interning-625d3c7319de', 'display_url': 'medium.com/@bdov_/https-m…'}]",[]
1161886780041437184,2019-08-15 06:26:09+00:00,115,24,"Worth a try:
Python Handout by  @daniarh lets you create docs with inline figures, images, videos directly from #Python scripts. No hidden state, supports any text editor. 

https://t.co/miwoWlhbqK https://t.co/guSjuA19fk",False,False,https://twitter.com/python_tip/status/1161886780041437184,"[{'url': 'https://t.co/miwoWlhbqK', 'expanded_url': 'https://github.com/danijar/handout', 'display_url': 'github.com/danijar/handout'}]","[{'url': 'https://t.co/guSjuA19fk', 'media_url': 'http://pbs.twimg.com/media/EB_ZzkbW4AEdHyV.jpg', 'display_url': 'pic.twitter.com/guSjuA19fk'}]"
1161241639693799425,2019-08-13 11:42:36+00:00,38,4,"Probably not a good idea, but you can access #numpy functionality from within #pandas :-)

>>> import pandas as pd
>>> https://t.co/QhRZr2wAe6.random.randn(2, 2)
array([[-0.00939629,  0.13322722],
       [-0.0116377 ,  0.09023827]])

#wtf tip by 
@justmarkham",False,False,https://twitter.com/python_tip/status/1161241639693799425,"[{'url': 'https://t.co/QhRZr2wAe6', 'expanded_url': 'http://pd.np', 'display_url': 'pd.np'}]",[]
1161015163589468160,2019-08-12 20:42:40+00:00,121,30,"Skip the beginning of an iterable with itertools.dropwhile():

with open(""story.txt"") as txt:
    for L in itertools.dropwhile(lambda L: L.startswith(""#""), txt.readlines()):
        do something https://t.co/BXqcdVYdEp",False,False,https://twitter.com/python_tip/status/1161015163589468160,[],"[{'url': 'https://t.co/BXqcdVYdEp', 'media_url': 'http://pbs.twimg.com/media/EBzBGMgXsAITLnM.jpg', 'display_url': 'pic.twitter.com/BXqcdVYdEp'}]"
1159707631075958784,2019-08-09 06:07:00+00:00,86,21,"Unlike in Haskell or R, you cannot define your own operators in Python.

However, this litter hack gets you pretty far

>>> @Infix
... def add(x,y):
...   return x+y
... 
>>> 5 |add| 3
8

https://t.co/EIw6RfhbD6 https://t.co/CLPcayvGwk",False,False,https://twitter.com/python_tip/status/1159707631075958784,"[{'url': 'https://t.co/EIw6RfhbD6', 'expanded_url': 'http://tomerfiliba.com/blog/Infix-Operators/', 'display_url': 'tomerfiliba.com/blog/Infix-Ope…'}]","[{'url': 'https://t.co/CLPcayvGwk', 'media_url': 'http://pbs.twimg.com/media/EA_91T-W4AAJtzR.png', 'display_url': 'pic.twitter.com/CLPcayvGwk'}]"
1159376998499852288,2019-08-08 08:13:11+00:00,0,0,RT @Adyasha_D: @python_tip @LivePython One of my favorite summaries on the usage and caveats of using __slots__: https://t.co/ZbjPBrJ0Qf,False,True,https://twitter.com/python_tip/status/1159376998499852288,"[{'url': 'https://t.co/ZbjPBrJ0Qf', 'expanded_url': 'https://stackoverflow.com/questions/472000/usage-of-slots/28059785#28059785', 'display_url': 'stackoverflow.com/questions/4720…'}]",[]
1159342978294374400,2019-08-08 05:58:00+00:00,136,38,"By default, Python enables us to add new attributes during runtime. However, if you fix the set of attributes with __slots__ magic, you can potentially save a lot of memory.

See https://t.co/2CjGqwhb6m or watch @LivePython video at  https://t.co/O4aMocIwLr https://t.co/Y26tDUXS2p",False,False,https://twitter.com/python_tip/status/1159342978294374400,"[{'url': 'https://t.co/2CjGqwhb6m', 'expanded_url': 'http://book.pythontips.com/en/latest/__slots__magic.html', 'display_url': 'book.pythontips.com/en/latest/__sl…'}, {'url': 'https://t.co/O4aMocIwLr', 'expanded_url': 'https://www.youtube.com/watch?v=8Jz8VH6Gwlg', 'display_url': 'youtube.com/watch?v=8Jz8VH…'}]","[{'url': 'https://t.co/Y26tDUXS2p', 'media_url': 'http://pbs.twimg.com/media/EA_7HRaXUAAwHUa.png', 'display_url': 'pic.twitter.com/Y26tDUXS2p'}]"
1158989650272198656,2019-08-07 06:34:00+00:00,20,3,"#pythontip from @thisPtr:

How to merge two or more dictionaries

https://t.co/YvJxPTCIEL",False,False,https://twitter.com/python_tip/status/1158989650272198656,"[{'url': 'https://t.co/YvJxPTCIEL', 'expanded_url': 'https://thispointer.com/how-to-merge-two-or-more-dictionaries-in-python/', 'display_url': 'thispointer.com/how-to-merge-t…'}]",[]
1158621725757624320,2019-08-06 06:12:00+00:00,59,15,"A nice shortcut for unpacking a tuple in Python by @IDryer:

https://t.co/TBT3qxYbvy https://t.co/IophHTz91V",False,False,https://twitter.com/python_tip/status/1158621725757624320,"[{'url': 'https://t.co/TBT3qxYbvy', 'expanded_url': 'https://twitter.com/IDryer/status/1154387819009363970', 'display_url': 'twitter.com/IDryer/status/…'}]","[{'url': 'https://t.co/IophHTz91V', 'media_url': 'http://pbs.twimg.com/media/EA_xH7cXUAEDaxh.png', 'display_url': 'pic.twitter.com/IophHTz91V'}]"
1158256319478022145,2019-08-05 06:00:00+00:00,22,5,"#math module offers a wide choice of math functions incl. `factorial`, `reminder`, the Gauss error function `erf` and, yes, the greatest common divisor `gcd`.

https://t.co/GBuVuS8oie https://t.co/wlIgzUHVw7",False,False,https://twitter.com/python_tip/status/1158256319478022145,"[{'url': 'https://t.co/GBuVuS8oie', 'expanded_url': 'https://docs.python.org/3/library/math.html', 'display_url': 'docs.python.org/3/library/math…'}, {'url': 'https://t.co/wlIgzUHVw7', 'expanded_url': 'https://twitter.com/rygorous/status/1156359538129264641', 'display_url': 'twitter.com/rygorous/statu…'}]",[]
1157272812412899328,2019-08-02 12:51:54+00:00,145,24,#Python tip by @RaphaelVallat: one of my favorite thing about #Pandas is combining groupby/aggregate to create a ready-to-publish table:  #Statistics https://t.co/miQA5qhCm0,False,False,https://twitter.com/python_tip/status/1157272812412899328,[],"[{'url': 'https://t.co/miQA5qhCm0', 'media_url': 'http://pbs.twimg.com/media/EA91fJ1XkAQJZCT.png', 'display_url': 'pic.twitter.com/miQA5qhCm0'}]"
1156783020675915776,2019-08-01 04:25:38+00:00,92,23,"List Slicing with None as argument:  

>>> a = [0, 1, 2, 3, 4, 5] 
>>> LASTTHREE = slice(-3, None) 
>>> a[LASTTHREE] 
[3, 4, 5]  

#python",False,False,https://twitter.com/python_tip/status/1156783020675915776,[],[]
1156323362668498945,2019-07-30 21:59:07+00:00,52,16,Did you know that you could control your mouse and keyboard using python code?!  https://t.co/IK1q0OkwFF,False,False,https://twitter.com/python_tip/status/1156323362668498945,"[{'url': 'https://t.co/IK1q0OkwFF', 'expanded_url': 'http://www.codeharvest.io/automation/gui-automation-using-python/', 'display_url': 'codeharvest.io/automation/gui…'}]",[]
1155949192243585024,2019-07-29 21:12:18+00:00,124,20,"Use pandas_profiling.ProfileReport(df) to explore your data.

#pandas #pandas-profiling https://t.co/Mu5yyiGUhK",False,False,https://twitter.com/python_tip/status/1155949192243585024,[],"[{'url': 'https://t.co/Mu5yyiGUhK', 'media_url': 'http://pbs.twimg.com/media/EArBqLAU8AA0UmF.jpg', 'display_url': 'pic.twitter.com/Mu5yyiGUhK'}]"
1154632439723175936,2019-07-26 06:00:00+00:00,32,6,"#pythontip from @codeharvestio:

What could be more productive than making your own productivity tool using python! 

https://t.co/eroirvyPvh

(Send us your tips by mentioning @python_tip in your tweet, or filling https://t.co/mfUQ9teK5k)",False,False,https://twitter.com/python_tip/status/1154632439723175936,"[{'url': 'https://t.co/eroirvyPvh', 'expanded_url': 'http://www.codeharvest.io/python/track-website-browsing-time-using-python/', 'display_url': 'codeharvest.io/python/track-w…'}, {'url': 'https://t.co/mfUQ9teK5k', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]",[]
1154269548083683328,2019-07-25 05:58:00+00:00,56,5,"Know the difference between class vs. instance attributes

https://t.co/vweeMML3Uz

Solution with @classmethod decorator https://t.co/BXOgp4cLxF https://t.co/2QFO19bPTu",False,False,https://twitter.com/python_tip/status/1154269548083683328,"[{'url': 'https://t.co/vweeMML3Uz', 'expanded_url': 'https://twitter.com/jakevdp/status/1120898594519650304', 'display_url': 'twitter.com/jakevdp/status…'}, {'url': 'https://t.co/BXOgp4cLxF', 'expanded_url': 'https://gist.github.com/simecek/b00f0df694c6318130cfeaf1586dca3f', 'display_url': 'gist.github.com/simecek/b00f0d…'}]","[{'url': 'https://t.co/2QFO19bPTu', 'media_url': 'http://pbs.twimg.com/media/EARJ2uiWkAAUl7O.png', 'display_url': 'pic.twitter.com/2QFO19bPTu'}]"
1153948433390145536,2019-07-24 08:42:00+00:00,3,1,"@root_inside @GullumLuvl Delta Degrees of Freedom. The divisor used in calculations of std. dev. is N - ddof

https://t.co/5Wltwz2dI2",True,False,https://twitter.com/python_tip/status/1153948433390145536,"[{'url': 'https://t.co/5Wltwz2dI2', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.std.html', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}]",[]
1153948064882860037,2019-07-24 08:40:32+00:00,8,1,@MwandiFrank No. The problem is that statisticians never agreed on std. deviation definition. Sometimes it makes more sense to divide by (N-1) and sometime by N.,True,False,https://twitter.com/python_tip/status/1153948064882860037,[],[]
1153943018891857920,2019-07-24 08:20:29+00:00,76,27,"#pythontip from @GullumLuvl

There is a difference between numpy and pandas in std. dev. calculation: default ddof value is 0 in np.std, but 1 in pd.Series.std.

>>> pd.Series([1,2,3]).std()
1.0
>>> np.std([1,2,3])
0.816…
>>> np.std([1,2,3], ddof=1)
1.0

Careful with your stats! https://t.co/kqLfmDBlpY",False,False,https://twitter.com/python_tip/status/1153943018891857920,[],"[{'url': 'https://t.co/kqLfmDBlpY', 'media_url': 'http://pbs.twimg.com/media/EAOg5_FX4AEe0YJ.png', 'display_url': 'pic.twitter.com/kqLfmDBlpY'}]"
1153545275673153538,2019-07-23 06:00:00+00:00,121,37,"You might know that ! in #JupyterNotebook, calls a shell command.

But do you know you can insert the value of Python variable in curly braces into this command?

>>> !head -n3 {path}/{myfile}

Or collect the output from shell?

>>> first_four_lines = !head -n4 myfile

Example: https://t.co/KTOKeRPKFJ",False,False,https://twitter.com/python_tip/status/1153545275673153538,[],"[{'url': 'https://t.co/KTOKeRPKFJ', 'media_url': 'http://pbs.twimg.com/media/D_6mKZVXsAAuEa9.png', 'display_url': 'pic.twitter.com/KTOKeRPKFJ'}]"
1153182889271365634,2019-07-22 06:00:00+00:00,59,11,"#pythontip from @IDryer:

Add leading zeroes to a Series in #pandas

>>> df.EMPid.astype(""str"").str.rjust(7, '0')

https://t.co/5Rk6ZXXUW4 https://t.co/hTb8xITxOh",False,False,https://twitter.com/python_tip/status/1153182889271365634,"[{'url': 'https://t.co/5Rk6ZXXUW4', 'expanded_url': 'https://twitter.com/IDryer/status/1146897237047463937', 'display_url': 'twitter.com/IDryer/status/…'}]","[{'url': 'https://t.co/hTb8xITxOh', 'media_url': 'http://pbs.twimg.com/media/D_6OOd3X4AAz43H.png', 'display_url': 'pic.twitter.com/hTb8xITxOh'}]"
1152327599336517632,2019-07-19 21:21:23+00:00,152,23,"#pandas 0.25.0 is out. 
Try exploding the list-like columns: https://t.co/lr6WwUnBYg

#python https://t.co/GxTYc43GDP",False,False,https://twitter.com/python_tip/status/1152327599336517632,"[{'url': 'https://t.co/lr6WwUnBYg', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/version/0.25/user_guide/reshaping.html#reshaping-explode', 'display_url': 'pandas.pydata.org/pandas-docs/ve…'}]","[{'url': 'https://t.co/GxTYc43GDP', 'media_url': 'http://pbs.twimg.com/media/D_3j15eWwAIOsGI.png', 'display_url': 'pic.twitter.com/GxTYc43GDP'}]"
1151963082593329161,2019-07-18 21:12:55+00:00,98,23,"Use sets for intersection of lists:
>>> a = [1,2,3,4,5,9,10,11]
>>> b = [4,5,6,7]
>>> set(a).intersection(b)
{4, 5}
#python",False,False,https://twitter.com/python_tip/status/1151963082593329161,[],[]
1151584666866081792,2019-07-17 20:09:14+00:00,96,32,"#pythontip from @KarolinaBzdusek:

There are two ways to create a set from a list:
a) set([1, 2, 3, 4, 5, 6, 7, 8, 9, 0])
b) {*[1, 2, 3, 4, 5, 6, 7, 8, 9, 0]}

b) is faster, here is why
https://t.co/rVDPMpoHJD",False,False,https://twitter.com/python_tip/status/1151584666866081792,"[{'url': 'https://t.co/rVDPMpoHJD', 'expanded_url': 'https://bassi.li/blog/2019/07/15/set-vs-literal-in-python-3.html', 'display_url': 'bassi.li/blog/2019/07/1…'}]",[]
1151091868328955904,2019-07-16 11:31:02+00:00,51,10,"You may already know you can execute a #Python script before entering the interpreter using the -i option.

But what about taking action when leaving the interpreter?

Use the atexit module. 🔥

https://t.co/H50z9YayOB https://t.co/LYZ9Ge46C9",False,False,https://twitter.com/python_tip/status/1151091868328955904,"[{'url': 'https://t.co/H50z9YayOB', 'expanded_url': 'https://twitter.com/FlorimondManca/status/1150361679835869185', 'display_url': 'twitter.com/FlorimondManca…'}]","[{'url': 'https://t.co/LYZ9Ge46C9', 'media_url': 'http://pbs.twimg.com/media/D_l_yr7WkAI_yoj.png', 'display_url': 'pic.twitter.com/LYZ9Ge46C9'}]"
1150755234647609344,2019-07-15 13:13:22+00:00,44,8,Don't miss the #PyTorch & #deeplearning mini-course from @alfcnz : https://t.co/6yqz8S5eFZ,False,False,https://twitter.com/python_tip/status/1150755234647609344,"[{'url': 'https://t.co/6yqz8S5eFZ', 'expanded_url': 'https://github.com/Atcold/pytorch-Deep-Learning-Minicourse', 'display_url': 'github.com/Atcold/pytorch…'}]",[]
1149565847054233600,2019-07-12 06:27:10+00:00,96,18,"Do you need to use passwords or other secrets in your code? 

With the `keyring` module, you can save them to your OS password store (OS X Keychain,  Windows Credential Vault, ...)

https://t.co/IQbNBXT9lO

Example: https://t.co/DtAe0olZ9a",False,False,https://twitter.com/python_tip/status/1149565847054233600,"[{'url': 'https://t.co/IQbNBXT9lO', 'expanded_url': 'https://alexwlchan.net/2016/11/you-should-use-keyring/', 'display_url': 'alexwlchan.net/2016/11/you-sh…'}]","[{'url': 'https://t.co/DtAe0olZ9a', 'media_url': 'http://pbs.twimg.com/media/D_JzF7GXsAEyzhM.png', 'display_url': 'pic.twitter.com/DtAe0olZ9a'}]"
1149104601305665536,2019-07-10 23:54:20+00:00,47,10,"#pythontip from @FlorimondManca:

In #Python 3.7 and above, you can use `breakpoint` builtin to start a pdb session. No more `import pdb; pdb.set_trace()`!

See @FlorimondManca's example and pdb cheatsheet below. https://t.co/dM2OnxJQZy https://t.co/AzVEJgcwBY",False,False,https://twitter.com/python_tip/status/1149104601305665536,"[{'url': 'https://t.co/dM2OnxJQZy', 'expanded_url': 'https://twitter.com/florimondmanca/status/1149023023153983488', 'display_url': 'twitter.com/florimondmanca…'}]","[{'url': 'https://t.co/AzVEJgcwBY', 'media_url': 'http://pbs.twimg.com/media/D_JwioVXsAEOD11.png', 'display_url': 'pic.twitter.com/AzVEJgcwBY'}]"
1148819134500577284,2019-07-10 05:00:00+00:00,152,31,"Is the CSV file too large to fit into memory? #pandas

1) Read only first few rows:
url = ""https://t.co/8klXo11L20""
https://t.co/KBWVZb2pZj_csv(url, nrows=10)

2) Read only selected columns
https://t.co/KBWVZb2pZj_csv(url, usecols=['name', 'sex'])

3) Process the file by chunks https://t.co/3r3TDnDMco",False,False,https://twitter.com/python_tip/status/1148819134500577284,"[{'url': 'https://t.co/8klXo11L20', 'expanded_url': 'http://bit.ly/2XCFEys', 'display_url': 'bit.ly/2XCFEys'}, {'url': 'https://t.co/KBWVZb2pZj', 'expanded_url': 'http://pd.read', 'display_url': 'pd.read'}, {'url': 'https://t.co/KBWVZb2pZj', 'expanded_url': 'http://pd.read', 'display_url': 'pd.read'}]","[{'url': 'https://t.co/3r3TDnDMco', 'media_url': 'http://pbs.twimg.com/media/D_D2q44XUAEYkDp.png', 'display_url': 'pic.twitter.com/3r3TDnDMco'}]"
1148354152260612097,2019-07-08 22:12:19+00:00,64,9,"#pythontip from @IDryer:

A quick and easy way to create a table with str.ljust() method. https://t.co/IdBagzJ9aj",False,False,https://twitter.com/python_tip/status/1148354152260612097,"[{'url': 'https://t.co/IdBagzJ9aj', 'expanded_url': 'https://twitter.com/IDryer/status/1147170312003477504', 'display_url': 'twitter.com/IDryer/status/…'}]",[]
1148020517523337217,2019-07-08 00:06:35+00:00,87,25,"A Visual Intro to #NumPy by @jalammar 

https://t.co/xbFmMJviKI https://t.co/b7lEvzl6Ni",False,False,https://twitter.com/python_tip/status/1148020517523337217,"[{'url': 'https://t.co/xbFmMJviKI', 'expanded_url': 'https://jalammar.github.io/visual-numpy/', 'display_url': 'jalammar.github.io/visual-numpy/'}]","[{'url': 'https://t.co/b7lEvzl6Ni', 'media_url': 'http://pbs.twimg.com/media/D-6Wkv-X4AAR_v-.jpg', 'display_url': 'pic.twitter.com/b7lEvzl6Ni'}]"
1147265067538419713,2019-07-05 22:04:41+00:00,48,11,"#Plotly Express allows you to use a simple syntax to generate interactive vizualizations

https://t.co/K4vNThbx85
https://t.co/QVTgZcIehl https://t.co/Ypvfgal9po",False,False,https://twitter.com/python_tip/status/1147265067538419713,"[{'url': 'https://t.co/K4vNThbx85', 'expanded_url': 'https://medium.com/@plotlygraphs/introducing-plotly-express-808df010143d', 'display_url': 'medium.com/@plotlygraphs/…'}, {'url': 'https://t.co/QVTgZcIehl', 'expanded_url': 'https://www.plotly.express/', 'display_url': 'plotly.express'}]","[{'url': 'https://t.co/Ypvfgal9po', 'media_url': 'http://pbs.twimg.com/media/D-vnfuhXYAALS9B.jpg', 'display_url': 'pic.twitter.com/Ypvfgal9po'}]"
1146899187176546304,2019-07-04 21:50:49+00:00,83,21,"ast.literal_eval() allows you to evaluate a string containing a #Python literal or container:

>>> import ast
>>> x = ""[1, 2, 3]""
>>> type(x)
<class 'str'>
>>> ast.literal_eval(x)
[1, 2, 3]
>>> type(ast.literal_eval(x))
<class 'list'>",False,False,https://twitter.com/python_tip/status/1146899187176546304,[],[]
1146535524099862529,2019-07-03 21:45:45+00:00,40,5,"Tip by @MiloslavPojman:

Functions named similarly can be very different:

sorted() accepts any iterable and returns a list. 
reversed() requires a list-like and returns an iterator.",False,False,https://twitter.com/python_tip/status/1146535524099862529,[],[]
1146276591913381889,2019-07-03 04:36:50+00:00,49,8,"#numpy Slicing vs. indexing:
> x=np.array(range(1,5))
> y=x[[1,2]]
> z=x[1:3]
> y[0]=9
> x
array([1,2,3,4])
> z[0]=9 
> x
array([1,9,3,4])",False,False,https://twitter.com/python_tip/status/1146276591913381889,[],[]
1145918867702734848,2019-07-02 04:55:22+00:00,38,9,"Starting to learn #python? Check @_brohrer_ ’s list of Python resources:
https://t.co/R4FCsu5Dy9",False,False,https://twitter.com/python_tip/status/1145918867702734848,"[{'url': 'https://t.co/R4FCsu5Dy9', 'expanded_url': 'https://brohrer.github.io/python_resources.html', 'display_url': 'brohrer.github.io/python_resourc…'}]",[]
1144477023038914561,2019-06-28 05:26:00+00:00,88,12,"The itertools.cycle creates an iterator that will cycle through a series of values infinitely:

>>> from itertools import cycle
>>> alternating_ones = cycle([1, -1])
>>> next(alternating_ones)
1
>>> next(alternating_ones)
-1
>>> next(alternating_ones)
1
...

#itertools",False,False,https://twitter.com/python_tip/status/1144477023038914561,[],[]
1144110860039852033,2019-06-27 05:11:00+00:00,133,40,"Recognize and manipulate faces from Python with ""the world's simplest face recognition library"" face_recognition

https://t.co/zE0Bg7KMR4 https://t.co/FrhKM0xkHR",False,False,https://twitter.com/python_tip/status/1144110860039852033,"[{'url': 'https://t.co/zE0Bg7KMR4', 'expanded_url': 'https://github.com/ageitgey/face_recognition', 'display_url': 'github.com/ageitgey/face_…'}]","[{'url': 'https://t.co/FrhKM0xkHR', 'media_url': 'http://pbs.twimg.com/media/D96_4irX4AA4xmo.png', 'display_url': 'pic.twitter.com/FrhKM0xkHR'}]"
1143754763449749505,2019-06-26 05:36:00+00:00,85,13,"#pythontip from @eocampo1986:

>>> value = 1234567890.88
>>> print(""{:,}"".format(value))
1,234,567,890.88

Do you have any #pythontip to share? Just mention @python_tip in your tweet or send it to https://t.co/mfUQ9twkWS",False,False,https://twitter.com/python_tip/status/1143754763449749505,"[{'url': 'https://t.co/mfUQ9twkWS', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]",[]
1143489172537262080,2019-06-25 12:00:38+00:00,38,3,"Learn more about iterators from @MiloslavPojman #PyconCZ presentation

https://t.co/KkPAt08vjA

and @dabeaz Pycon Pakistan talk

https://t.co/fMjmeHfmxJ https://t.co/xe8mpnT0O5",False,False,https://twitter.com/python_tip/status/1143489172537262080,"[{'url': 'https://t.co/KkPAt08vjA', 'expanded_url': 'https://pojman.cz/2019/iterators/', 'display_url': 'pojman.cz/2019/iterators/'}, {'url': 'https://t.co/fMjmeHfmxJ', 'expanded_url': 'https://www.youtube.com/watch?v=2AXuhgid7E4', 'display_url': 'youtube.com/watch?v=2AXuhg…'}]","[{'url': 'https://t.co/xe8mpnT0O5', 'media_url': 'http://pbs.twimg.com/media/D959VajWsAYKvyz.jpg', 'display_url': 'pic.twitter.com/xe8mpnT0O5'}]"
1143079911990681600,2019-06-24 08:54:23+00:00,92,23,"Six ways to debug your Python code from @stribny:

https://t.co/pp6Fbx0gib

#fstrings #PySnooper #logging #breakpoint #VSCode #stackprinter https://t.co/pz9drE45by",False,False,https://twitter.com/python_tip/status/1143079911990681600,"[{'url': 'https://t.co/pp6Fbx0gib', 'expanded_url': 'https://stribny.name/blog/2019/06/debugging-python-programs', 'display_url': 'stribny.name/blog/2019/06/d…'}]","[{'url': 'https://t.co/pz9drE45by', 'media_url': 'http://pbs.twimg.com/media/D90ImBlW4AA1_Vr.png', 'display_url': 'pic.twitter.com/pz9drE45by'}]"
1142088088153403398,2019-06-21 15:13:13+00:00,67,14,"pyjokes: jokes as a service. Command line tool or #python api. Enjoy!

https://t.co/VyCoAj4pPq
#tgif https://t.co/B7AFYx1koB",False,False,https://twitter.com/python_tip/status/1142088088153403398,"[{'url': 'https://t.co/VyCoAj4pPq', 'expanded_url': 'https://pyjok.es/', 'display_url': 'pyjok.es'}]","[{'url': 'https://t.co/B7AFYx1koB', 'media_url': 'http://pbs.twimg.com/media/D9mDCFQWwAAyWob.png', 'display_url': 'pic.twitter.com/B7AFYx1koB'}]"
1141801651440934912,2019-06-20 20:15:02+00:00,53,12,"Not really a #python_tip by @choldgraf:
If you want to get data from your Google sheet into python, just click File > Publish to the web > csv.

https://t.co/brtEU6jpa7 https://t.co/6cqtNesgaZ",False,False,https://twitter.com/python_tip/status/1141801651440934912,"[{'url': 'https://t.co/brtEU6jpa7', 'expanded_url': 'https://twitter.com/choldgraf/status/1141436794359046144', 'display_url': 'twitter.com/choldgraf/stat…'}]","[{'url': 'https://t.co/6cqtNesgaZ', 'media_url': 'http://pbs.twimg.com/ext_tw_video_thumb/1141801551578710020/pu/img/7CcIMAE0MBOHmyIw.jpg', 'display_url': 'pic.twitter.com/6cqtNesgaZ'}]"
1141456762664554498,2019-06-19 21:24:34+00:00,20,7,"#Cufflinks helps you to use #Plotly interactive plots directly with #pandas dataframes.

https://t.co/4kblVjTBpk",False,False,https://twitter.com/python_tip/status/1141456762664554498,"[{'url': 'https://t.co/4kblVjTBpk', 'expanded_url': 'https://github.com/santosjorge/cufflinks/blob/master/Cufflinks%20Tutorial%20-%20Pandas%20Like.ipynb', 'display_url': 'github.com/santosjorge/cu…'}]",[]
1141081437380198402,2019-06-18 20:33:09+00:00,52,9,"In #matplotlib, you can show more plots side by side by adding more axes to the same figure:

ax1 = fig.add_axes((left_1, bottom_1, width_1, height_1))
ax2 = fig.add_axes((left_2, bottom_2, width_2, height_2)) https://t.co/yqHUDNT2i0",False,False,https://twitter.com/python_tip/status/1141081437380198402,[],"[{'url': 'https://t.co/yqHUDNT2i0', 'media_url': 'http://pbs.twimg.com/media/D9Xvg28WsAMQnfB.png', 'display_url': 'pic.twitter.com/yqHUDNT2i0'}]"
1140686445771988992,2019-06-17 18:23:36+00:00,19,7,Try the #python hell quiz by @seznam_cz. 😈 https://t.co/tbHDRTx0RH,False,False,https://twitter.com/python_tip/status/1140686445771988992,"[{'url': 'https://t.co/tbHDRTx0RH', 'expanded_url': 'https://python-quiz.seznam.io/', 'display_url': 'python-quiz.seznam.io'}]",[]
1139412149011435521,2019-06-14 06:00:00+00:00,66,17,Use `pip search <your_keyword>` to search PyPI for all packages with <your_keyword> in the short description.,False,False,https://twitter.com/python_tip/status/1139412149011435521,[],[]
1139049762349563904,2019-06-13 06:00:00+00:00,46,9,"#pythontip from @thelinekioubeur about `nan` and `inf`:

> nan = float('NaN')  # or math.nan
> inf = float('Infinity')  # or math.inf
> neg_inf = float('-Infinity')

> neg_inf == -inf
True
> inf + inf
inf
> inf - inf
nan
> inf * 0
nan
> 1 / inf
0.0
> nan == nan
False",False,False,https://twitter.com/python_tip/status/1139049762349563904,[],[]
1138687374710284289,2019-06-12 06:00:00+00:00,43,8,"Shift-M merges selected cells in #Jupyter notebook.

This can be useful, for example, if you want to create a for-loop from code spread over several cells.",False,False,https://twitter.com/python_tip/status/1138687374710284289,[],[]
1138324985963876352,2019-06-11 06:00:00+00:00,13,1,"#pythontip from @thisPtr:

How to reverse a 1D & 2D  Numpy Array in Python?

https://t.co/XEW6FzHYmT",False,False,https://twitter.com/python_tip/status/1138324985963876352,"[{'url': 'https://t.co/XEW6FzHYmT', 'expanded_url': 'https://thispointer.com/how-to-reverse-a-1d-2d-numpy-array-using-np-flip-and-operator-in-python/', 'display_url': 'thispointer.com/how-to-reverse…'}]",[]
1137962597423013888,2019-06-10 06:00:00+00:00,320,93,"Adding __call__ method makes an object callable.

class add_n:
    def __init__(self, n):
        self.n = n
    
    def __call__(self, x):
        return x + self.n

>>> add3 = add_n(n=3)
>>> add3(9)
12

This can be really useful for decorators:
https://t.co/dsfsdN6um2 https://t.co/rxpezDXkFV",False,False,https://twitter.com/python_tip/status/1137962597423013888,"[{'url': 'https://t.co/dsfsdN6um2', 'expanded_url': 'https://gist.github.com/simecek/8a3f579037dc31d9e91c5043f91e4509', 'display_url': 'gist.github.com/simecek/8a3f57…'}]","[{'url': 'https://t.co/rxpezDXkFV', 'media_url': 'http://pbs.twimg.com/media/D8mb9TfW4AUyATM.jpg', 'display_url': 'pic.twitter.com/rxpezDXkFV'}]"
1137260736093282304,2019-06-08 07:31:03+00:00,97,33,"The %pastebin #Jupyter notebook magic uploads code to dpaste’s paste bin and returns the url

%pastebin 1-7
%pastebin -d ""my file"" https://t.co/6bNG4wpw2r https://t.co/DyrsdB6GGl",False,False,https://twitter.com/python_tip/status/1137260736093282304,"[{'url': 'https://t.co/6bNG4wpw2r', 'expanded_url': 'http://file.py', 'display_url': 'file.py'}]","[{'url': 'https://t.co/DyrsdB6GGl', 'media_url': 'http://pbs.twimg.com/media/D8hcmYgXoAAWqDz.png', 'display_url': 'pic.twitter.com/DyrsdB6GGl'}]"
1136728714736218113,2019-06-06 20:16:59+00:00,23,4,"Check out @rasbt’s collection of #PyTorch  and #TensorFlow  #Jupyter notebooks featuring various #deeplearning models, architectures, and tips. https://t.co/qDz77B8TmE",False,False,https://twitter.com/python_tip/status/1136728714736218113,"[{'url': 'https://t.co/qDz77B8TmE', 'expanded_url': 'https://github.com/rasbt/deeplearning-models', 'display_url': 'github.com/rasbt/deeplear…'}]",[]
1136366030182342656,2019-06-05 20:15:48+00:00,13,6,"#python 3.8 beta is out. https://t.co/AR6On711MF
For more information about positional only arguments, f-string = notation and more, check @raymondh’s feed.",False,False,https://twitter.com/python_tip/status/1136366030182342656,"[{'url': 'https://t.co/AR6On711MF', 'expanded_url': 'https://www.python.org/downloads/release/python-380b1/', 'display_url': 'python.org/downloads/rele…'}]",[]
1136265684713922560,2019-06-05 13:37:04+00:00,0,0,"RT @llanga: Python 3.8.0b1 is now available. Read the announcement here: https://t.co/9F8LVW7XfC

Most importantly, it's now time to test y…",False,True,https://twitter.com/python_tip/status/1136265684713922560,"[{'url': 'https://t.co/9F8LVW7XfC', 'expanded_url': 'https://discuss.python.org/t/python-3-8-0b1-available-for-testing/1815', 'display_url': 'discuss.python.org/t/python-3-8-0…'}]",[]
1135999713625411585,2019-06-04 20:00:12+00:00,49,22,"Panel: build interactive dashboards within #Jupyter notebook, deploy them on #bokeh server 
…can’t wait to try it! 🤩
https://t.co/VKkIZfyegB
https://t.co/4hrMuIGwDB
#python",False,False,https://twitter.com/python_tip/status/1135999713625411585,"[{'url': 'https://t.co/VKkIZfyegB', 'expanded_url': 'https://medium.com/@philipp.jfr/panel-announcement-2107c2b15f52', 'display_url': 'medium.com/@philipp.jfr/p…'}, {'url': 'https://t.co/4hrMuIGwDB', 'expanded_url': 'https://panel.pyviz.org/index.html', 'display_url': 'panel.pyviz.org/index.html'}]",[]
1135569280978870272,2019-06-03 15:29:49+00:00,50,9,"In #pandas dropna() method,  you can specify that if N of a row’s fields has a non-null value, you won’t drop that row:
>>> df.dropna(thresh=N) https://t.co/sQ4iPDwBlu",False,False,https://twitter.com/python_tip/status/1135569280978870272,[],"[{'url': 'https://t.co/sQ4iPDwBlu', 'media_url': 'http://pbs.twimg.com/media/D8JaJGBXYAE3Pk-.png', 'display_url': 'pic.twitter.com/sQ4iPDwBlu'}]"
1134338720356847616,2019-05-31 06:00:00+00:00,45,7,"Interactive Jupyter notebook with #ipywidgets

Simple example:
https://t.co/fb9L1dHnh5

Additional interactivity to #plotly output:
https://t.co/f0K4cEc37d https://t.co/fDwIYUWsWI",False,False,https://twitter.com/python_tip/status/1134338720356847616,"[{'url': 'https://t.co/fb9L1dHnh5', 'expanded_url': 'https://ipywidgets.readthedocs.io/en/stable/examples/Widget%20Events.html', 'display_url': 'ipywidgets.readthedocs.io/en/stable/exam…'}, {'url': 'https://t.co/f0K4cEc37d', 'expanded_url': 'https://plot.ly/python/widget-app/', 'display_url': 'plot.ly/python/widget-…'}]","[{'url': 'https://t.co/fDwIYUWsWI', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/D7hvTMjXoAAn8Qq.jpg', 'display_url': 'pic.twitter.com/fDwIYUWsWI'}]"
1134135265491136512,2019-05-30 16:31:33+00:00,0,0,"@mdank_pl Sorry for that.  Originally, I spotted this mistake in the code but forgot to correct it in the comment.",True,False,https://twitter.com/python_tip/status/1134135265491136512,[],[]
1133976331488768000,2019-05-30 06:00:00+00:00,58,5,"Count values in #pandas Series (or in a column of DataFrame) with `count_values`:

>>> s = pd.Series([""a"", ""a"", ""b"", ""a"", ""b""])
>>> s.value_counts()
a    3
b    2
dtype: int64",False,False,https://twitter.com/python_tip/status/1133976331488768000,[],[]
1133613943178420224,2019-05-29 06:00:00+00:00,121,37,"*args and **kwargs in Python:

>>> def f(*args, **kwargs):
    print(f""args: {args}, kwargs: {kwargs}"")

>>> f(1)
args: (1,), kwargs: {}
>>> f(1, 2, a=3, d=4)
args: (1, 2), kwargs: {'a': 3, 'd': 4}

https://t.co/B4zNB1re7W",False,False,https://twitter.com/python_tip/status/1133613943178420224,"[{'url': 'https://t.co/B4zNB1re7W', 'expanded_url': 'https://pythontips.com/2013/08/04/args-and-kwargs-in-python-explained/', 'display_url': 'pythontips.com/2013/08/04/arg…'}]",[]
1133187384768696321,2019-05-28 01:45:00+00:00,65,8,"#pythontip from @Busyvin:

use zip with care, it ""self destructs""

>>> x, y = [1, 2], ['one', 'two']
>>> z = zip(x,y)
>>> print(list(z))
[(1, 'one'), (2, 'two')]
>>> print(list(z))
[]

(Send us your tips by mentioning @python_tip in your tweet, or filling https://t.co/mfUQ9teK5k)",False,False,https://twitter.com/python_tip/status/1133187384768696321,"[{'url': 'https://t.co/mfUQ9teK5k', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]",[]
1132889167304597504,2019-05-27 06:00:00+00:00,87,20,"In #numpy index,  ""..."" stands for  ""as many : as needed"".

Example:
>>> a = np.array([[[1,2,3],[4,5,6]],[[7,8,9],[10,11,12]]])
>>> a.shape
(2,2,3)

* a[..., 1] is equivalent to a[:, :, 1]
* a[1, ...] is equivalent to a[1, :, :], or a[1]
* a[0, ..., 0] is equivalent to a[0, :, 0] https://t.co/FEgrlYXtLH",False,False,https://twitter.com/python_tip/status/1132889167304597504,[],"[{'url': 'https://t.co/FEgrlYXtLH', 'media_url': 'http://pbs.twimg.com/media/D7hLKXKXYAEl07p.png', 'display_url': 'pic.twitter.com/FEgrlYXtLH'}]"
1132267097277566977,2019-05-25 12:48:07+00:00,53,17,Python libraries worth learning by @treyhunner https://t.co/SHVDZzGyvK,False,False,https://twitter.com/python_tip/status/1132267097277566977,"[{'url': 'https://t.co/SHVDZzGyvK', 'expanded_url': 'https://treyhunner.com/2019/05/python-builtins-worth-learning/?fbclid=IwAR085UJPmsWnReQfPr5lb5dG4-CDDQvm_I1cK1t1zQeIL6nxy9Z4_n460q4', 'display_url': 'treyhunner.com/2019/05/python…'}]",[]
1131672706213130240,2019-05-23 21:26:13+00:00,95,11,"list_name.count() returns the number of times a given object occurs in list

>>> lst = ['a', 'a', 'b', 'b', 'c', 'b', 'e']
>>> lst.count('b')
3

#python",False,False,https://twitter.com/python_tip/status/1131672706213130240,[],[]
1131217626770882560,2019-05-22 15:17:53+00:00,107,21,"Style #pandas output in  #jupyter notebooks:
https://t.co/M7hh27SB3H
https://t.co/PgKnnxsa2i https://t.co/uZa9heXeeT",False,False,https://twitter.com/python_tip/status/1131217626770882560,"[{'url': 'https://t.co/M7hh27SB3H', 'expanded_url': 'https://pbpython.com/styling-pandas.html', 'display_url': 'pbpython.com/styling-pandas…'}, {'url': 'https://t.co/PgKnnxsa2i', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/stable/user_guide/style.html', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}]","[{'url': 'https://t.co/uZa9heXeeT', 'media_url': 'http://pbs.twimg.com/media/D7LkS1AX4AErNLS.png', 'display_url': 'pic.twitter.com/uZa9heXeeT'}]"
1130945299529248769,2019-05-21 21:15:46+00:00,32,5,"Since version 3.1.0, #matplotlib can guess the best format to use for date: 
https://t.co/J7cSxXeFVF

#python",False,False,https://twitter.com/python_tip/status/1130945299529248769,"[{'url': 'https://t.co/J7cSxXeFVF', 'expanded_url': 'https://matplotlib.org/3.1.0/gallery/ticks_and_spines/date_concise_formatter.html', 'display_url': 'matplotlib.org/3.1.0/gallery/…'}]",[]
1130591723980316673,2019-05-20 21:50:47+00:00,78,19,"Else Clauses on Loop Statements

>>> x = [1,2]
>>> while x:
...     print(""Then"")
...     x.pop()
... else:
...     print(""Else"")
... 
Then
2
Then
1
Else

#python",False,False,https://twitter.com/python_tip/status/1130591723980316673,[],[]
1129627424751099904,2019-05-18 05:59:00+00:00,34,5,"Time to binge watch #PyCon2019 videos:

https://t.co/9lwcFMG0NS",False,False,https://twitter.com/python_tip/status/1129627424751099904,"[{'url': 'https://t.co/9lwcFMG0NS', 'expanded_url': 'https://www.youtube.com/channel/UCxs2IIVXaEHHA4BtTiWZ2mQ/videos', 'display_url': 'youtube.com/channel/UCxs2I…'}]",[]
1129452958628941830,2019-05-17 18:25:44+00:00,48,8,"#pythontip from @ratneshkush:

If you want to use R in Python notebook, use rpy2 package:

import rpy2
%load_ext rpy2.ipython

# start each cell with %%R

%%R     
a <- 'Ratnesh'
b <- 'Data Science'
print(paste(a,b))

# [1] Ratnesh Data Science",False,False,https://twitter.com/python_tip/status/1129452958628941830,[],[]
1129098482286043136,2019-05-16 18:57:10+00:00,43,11,"Customizing your plots with https://t.co/QyOOZQFAhz (you can create your own):

https://t.co/d8exkjHDzR
#pyplot #matplotlib #xkcd https://t.co/vw0eaZf13Q",False,False,https://twitter.com/python_tip/status/1129098482286043136,"[{'url': 'https://t.co/QyOOZQFAhz', 'expanded_url': 'http://plt.style', 'display_url': 'plt.style'}, {'url': 'https://t.co/d8exkjHDzR', 'expanded_url': 'https://matplotlib.org/users/style_sheets.html', 'display_url': 'matplotlib.org/users/style_sh…'}]","[{'url': 'https://t.co/vw0eaZf13Q', 'media_url': 'http://pbs.twimg.com/media/D6tc3d7XYAEXrFd.png', 'display_url': 'pic.twitter.com/vw0eaZf13Q'}]"
1128540764852506625,2019-05-15 06:01:00+00:00,62,12,"Create a plot consisting of several subplots:

https://t.co/JM1wzbwDmg

#pyplot #matplotlib https://t.co/27pDWOT1OT",False,False,https://twitter.com/python_tip/status/1128540764852506625,"[{'url': 'https://t.co/JM1wzbwDmg', 'expanded_url': 'https://realpython.com/python-matplotlib-guide/#understanding-pltsubplots-notation', 'display_url': 'realpython.com/python-matplot…'}]","[{'url': 'https://t.co/27pDWOT1OT', 'media_url': 'http://pbs.twimg.com/media/D6i6x4MWsAEJRFe.png', 'display_url': 'pic.twitter.com/27pDWOT1OT'}]"
1128193235732639744,2019-05-14 07:00:02+00:00,0,0,"RT @starenka: @python_tip If that is not enough, check https://t.co/1ONchHc4ya",False,True,https://twitter.com/python_tip/status/1128193235732639744,"[{'url': 'https://t.co/1ONchHc4ya', 'expanded_url': 'https://github.com/erikrose/more-itertools', 'display_url': 'github.com/erikrose/more-…'}]",[]
1128181648833556480,2019-05-14 06:14:00+00:00,38,9,"To get more from `itertools` library, see its 'recipes' section, 

https://t.co/L5guQ06MT9

and `repeatfunc` as an example.
 
https://t.co/2JRyh1yNsj",False,False,https://twitter.com/python_tip/status/1128181648833556480,"[{'url': 'https://t.co/L5guQ06MT9', 'expanded_url': 'https://docs.python.org/3/library/itertools.html#itertools-recipes', 'display_url': 'docs.python.org/3/library/iter…'}, {'url': 'https://t.co/2JRyh1yNsj', 'expanded_url': 'https://twitter.com/raymondh/status/1122968737546555392', 'display_url': 'twitter.com/raymondh/statu…'}]",[]
1127840400092356608,2019-05-13 07:38:00+00:00,45,9,"You can select elements of 2d #numpy array by lists of row and column indices

>>> x = np.arange(9).reshape((3, 3))
>>> x
array([[0, 1, 2],
       [3, 4, 5],
       [6, 7, 8]])

>>> x[[0,2,2], [1,0,2]]
array([1, 6, 8])

For details: https://t.co/LKY2rj9l8l",False,False,https://twitter.com/python_tip/status/1127840400092356608,"[{'url': 'https://t.co/LKY2rj9l8l', 'expanded_url': 'https://docs.scipy.org/doc/numpy/user/basics.indexing.html#indexing-multi-dimensional-arrays', 'display_url': 'docs.scipy.org/doc/numpy/user…'}]",[]
1126967452859019264,2019-05-10 21:49:13+00:00,127,27,"Slice assignment:
>>> a = list(range(5))
>>> a
[0, 1, 2, 3, 4]
>>> a[1:-1] = []
>>> a
[0, 4]

#python",False,False,https://twitter.com/python_tip/status/1126967452859019264,[],[]
1126588889060319234,2019-05-09 20:44:56+00:00,106,21,"Print list as separate elements in #python3  
 >>> L = ['print', 'is', 'fun'] 
 >>> print(*L)  
print is fun  
>>> print(*L, sep=',')  
print,is,fun",False,False,https://twitter.com/python_tip/status/1126588889060319234,[],[]
1126235819109429248,2019-05-08 21:21:58+00:00,110,21,"Sort list of strings ignoring the case:
>>> lst = ['bob', 'Mark', 'david', 'Peter']
>>> sorted(lst, key=str.lower)
['bob', 'david', 'Mark', 'Peter']

Compare:
>>> sorted(lst)
['Mark', 'Peter', 'bob', 'david']

#python",False,False,https://twitter.com/python_tip/status/1126235819109429248,[],[]
1125862732002136078,2019-05-07 20:39:27+00:00,39,10,">>> import numpy as np
>>> def energy_send(x):
...     np.array([float(x)])
... 
>>> def energy_receive():
...     return np.empty((), dtype=np.float).tolist()
... 
>>> energy_send(123.456)
>>> energy_receive()
123.456

😱 😱 😱 
Explanation:  https://t.co/sbTIAqbruj",False,False,https://twitter.com/python_tip/status/1125862732002136078,"[{'url': 'https://t.co/sbTIAqbruj', 'expanded_url': 'https://github.com/satwikkansal/wtfpython#-teleportation-', 'display_url': 'github.com/satwikkansal/w…'}]",[]
1125499437105786881,2019-05-06 20:35:51+00:00,56,12,"If you want to make sure your #jupyter notebook is saved after Run All, add this into the last cell:

%%javascript
https://t.co/XwtB0fCdaT_notebook()",False,False,https://twitter.com/python_tip/status/1125499437105786881,"[{'url': 'https://t.co/XwtB0fCdaT', 'expanded_url': 'http://IPython.notebook.save', 'display_url': 'IPython.notebook.save'}]",[]
1124293619618320389,2019-05-03 12:44:21+00:00,0,0,"RT @__mharrison__: @python_tip I would add a new column with the absolute value, sort by it, and then remove it (if needed). 

(df
 .assign…",False,True,https://twitter.com/python_tip/status/1124293619618320389,[],[]
1124235310391529472,2019-05-03 08:52:39+00:00,34,11,"Humble Book Bundle: Python by O'Reilly, 10 days left 

https://t.co/Q8vFFQg8C0 https://t.co/6TfycSqQOd",False,False,https://twitter.com/python_tip/status/1124235310391529472,"[{'url': 'https://t.co/Q8vFFQg8C0', 'expanded_url': 'https://www.humblebundle.com/books/python-oreilly-books', 'display_url': 'humblebundle.com/books/python-o…'}]","[{'url': 'https://t.co/6TfycSqQOd', 'media_url': 'http://pbs.twimg.com/media/D5oV5gBWwAAOXLh.png', 'display_url': 'pic.twitter.com/6TfycSqQOd'}]"
1124191858882686977,2019-05-03 06:00:00+00:00,48,8,"Sort DataFrame by absolute value of one column, descending, without changing the data 

df.iloc[df['effect_size'].abs().argsort()[::-1]]

(If you know better, please, let me know) #pandas",False,False,https://twitter.com/python_tip/status/1124191858882686977,[],[]
1124064378725306368,2019-05-02 21:33:26+00:00,0,0,RT @thelinekioubeur: @messa_cz @starenka @python_tip https://t.co/iH1klQqa5q,False,True,https://twitter.com/python_tip/status/1124064378725306368,[],"[{'url': 'https://t.co/iH1klQqa5q', 'media_url': 'http://pbs.twimg.com/media/D5Yh30mXoAA7rSL.png', 'display_url': 'pic.twitter.com/iH1klQqa5q'}]"
1123829473512759296,2019-05-02 06:00:00+00:00,80,21,"Check out `blist`, a drop-in replacement for the Python list, that provides a better performance when modifying large lists:

https://t.co/A2KH3nCZnY https://t.co/ci27jOsjPQ",False,False,https://twitter.com/python_tip/status/1123829473512759296,"[{'url': 'https://t.co/A2KH3nCZnY', 'expanded_url': 'https://pypi.org/project/blist/', 'display_url': 'pypi.org/project/blist/'}]","[{'url': 'https://t.co/ci27jOsjPQ', 'media_url': 'http://pbs.twimg.com/media/D5gkacNXoAAq6ar.jpg', 'display_url': 'pic.twitter.com/ci27jOsjPQ'}]"
1123464314579329024,2019-05-01 05:49:00+00:00,157,40,"When developing your script, try

python -i your_script.py

Python will run your script but then stays in the interpreter, getting you a chance to inspect if anything goes wrong.

https://t.co/uCgC4yg5K8",False,False,https://twitter.com/python_tip/status/1123464314579329024,"[{'url': 'https://t.co/uCgC4yg5K8', 'expanded_url': 'http://www.bnikolic.co.uk/blog/python-running-cline.html', 'display_url': 'bnikolic.co.uk/blog/python-ru…'}]",[]
1123137492004278272,2019-04-30 08:10:19+00:00,0,0,RT @starenka: @python_tip Or use it without arg like dct.get('notthere') to get None instead of raising KeyError,False,True,https://twitter.com/python_tip/status/1123137492004278272,[],[]
1123104697248833537,2019-04-30 06:00:00+00:00,52,9,"Use `dict.get(key[, default])` to assign a default value

>>> dictionary = {""message"": ""Hello, World!""}
>>> dictionary.get(""message"", """")
 
https://t.co/Z1KAfIXEvC https://t.co/nfFa0FsoJ0",False,False,https://twitter.com/python_tip/status/1123104697248833537,"[{'url': 'https://t.co/Z1KAfIXEvC', 'expanded_url': 'https://docs.quantifiedcode.com/python-anti-patterns/correctness/not_using_get_to_return_a_default_value_from_a_dictionary.html', 'display_url': 'docs.quantifiedcode.com/python-anti-pa…'}]","[{'url': 'https://t.co/nfFa0FsoJ0', 'media_url': 'http://pbs.twimg.com/media/D5WLDHVXoAE5P-r.png', 'display_url': 'pic.twitter.com/nfFa0FsoJ0'}]"
1122952894322495488,2019-04-29 19:56:48+00:00,8,3,"Is there any list X such that all(X) is True but any(X) is False?

(for the answer, see the original thread) https://t.co/TnMWh91NF6",False,False,https://twitter.com/python_tip/status/1122952894322495488,"[{'url': 'https://t.co/TnMWh91NF6', 'expanded_url': 'https://twitter.com/messa_cz/status/1121526082656772096', 'display_url': 'twitter.com/messa_cz/statu…'}]",[]
1121722631231815683,2019-04-26 10:28:10+00:00,251,40,">>> df.isnull().mean()*100

Find percentage of missing values in each column of a #pandas dataframe. https://t.co/08RTREuusi",False,False,https://twitter.com/python_tip/status/1121722631231815683,[],"[{'url': 'https://t.co/08RTREuusi', 'media_url': 'http://pbs.twimg.com/media/D5EouFWWAAAES6G.png', 'display_url': 'pic.twitter.com/08RTREuusi'}]"
1121499642011758593,2019-04-25 19:42:05+00:00,124,28,"use all() to check if all elements match a condition:

>>> items = [[1, 2, 0], [1, 2, 0], [1, 2, 0]]
>>> all(item[2] == 0 for item in items)
True

#python",False,False,https://twitter.com/python_tip/status/1121499642011758593,[],[]
1121020021357076482,2019-04-24 11:56:15+00:00,93,24,"Compare two dictionaries:

>>> a = {'x' : 0, 'y': 1, 'z' : 3}
>>> b = {'x' : 0, 'y': 1, 'z' : 2, 'q' : 4}
>>> a.items() & b.items()
{('y', 1), ('x', 0)}
>>> a.items() ^ b.items()
{('z', 3), ('q', 4), ('z', 2)}
>>> a.items() - b.items()
{('z', 3)}

https://t.co/ZlqurKbIxr

#python",False,False,https://twitter.com/python_tip/status/1121020021357076482,"[{'url': 'https://t.co/ZlqurKbIxr', 'expanded_url': 'https://chrisalbon.com/python/basics/compare_two_dictionaries/', 'display_url': 'chrisalbon.com/python/basics/…'}]",[]
1120793252679036931,2019-04-23 20:55:09+00:00,34,6,"__str__ vs __repr__:
https://t.co/NV2TCrOmR0

(Notice that objects like lists and dicts use __repr__ to represent the objects they contain.)

#python",False,False,https://twitter.com/python_tip/status/1120793252679036931,"[{'url': 'https://t.co/NV2TCrOmR0', 'expanded_url': 'https://gist.github.com/karlafej/e265d4ce9b4e7e444ad5641f6f439322', 'display_url': 'gist.github.com/karlafej/e265d…'}]",[]
1120301900509908994,2019-04-22 12:22:41+00:00,68,9,"How to print #helloworld in #python:

>>> import __hello__
Hello world!

#EasterEgg",False,False,https://twitter.com/python_tip/status/1120301900509908994,[],[]
1118998136922439683,2019-04-18 22:02:00+00:00,73,23,"Beginner’s guide to parallel programming: Threads and processes in Python

https://t.co/dB264EtxJz

#GIL #Python",False,False,https://twitter.com/python_tip/status/1118998136922439683,"[{'url': 'https://t.co/dB264EtxJz', 'expanded_url': 'https://medium.com/@bfortuner/python-multithreading-vs-multiprocessing-73072ce5600b', 'display_url': 'medium.com/@bfortuner/pyt…'}]",[]
1118636503238754304,2019-04-17 22:05:00+00:00,63,18,"How to get a column index from a column name? 

Thanks @Smit65176116 for this tip. #pandas #DataFrame https://t.co/2u7TwdKidk",False,False,https://twitter.com/python_tip/status/1118636503238754304,[],"[{'url': 'https://t.co/2u7TwdKidk', 'media_url': 'http://pbs.twimg.com/media/D4EN5YoW0AAKap8.png', 'display_url': 'pic.twitter.com/2u7TwdKidk'}]"
1118273360301936641,2019-04-16 22:02:00+00:00,46,15,"Python3 uses “banker's rounding” 

>>> round(1.5)
2
>>> round(2.5)
2

While Python2 sticked to “rounding half up”  

>>> round(1.5)
2.0
>>> round(2.5)
3.0

More details at https://t.co/FJhlFoK1Ih 

#round https://t.co/R7YsdzZHSQ",False,False,https://twitter.com/python_tip/status/1118273360301936641,"[{'url': 'https://t.co/FJhlFoK1Ih', 'expanded_url': 'https://stackoverflow.com/questions/10825926/python-3-x-rounding-behavior', 'display_url': 'stackoverflow.com/questions/1082…'}]","[{'url': 'https://t.co/R7YsdzZHSQ', 'media_url': 'http://pbs.twimg.com/media/D4QdZaCWAAAYSy3.png', 'display_url': 'pic.twitter.com/R7YsdzZHSQ'}]"
1118064535309639680,2019-04-16 08:12:12+00:00,0,0,"@thelinekioubeur Good point, thanks for it. Also, Python 3.5 introduced math.nan.",True,False,https://twitter.com/python_tip/status/1118064535309639680,[],[]
1117916509224022018,2019-04-15 22:24:00+00:00,44,14,"Python knows how to compare lists & dicts

>>> [{'a':1, 'b':2}, 4] == [{'b':2, 'a':1}, 4+1-1]
True

However, it gets tricky with NaNs because 
>>> from numpy import NaN
>>> NaN == NaN
False
(see the attached figure for more examples)

For DataFrame, use 
https://t.co/AJo90l3KVI https://t.co/f4Hm7hvk90",False,False,https://twitter.com/python_tip/status/1117916509224022018,"[{'url': 'https://t.co/AJo90l3KVI', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.equals.html', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}]","[{'url': 'https://t.co/f4Hm7hvk90', 'media_url': 'http://pbs.twimg.com/media/D4ELf6jX4AApDi_.png', 'display_url': 'pic.twitter.com/f4Hm7hvk90'}]"
1117863899414630400,2019-04-15 18:54:57+00:00,0,0,"@b33k33p I have never done that. Try hashlib:

https://t.co/BdwEQ4GsWG",True,False,https://twitter.com/python_tip/status/1117863899414630400,"[{'url': 'https://t.co/BdwEQ4GsWG', 'expanded_url': 'https://www.geeksforgeeks.org/md5-hash-python/', 'display_url': 'geeksforgeeks.org/md5-hash-pytho…'}]",[]
1117548333323694080,2019-04-14 22:01:00+00:00,47,5,"If you do what Data Scientists actually do, you might find this JSON tutorial handy:

https://t.co/qT5mqrzXEL

#json https://t.co/gxzoYYXnhh",False,False,https://twitter.com/python_tip/status/1117548333323694080,"[{'url': 'https://t.co/qT5mqrzXEL', 'expanded_url': 'https://stackabuse.com/reading-and-writing-json-to-a-file-in-python/', 'display_url': 'stackabuse.com/reading-and-wr…'}, {'url': 'https://t.co/gxzoYYXnhh', 'expanded_url': 'https://twitter.com/vboykis/status/1116862862755016704', 'display_url': 'twitter.com/vboykis/status…'}]",[]
1116793992430018560,2019-04-12 20:03:31+00:00,50,7,"If you want to make sure your #jupyter notebook is saved after Run All, add this into the last cell:

%%javascript
https://t.co/XwtB0fkBMj_notebook()",False,False,https://twitter.com/python_tip/status/1116793992430018560,"[{'url': 'https://t.co/XwtB0fkBMj', 'expanded_url': 'http://IPython.notebook.save', 'display_url': 'IPython.notebook.save'}]",[]
1116283605368606721,2019-04-11 10:15:25+00:00,35,8,"When working with integer series, #pandas IntegerArray and nullable integer dtypes may save you some memory.

https://t.co/JazkOcQOWB https://t.co/n5GY5on9k4",False,False,https://twitter.com/python_tip/status/1116283605368606721,"[{'url': 'https://t.co/JazkOcQOWB', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/version/0.24/reference/api/pandas.arrays.IntegerArray.html', 'display_url': 'pandas.pydata.org/pandas-docs/ve…'}]","[{'url': 'https://t.co/n5GY5on9k4', 'media_url': 'http://pbs.twimg.com/media/D33VlSwX4AAVpCN.png', 'display_url': 'pic.twitter.com/n5GY5on9k4'}]"
1115947392283574273,2019-04-10 11:59:26+00:00,24,6,"Check if a time exists in a given #timezone with https://t.co/40U4hlHcKJ.datetime_exists() 

import datetime
from https://t.co/xtOrEH36jr import datetime_exists, gettz
tz = gettz('Europe/Berlin')
datetime_exists(datetime.datetime(2019, 3, 31, 2, 22, tzinfo=tz))

#python https://t.co/H3ZohE4npH",False,False,https://twitter.com/python_tip/status/1115947392283574273,"[{'url': 'https://t.co/40U4hlHcKJ', 'expanded_url': 'http://datetutil.tz', 'display_url': 'datetutil.tz'}, {'url': 'https://t.co/xtOrEH36jr', 'expanded_url': 'http://dateutil.tz', 'display_url': 'dateutil.tz'}]","[{'url': 'https://t.co/H3ZohE4npH', 'media_url': 'http://pbs.twimg.com/media/D3yj4ixX4AE6rmH.png', 'display_url': 'pic.twitter.com/H3ZohE4npH'}]"
1115630193702395904,2019-04-09 14:59:00+00:00,90,17,"Generator expressions can be chained together into pipelines:
>>> a  = range(9)
>>> b = (i + i for i in a)
>>> c = (i * i for i in b)
>>> d = (i - 5 for i in c)
>>> list(d)
[-5, -1, 11, 31, 59, 95, 139, 191, 251]

For more examples see @dabeaz's  tutorial:
https://t.co/4iS9JdwQUu",False,False,https://twitter.com/python_tip/status/1115630193702395904,"[{'url': 'https://t.co/4iS9JdwQUu', 'expanded_url': 'https://github.com/dabeaz/generators', 'display_url': 'github.com/dabeaz/generat…'}]",[]
1115367782877679617,2019-04-08 21:36:16+00:00,12,4,"Meet us at #PyConCZ! Conference hall at former coal mine site, three days of #Python, #PyData track and @karlafej as one of the keynote speakers. June 14–16, Ostrava, Czechia. https://t.co/pMlSGWxPtc",False,False,https://twitter.com/python_tip/status/1115367782877679617,"[{'url': 'https://t.co/pMlSGWxPtc', 'expanded_url': 'https://cz.pycon.org/2019/#keynoters', 'display_url': 'cz.pycon.org/2019/#keynoters'}]",[]
1113924462016061440,2019-04-04 22:01:02+00:00,79,16,"The line

if __name__ == ""__main__ ""

is one of those things you often see in Python scripts. What is it and how to use it? 

https://t.co/DardXNz15C https://t.co/oV2cpN6rbu",False,False,https://twitter.com/python_tip/status/1113924462016061440,"[{'url': 'https://t.co/DardXNz15C', 'expanded_url': 'https://towardsdatascience.com/learn-enough-python-to-be-useful-part-2-34f0e9e3fc9d', 'display_url': 'towardsdatascience.com/learn-enough-p…'}]","[{'url': 'https://t.co/oV2cpN6rbu', 'media_url': 'http://pbs.twimg.com/media/D25vfTYX4AAQIjX.png', 'display_url': 'pic.twitter.com/oV2cpN6rbu'}]"
1113562066747523077,2019-04-03 22:01:00+00:00,48,10,"#pandas's `eval` and `query` can cut your running time:

https://t.co/NiddUNgCDq

Thanks @Jk749 for pointing us to @ben_j_lindsay's tweet https://t.co/eMGEdXkHYI https://t.co/zpWBdxMOcW",False,False,https://twitter.com/python_tip/status/1113562066747523077,"[{'url': 'https://t.co/NiddUNgCDq', 'expanded_url': 'https://jakevdp.github.io/PythonDataScienceHandbook/03.12-performance-eval-and-query.html', 'display_url': 'jakevdp.github.io/PythonDataScie…'}, {'url': 'https://t.co/eMGEdXkHYI', 'expanded_url': 'https://twitter.com/ben_j_lindsay/status/1108427124518645762', 'display_url': 'twitter.com/ben_j_lindsay/…'}]","[{'url': 'https://t.co/zpWBdxMOcW', 'media_url': 'http://pbs.twimg.com/media/D26R2qcW0AAhcsM.png', 'display_url': 'pic.twitter.com/zpWBdxMOcW'}]"
1113200182114574340,2019-04-02 22:03:00+00:00,44,9,"#S3Fs library allows you to simply locate and read/write a file in Amazon S3 bucket:

https://t.co/xDD0U7lSDT https://t.co/ftcmXxtcuX",False,False,https://twitter.com/python_tip/status/1113200182114574340,"[{'url': 'https://t.co/xDD0U7lSDT', 'expanded_url': 'https://s3fs.readthedocs.io/en/latest/', 'display_url': 's3fs.readthedocs.io/en/latest/'}]","[{'url': 'https://t.co/ftcmXxtcuX', 'media_url': 'http://pbs.twimg.com/media/D25pRMTW0AAJ26b.png', 'display_url': 'pic.twitter.com/ftcmXxtcuX'}]"
1113197812534136832,2019-04-02 21:53:35+00:00,1,1,"@mandir_tr @Pythonic_ @dbader_org has great summary at https://t.co/OnLo0zvflc

Also see SO discussion ""Why are Python's 'private' methods not actually private?""
https://t.co/Um2Og699Rn

I still call __ methods private but this  might sound misleading to users coming to Python from e.g. Java.",True,False,https://twitter.com/python_tip/status/1113197812534136832,"[{'url': 'https://t.co/OnLo0zvflc', 'expanded_url': 'https://dbader.org/blog/meaning-of-underscores-in-python', 'display_url': 'dbader.org/blog/meaning-o…'}, {'url': 'https://t.co/Um2Og699Rn', 'expanded_url': 'https://stackoverflow.com/questions/70528/why-are-pythons-private-methods-not-actually-private', 'display_url': 'stackoverflow.com/questions/7052…'}]",[]
1112837291360256001,2019-04-01 22:01:00+00:00,55,11,"Dunder __ (double underscore) prefix makes a method private

Example:
https://t.co/CdsziSnTIS https://t.co/lgV87oHMn5",False,False,https://twitter.com/python_tip/status/1112837291360256001,"[{'url': 'https://t.co/CdsziSnTIS', 'expanded_url': 'https://gist.github.com/simecek/d5ae02284c4268d30e81ccb5dd41e5b7', 'display_url': 'gist.github.com/simecek/d5ae02…'}]","[{'url': 'https://t.co/lgV87oHMn5', 'media_url': 'http://pbs.twimg.com/media/D3FzVZ2W0AIkAaK.png', 'display_url': 'pic.twitter.com/lgV87oHMn5'}]"
1112780987124080640,2019-04-01 18:17:16+00:00,0,0,@Jan30294383 @Dementophobia Thanks for the clarification.,True,False,https://twitter.com/python_tip/status/1112780987124080640,[],[]
1112717034733883392,2019-04-01 14:03:09+00:00,3,1,"@Dementophobia The reason is that NaN's type is float

>>> import numpy as np
>>> type(np.NaN)
<class 'float'>

More info: https://t.co/NOQO7DtbN6

This might be surprising for people coming to #Python from languages with multitype NaN like #rstats. 
https://t.co/EaYl4kQ7E1",True,False,https://twitter.com/python_tip/status/1112717034733883392,"[{'url': 'https://t.co/NOQO7DtbN6', 'expanded_url': 'https://stackoverflow.com/questions/48906410/why-does-the-data-type-of-np-nan-belong-to-numpy-float64', 'display_url': 'stackoverflow.com/questions/4890…'}, {'url': 'https://t.co/EaYl4kQ7E1', 'expanded_url': 'https://stackoverflow.com/a/46828378', 'display_url': 'stackoverflow.com/a/46828378'}]",[]
1112715218877104128,2019-04-01 13:55:56+00:00,0,0,"RT @Dementophobia: @python_tip I honestly thought that was an #aprilfool attempt, but couldn't resist trying it myself. Seriously?! https:/…",False,True,https://twitter.com/python_tip/status/1112715218877104128,[],[]
1112474902815137792,2019-03-31 22:01:00+00:00,51,8,"Converting #numpy array's type to integer. How bad could it be?

>>> np.array([1.0, np.NaN, 3.0]).astype(int)
array([1, -9223372036854775808, 3]) https://t.co/5TgFgwNM5m",False,False,https://twitter.com/python_tip/status/1112474902815137792,[],"[{'url': 'https://t.co/5TgFgwNM5m', 'media_url': 'http://pbs.twimg.com/ext_tw_video_thumb/1111933669281878016/pu/img/6EdKwE6JxSE2l5j1.jpg', 'display_url': 'pic.twitter.com/5TgFgwNM5m'}]"
1111677821615816706,2019-03-29 17:13:41+00:00,45,9,"Use literal_eval from ast module to convert string list to list 
example 
str_list = ""[1, 2, 3]"" # type(str_list ) = str
import ast
lst = ast.literal_eval(str_list) # type(lst) = list

#pythontip by @mgalalen. 
Send us yours! https://t.co/NXevFNKLXH",False,False,https://twitter.com/python_tip/status/1111677821615816706,"[{'url': 'https://t.co/NXevFNKLXH', 'expanded_url': 'https://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]",[]
1111349676106833920,2019-03-28 19:29:45+00:00,128,40,"Use pandas.ExcelFile() to read complex #Excel files.

xlfile = pd.ExcelFile(filename)
df = xlfile.parse(xlfile.sheet_names[1])

#pandas #python https://t.co/8hg718ULmW",False,False,https://twitter.com/python_tip/status/1111349676106833920,[],"[{'url': 'https://t.co/8hg718ULmW', 'media_url': 'http://pbs.twimg.com/media/D2xOo1pXQAgwLoB.png', 'display_url': 'pic.twitter.com/8hg718ULmW'}]"
1111014439963279360,2019-03-27 21:17:38+00:00,24,9,"Count rows in DataFrame that satisfy a certain condition

https://t.co/0doKAO5Z5n

Thanks @thisPtr for this #pythontip. Do you have any? Send it to https://t.co/mfUQ9teK5k or just mention @python_tip in your tweet.",False,False,https://twitter.com/python_tip/status/1111014439963279360,"[{'url': 'https://t.co/0doKAO5Z5n', 'expanded_url': 'https://thispointer.com/pandas-count-rows-in-a-dataframe-all-or-those-only-that-satisfy-a-condition/', 'display_url': 'thispointer.com/pandas-count-r…'}, {'url': 'https://t.co/mfUQ9teK5k', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]",[]
1110602034296823808,2019-03-26 17:58:53+00:00,0,0,"RT @holdenweb: But

    dict(zip(keys, values))

works perfectly well. https://t.co/Hn9PhwZfeE",False,True,https://twitter.com/python_tip/status/1110602034296823808,"[{'url': 'https://t.co/Hn9PhwZfeE', 'expanded_url': 'https://twitter.com/python_tip/status/1110598681517015041', 'display_url': 'twitter.com/python_tip/sta…'}]",[]
1110598681517015041,2019-03-26 17:45:34+00:00,112,27,"Create a dictionary with list comprehension:
>>> keys = ['a',  'b',  'c']
>>> values = [1,  2,  3]
>>> dict((key, val) for key, val in zip(keys, values))
{'a': 1, 'b': 2, 'c': 3}

#python",False,False,https://twitter.com/python_tip/status/1110598681517015041,[],[]
1110280631802576902,2019-03-25 20:41:45+00:00,114,26,"Combine columns of #pandas #dataframe using groupby and a dictionary mapping

>>> df.groupby(mapping, axis=1).sum() https://t.co/kvfdKAvBo8",False,False,https://twitter.com/python_tip/status/1110280631802576902,[],"[{'url': 'https://t.co/kvfdKAvBo8', 'media_url': 'http://pbs.twimg.com/media/D2iCWSsWkAkASmK.png', 'display_url': 'pic.twitter.com/kvfdKAvBo8'}]"
1108867312206123009,2019-03-21 23:05:43+00:00,30,8,"Create a project from a template, not by copying and pasting parts from old projects 

https://t.co/vAO2OYzxDY
#cookiecutter

https://t.co/0kyVN2CgTB",False,False,https://twitter.com/python_tip/status/1108867312206123009,"[{'url': 'https://t.co/vAO2OYzxDY', 'expanded_url': 'https://cookiecutter.readthedocs.io/en/latest/first_steps.html', 'display_url': 'cookiecutter.readthedocs.io/en/latest/firs…'}, {'url': 'https://t.co/0kyVN2CgTB', 'expanded_url': 'https://twitter.com/tdhopper/status/1099010267130810374', 'display_url': 'twitter.com/tdhopper/statu…'}]",[]
1108503736379473921,2019-03-20 23:01:00+00:00,34,14,"How to copy a Dictionary in Python? Shallow Copy vs Deep Copy of Dictionaries.

https://t.co/qFVUxMlJJl

Thanks @thisPtr for this #pythontip. Do you have any? Send it to https://t.co/mfUQ9teK5k or just mention @python_tip in your tweet.",False,False,https://twitter.com/python_tip/status/1108503736379473921,"[{'url': 'https://t.co/qFVUxMlJJl', 'expanded_url': 'https://thispointer.com/python-how-to-copy-a-dictionary-shallow-copy-vs-deep-copy/', 'display_url': 'thispointer.com/python-how-to-…'}, {'url': 'https://t.co/mfUQ9teK5k', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]",[]
1108141347951665152,2019-03-19 23:01:00+00:00,116,27,"Sometimes, you need to save your data to a temporary file because a library or service requires a path as an input. You can use

tempfile.NamedTemporaryFile()

Examples:
https://t.co/vghW8b84u5
#pythontip #tempfile https://t.co/zvIBhNLEd3",False,False,https://twitter.com/python_tip/status/1108141347951665152,"[{'url': 'https://t.co/vghW8b84u5', 'expanded_url': 'https://stackabuse.com/the-python-tempfile-module/', 'display_url': 'stackabuse.com/the-python-tem…'}]","[{'url': 'https://t.co/zvIBhNLEd3', 'media_url': 'http://pbs.twimg.com/media/D13IqKyXgAAq6oc.png', 'display_url': 'pic.twitter.com/zvIBhNLEd3'}]"
1107917164542074880,2019-03-19 08:10:10+00:00,64,19,"Are you coming to Python from Java and miss abstract classes and interfaces?

Check Python built-in #abc library
https://t.co/9jeic1BofA

And if you want more informative error messages and checking at class creation time, try #interface library.
https://t.co/YrOuDgHRaX https://t.co/o7uZ4gWBQg",False,False,https://twitter.com/python_tip/status/1107917164542074880,"[{'url': 'https://t.co/9jeic1BofA', 'expanded_url': 'http://www.thedigitalcatonline.com/blog/2014/09/04/python-3-oop-part-6-abstract-base-classes/', 'display_url': 'thedigitalcatonline.com/blog/2014/09/0…'}, {'url': 'https://t.co/YrOuDgHRaX', 'expanded_url': 'https://interface.readthedocs.io/en/latest/abc.html', 'display_url': 'interface.readthedocs.io/en/latest/abc.…'}]","[{'url': 'https://t.co/o7uZ4gWBQg', 'media_url': 'http://pbs.twimg.com/media/D2AbHcHXQAEneV4.png', 'display_url': 'pic.twitter.com/o7uZ4gWBQg'}]"
1107416572044271617,2019-03-17 23:01:00+00:00,46,16,"What characters are accepted in Python3 variable names?

>>> 䭍 = 3
>>> print(䭍)
3

The complete list is at https://t.co/gAmZud7GBE
No emoji 😭, sorry.  More discussion in PEP3131
https://t.co/iGi8t7Dy71",False,False,https://twitter.com/python_tip/status/1107416572044271617,"[{'url': 'https://t.co/gAmZud7GBE', 'expanded_url': 'https://www.dcl.hpi.uni-potsdam.de/home/loewis/table-3131.html', 'display_url': 'dcl.hpi.uni-potsdam.de/home/loewis/ta…'}, {'url': 'https://t.co/iGi8t7Dy71', 'expanded_url': 'https://www.python.org/dev/peps/pep-3131/', 'display_url': 'python.org/dev/peps/pep-3…'}]",[]
1106647588248473600,2019-03-15 20:05:20+00:00,46,14,"ReviewNB: visual diff & comments for #Jupyter notebooks on #github 

https://t.co/eo2FV5HtGR

https://t.co/RCddW9U3DX",False,False,https://twitter.com/python_tip/status/1106647588248473600,"[{'url': 'https://t.co/eo2FV5HtGR', 'expanded_url': 'https://www.reviewnb.com/', 'display_url': 'reviewnb.com'}, {'url': 'https://t.co/RCddW9U3DX', 'expanded_url': 'https://blog.amirathi.com/2018/10/24/introducing-reviewnb-jupyter-notebook-visual-diff/', 'display_url': 'blog.amirathi.com/2018/10/24/int…'}]",[]
1106228439131009024,2019-03-14 16:19:47+00:00,65,13,"Select a subset of #pandas #dataframe with numerical columns:

https://t.co/aUIGkWKOMU_dtypes(include=['float', 'int'])

https://t.co/Eobmsd6STZ https://t.co/1EsBDkMs3u",False,False,https://twitter.com/python_tip/status/1106228439131009024,"[{'url': 'https://t.co/aUIGkWKOMU', 'expanded_url': 'http://df.select', 'display_url': 'df.select'}, {'url': 'https://t.co/Eobmsd6STZ', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.select_dtypes.html', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}]","[{'url': 'https://t.co/1EsBDkMs3u', 'media_url': 'http://pbs.twimg.com/media/D1oc2NZX0AAy3CX.png', 'display_url': 'pic.twitter.com/1EsBDkMs3u'}]"
1105846452629184513,2019-03-13 15:01:54+00:00,46,13,"Wildcard matching in #jupyter and #iPython marked by using a ? at the end:

sns.*plot?

https://t.co/hDRL1sAkbu https://t.co/QS66W18kQ5",False,False,https://twitter.com/python_tip/status/1105846452629184513,"[{'url': 'https://t.co/hDRL1sAkbu', 'expanded_url': 'https://twitter.com/jakevdp/status/1105657299639533568', 'display_url': 'twitter.com/jakevdp/status…'}]","[{'url': 'https://t.co/QS66W18kQ5', 'media_url': 'http://pbs.twimg.com/media/D1jBMRGXcAEKmWD.png', 'display_url': 'pic.twitter.com/QS66W18kQ5'}]"
1105476390617518080,2019-03-12 14:31:24+00:00,0,0,"RT @simecek: @python_tip Or use #humanize library:

>>> import humanize
>>> humanize.intcomma(12345)
'12,345'

https://t.co/6jK0GVYPxF http…",False,True,https://twitter.com/python_tip/status/1105476390617518080,"[{'url': 'https://t.co/6jK0GVYPxF', 'expanded_url': 'https://github.com/jmoiron/humanize', 'display_url': 'github.com/jmoiron/humani…'}]",[]
1105473155139846144,2019-03-12 14:18:33+00:00,141,40,"Output large numbers in a human friendly way:

>>> n = 123123123
>>> format(n, "","") 
'123,123,123'

#python",False,False,https://twitter.com/python_tip/status/1105473155139846144,[],[]
1105087640481787905,2019-03-11 12:46:39+00:00,56,9,"If you want to sort #pandas #dataframe based on multiple columns, use  a list in the argument for sort_values()

df.sort_values(['sex', 'age'])

https://t.co/6unFS6yLYS

#python https://t.co/G9ijTgOXrm",False,False,https://twitter.com/python_tip/status/1105087640481787905,"[{'url': 'https://t.co/6unFS6yLYS', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.sort_values.html', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}]","[{'url': 'https://t.co/G9ijTgOXrm', 'media_url': 'http://pbs.twimg.com/media/D1YPVJ9WsAEc3Ie.png', 'display_url': 'pic.twitter.com/G9ijTgOXrm'}]"
1103792192718548992,2019-03-07 22:59:00+00:00,52,15,"With %tensorboard magic, you can now run TensorBoard directly in Jupyter Notebook or Colaboratory:

%tensorboard --logdir logs

https://t.co/jY8MCIi0IL

#tensorflow #tensorboard https://t.co/vgyg4mnUIS",False,False,https://twitter.com/python_tip/status/1103792192718548992,"[{'url': 'https://t.co/jY8MCIi0IL', 'expanded_url': 'https://github.com/tensorflow/tensorboard/blob/master/docs/r2/tensorboard_in_notebooks.ipynb', 'display_url': 'github.com/tensorflow/ten…'}]","[{'url': 'https://t.co/vgyg4mnUIS', 'media_url': 'http://pbs.twimg.com/media/D1FnD4mW0AA8ZHn.png', 'display_url': 'pic.twitter.com/vgyg4mnUIS'}]"
1103451673857585152,2019-03-07 00:25:54+00:00,47,11,"Find duplicated rows in #pandas DataFrame:

DataFrame.duplicated(subset=None, keep='first')

https://t.co/9LmjYg2hYA

Thanks @thisPtr for the tip!",False,False,https://twitter.com/python_tip/status/1103451673857585152,"[{'url': 'https://t.co/9LmjYg2hYA', 'expanded_url': 'https://thispointer.com/pandas-find-duplicate-rows-in-a-dataframe-based-on-all-or-selected-columns-using-dataframe-duplicated-in-python/', 'display_url': 'thispointer.com/pandas-find-du…'}]",[]
1103242802861871104,2019-03-06 10:35:56+00:00,70,27,"> import pandas as pd
> False in pd.Series([True, True])
True
> 123 in pd.Series([123, 456])
False

Be aware that `in` operator looks through index, not values!

> False in pd.Series([True, True]).values
False
> 123 in pd.Series([123, 456]).values
True

https://t.co/OrCwVQ3qIl",False,False,https://twitter.com/python_tip/status/1103242802861871104,"[{'url': 'https://t.co/OrCwVQ3qIl', 'expanded_url': 'https://stackoverflow.com/questions/42684161/why-does-false-in-pandas-seriestrue-true-return-true/', 'display_url': 'stackoverflow.com/questions/4268…'}]",[]
1102702904752906240,2019-03-04 22:50:34+00:00,22,9,"Get and set a state of #numpy random generator

import numpy as np

# get the initial state
st0 = np.random.get_state()

print(np.random.randint(0, 100, 10))

# set the state
np.random.set_state(st0)

print(np.random.randint(0, 100, 10))
# same numbers

https://t.co/MRwcu17MiJ",False,False,https://twitter.com/python_tip/status/1102702904752906240,"[{'url': 'https://t.co/MRwcu17MiJ', 'expanded_url': 'https://stackoverflow.com/questions/32172054/how-can-i-retrieve-the-current-seed-of-numpys-random-number-generator', 'display_url': 'stackoverflow.com/questions/3217…'}]",[]
1102343142781652993,2019-03-03 23:01:00+00:00,99,25,"Adjust a string to a fixed length with ljust, rjust and center:

text = ""I love Mondays!""
text.ljust(30)
text.rjust(30, ""*"")
https://t.co/aaMFlN8Alq(30, ""~"")

Thanks @PyPrinciples for the tip.
https://t.co/RWDBkB05pc https://t.co/vKvVS6KMNI",False,False,https://twitter.com/python_tip/status/1102343142781652993,"[{'url': 'https://t.co/aaMFlN8Alq', 'expanded_url': 'http://text.center', 'display_url': 'text.center'}, {'url': 'https://t.co/RWDBkB05pc', 'expanded_url': 'https://twitter.com/PyPrinciples/status/1089989887821000704', 'display_url': 'twitter.com/PyPrinciples/s…'}]","[{'url': 'https://t.co/vKvVS6KMNI', 'media_url': 'http://pbs.twimg.com/media/D0w_bu9WsAAYDTl.png', 'display_url': 'pic.twitter.com/vKvVS6KMNI'}]"
1101511420141846528,2019-03-01 15:56:02+00:00,122,26,Need a listing of variables you've defined in a #Jupyter notebook?  Try the %whos magic. https://t.co/yG3hXXgaY6,False,False,https://twitter.com/python_tip/status/1101511420141846528,[],"[{'url': 'https://t.co/yG3hXXgaY6', 'media_url': 'http://pbs.twimg.com/media/D0lavzoXQAENSEF.png', 'display_url': 'pic.twitter.com/yG3hXXgaY6'}]"
1101218800635129864,2019-02-28 20:33:16+00:00,98,29,"With the functools.lru_cache decorator, repeated function calls become O(1) table lookups. 
You can it when you want to reuse previously computed values. 

https://t.co/rthK3jMD2l

#functools #python https://t.co/1KmOPfiiRP",False,False,https://twitter.com/python_tip/status/1101218800635129864,"[{'url': 'https://t.co/rthK3jMD2l', 'expanded_url': 'https://docs.python.org/3/library/functools.html#functools.lru_cache', 'display_url': 'docs.python.org/3/library/func…'}]","[{'url': 'https://t.co/1KmOPfiiRP', 'media_url': 'http://pbs.twimg.com/media/D0hQqPCWwAE9h1Q.png', 'display_url': 'pic.twitter.com/1KmOPfiiRP'}]"
1100786859817414656,2019-02-27 15:56:53+00:00,81,28,"animatplot - #python package for making interactive animated plots. Built on top of #matplotlib. 

https://t.co/vN4ffgXZvd

https://t.co/ulivQ1dARi

#dataviz https://t.co/agCGIMGea7",False,False,https://twitter.com/python_tip/status/1100786859817414656,"[{'url': 'https://t.co/vN4ffgXZvd', 'expanded_url': 'https://github.com/t-makaro/animatplot', 'display_url': 'github.com/t-makaro/anima…'}, {'url': 'https://t.co/ulivQ1dARi', 'expanded_url': 'https://animatplot.readthedocs.io/en/stable/gallery/scatter.html', 'display_url': 'animatplot.readthedocs.io/en/stable/gall…'}]","[{'url': 'https://t.co/agCGIMGea7', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/D0bHwL_WsAAFQTR.jpg', 'display_url': 'pic.twitter.com/agCGIMGea7'}]"
1100419891939758080,2019-02-26 15:38:41+00:00,47,17,"Access environment variables with os.environ:

>>> import os
>>> 'HOME' in os.environ
True
>>> os.environ.get('INSTANCE_NAME', None)
'some_name'

#python",False,False,https://twitter.com/python_tip/status/1100419891939758080,[],[]
1100034429529993216,2019-02-25 14:07:00+00:00,59,17,"str() takes an optional encoding argument for decoding bytes:

>>> str(b'x\xc2\xb2 \xF0\x9F\x98\xB1', 'utf-8')
'x² 😱'

https://t.co/YE6E06N0xe

#python",False,False,https://twitter.com/python_tip/status/1100034429529993216,"[{'url': 'https://t.co/YE6E06N0xe', 'expanded_url': 'https://docs.python.org/3/library/stdtypes.html#bytes.decode', 'display_url': 'docs.python.org/3/library/stdt…'}]",[]
1098719263785971713,2019-02-21 23:01:00+00:00,99,21,"Are you feeling stressed?
Let's get rid of it

>>> you = ""stressed""
>>> you[::-1]
""desserts""

Thanks @Saandipt for pointing us to  https://t.co/bfmnGmf1dK

Do you have any #pythontip you want to share? Just mention @python_tip in your tweet or send it to https://t.co/mfUQ9teK5k https://t.co/b1sL68RtUM",False,False,https://twitter.com/python_tip/status/1098719263785971713,"[{'url': 'https://t.co/bfmnGmf1dK', 'expanded_url': 'https://www.quora.com/What-is-the-best-trick-in-python-you-know-which-most-of-us-dont', 'display_url': 'quora.com/What-is-the-be…'}, {'url': 'https://t.co/mfUQ9teK5k', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]","[{'url': 'https://t.co/b1sL68RtUM', 'media_url': 'http://pbs.twimg.com/media/DziCxXqW0AAUmsK.png', 'display_url': 'pic.twitter.com/b1sL68RtUM'}]"
1098356875823697920,2019-02-20 23:01:00+00:00,47,16,"pandas.apply(): Apply a function to each row/column in DataFrame

https://t.co/LkQNFXkjWK

Thanks @thisPtr for the tip!",False,False,https://twitter.com/python_tip/status/1098356875823697920,"[{'url': 'https://t.co/LkQNFXkjWK', 'expanded_url': 'https://thispointer.com/pandas-apply-apply-a-function-to-each-row-column-in-dataframe/', 'display_url': 'thispointer.com/pandas-apply-a…'}]",[]
1097995746312212480,2019-02-19 23:06:00+00:00,92,26,"itertools.product gives you a cartesian product of input iterables (lists, tuples...)

Example:

from itertools import product
a = [1, 2, 3]
b = [3, 4]
for x, y in product(a, b):
  print(x, y)

Output:
1 3
1 4
2 3
2 4
3 3
3 4

https://t.co/GchfgzdPH5",False,False,https://twitter.com/python_tip/status/1097995746312212480,"[{'url': 'https://t.co/GchfgzdPH5', 'expanded_url': 'https://docs.python.org/3/library/itertools.html#itertools.product', 'display_url': 'docs.python.org/3/library/iter…'}]",[]
1097632100323377152,2019-02-18 23:01:00+00:00,82,38,"Python 3.8.0 is coming (schedule: https://t.co/r6DBtgzSgb)

The most discussed feature is PEP572 Assignment Expressions

https://t.co/ptnKgFTwXZ

Regex example:

if (match := https://t.co/83CvqptQMK(data)) is not None:
    result = https://t.co/TNk5fvphYD(1)",False,False,https://twitter.com/python_tip/status/1097632100323377152,"[{'url': 'https://t.co/r6DBtgzSgb', 'expanded_url': 'https://www.python.org/dev/peps/pep-0569/#id6', 'display_url': 'python.org/dev/peps/pep-0…'}, {'url': 'https://t.co/ptnKgFTwXZ', 'expanded_url': 'https://www.blog.pythonlibrary.org/2018/06/12/python-101-assignment-expressions/', 'display_url': 'blog.pythonlibrary.org/2018/06/12/pyt…'}, {'url': 'https://t.co/83CvqptQMK', 'expanded_url': 'http://pattern.search', 'display_url': 'pattern.search'}, {'url': 'https://t.co/TNk5fvphYD', 'expanded_url': 'http://match.group', 'display_url': 'match.group'}]",[]
1097510767505616897,2019-02-18 14:58:52+00:00,1,0,"@maartendb_bel @Saandipt Oh, you are right. I did not think about case.

Indeed, `[] if prev is None else prev` is better.",True,False,https://twitter.com/python_tip/status/1097510767505616897,[],[]
1097470986704830466,2019-02-18 12:20:47+00:00,0,0,"@maartendb_bel @Saandipt I have tested with prev == [] and it seems fine. Did I get you wrong?

>>> accumulate(2, [])
[2]
accumulate(3, [])
[3]",True,False,https://twitter.com/python_tip/status/1097470986704830466,[],[]
1097269712705052673,2019-02-17 23:01:00+00:00,42,14,"An interesting Python idiom: 

def accumulate(x, prev=None):
prev_elements = prev or []
prev_elements.append(x)
return prev_elements

Why?
* bool(None) == False
* If Python is evaluating ""A or B"" and A is False, then the result is B

https://t.co/bfmnGmwC5i

(via @Saandipt)",False,False,https://twitter.com/python_tip/status/1097269712705052673,"[{'url': 'https://t.co/bfmnGmwC5i', 'expanded_url': 'https://www.quora.com/What-is-the-best-trick-in-python-you-know-which-most-of-us-dont', 'display_url': 'quora.com/What-is-the-be…'}]",[]
1096448758802509824,2019-02-15 16:38:49+00:00,46,8,"Catplots are boring? Try sns.dogplot()!

#python #seaborn #dataviz #tgif https://t.co/Tmen1T5HQK",False,False,https://twitter.com/python_tip/status/1096448758802509824,[],"[{'url': 'https://t.co/Tmen1T5HQK', 'media_url': 'http://pbs.twimg.com/media/DzdeUqzXQAEw0eT.png', 'display_url': 'pic.twitter.com/Tmen1T5HQK'}]"
1096155371436195842,2019-02-14 21:13:00+00:00,64,20,"Roses are red
Violets are blue
Python is awesome
R is great too

https://t.co/ZSu7FHJ3hO
(the code will run both in R and Python)

#PythonValentine #Rvalentine #MakeCodeNotWar #pythontip https://t.co/YZ66JR7n3k",False,False,https://twitter.com/python_tip/status/1096155371436195842,"[{'url': 'https://t.co/ZSu7FHJ3hO', 'expanded_url': 'https://gist.github.com/simecek/e6fc116d0f2ee971b980428568cdf316', 'display_url': 'gist.github.com/simecek/e6fc11…'}]","[{'url': 'https://t.co/YZ66JR7n3k', 'media_url': 'http://pbs.twimg.com/media/DzZSs41WwAMrNrI.png', 'display_url': 'pic.twitter.com/YZ66JR7n3k'}]"
1095795220715892736,2019-02-13 21:21:54+00:00,46,11,">>> from collections import Counter
>>> A = Counter([1, 2, 2, 3])
>>> B = Counter([1, 1, 4, 4])
>>> A
Counter({1: 1, 2: 2, 3: 1})
>>> B
Counter({1: 2, 4: 2})
>>> A | B
Counter({1: 2, 2: 2, 3: 1, 4: 2})
>>> A & B
Counter({1: 1})

#python https://t.co/IRKWrciikG",False,False,https://twitter.com/python_tip/status/1095795220715892736,"[{'url': 'https://t.co/IRKWrciikG', 'expanded_url': 'https://docs.python.org/3.7/library/collections.html#collections.Counter', 'display_url': 'docs.python.org/3.7/library/co…'}]",[]
1095375360471060480,2019-02-12 17:33:31+00:00,36,14,"#python_tip by @thisPtr :

#Pandas : Skip rows top, bottom or middle while importing a CSV to Dataframe in #Python.

https://t.co/R51CnM8OmJ https://t.co/Y7mZcdNig5",False,False,https://twitter.com/python_tip/status/1095375360471060480,"[{'url': 'https://t.co/R51CnM8OmJ', 'expanded_url': 'https://thispointer.com/pandas-skip-rows-while-reading-csv-file-to-a-dataframe-using-read_csv-in-python/', 'display_url': 'thispointer.com/pandas-skip-ro…'}]","[{'url': 'https://t.co/Y7mZcdNig5', 'media_url': 'http://pbs.twimg.com/media/DzOOC8qXcAIwnVH.jpg', 'display_url': 'pic.twitter.com/Y7mZcdNig5'}]"
1094992024456056833,2019-02-11 16:10:17+00:00,52,13,"perfplot: 
measure execution time of code snippets with different input parameters and plot the results.

#Python 
https://t.co/uW8x8ZU7Li https://t.co/DuEaycB9tw",False,False,https://twitter.com/python_tip/status/1094992024456056833,"[{'url': 'https://t.co/uW8x8ZU7Li', 'expanded_url': 'https://github.com/nschloe/perfplot', 'display_url': 'github.com/nschloe/perfpl…'}]","[{'url': 'https://t.co/DuEaycB9tw', 'media_url': 'http://pbs.twimg.com/media/DzIxX-VWsAAWMWQ.jpg', 'display_url': 'pic.twitter.com/DuEaycB9tw'}]"
1093817109283594240,2019-02-08 10:21:35+00:00,3,0,"@ManjunathSManu You need to install it first, https://t.co/au4LZJm60o",True,False,https://twitter.com/python_tip/status/1093817109283594240,"[{'url': 'https://t.co/au4LZJm60o', 'expanded_url': 'https://stackoverflow.com/a/20450998', 'display_url': 'stackoverflow.com/a/20450998'}]",[]
1093646337378275329,2019-02-07 23:03:00+00:00,70,19,"Your users do not pay attention to your messages, and you want to print them on red and blinking? 

No problem! (be aware eyes might bleed after seeing this)

import termcolor
termcolor.cprint('Hey, this is important!!!', 'white', 'on_red', attrs=['blink'])

#termcolor #pythontip",False,False,https://twitter.com/python_tip/status/1093646337378275329,[],[]
1093283196446429184,2019-02-06 23:00:00+00:00,17,3,"#pythontip by @ori75660:

How to find  an apartment, Python-style:

https://t.co/8Hy3lNeMQv

#selenium https://t.co/vQMT8HwVIx",False,False,https://twitter.com/python_tip/status/1093283196446429184,"[{'url': 'https://t.co/8Hy3lNeMQv', 'expanded_url': 'https://dapythonista.com/2019/01/14/how-i-found-my-apartment-python-style/', 'display_url': 'dapythonista.com/2019/01/14/how…'}]","[{'url': 'https://t.co/vQMT8HwVIx', 'media_url': 'http://pbs.twimg.com/media/DyaE7ZjX4AEOvDS.jpg', 'display_url': 'pic.twitter.com/vQMT8HwVIx'}]"
1092921058133491712,2019-02-05 23:01:00+00:00,121,37,"Ups & downs of capitalization:

# all letters
> ""new york"".upper()
'NEW YORK'

# 1st letter
> ""new york"".capitalize()
'New york'

# 1st letters
""new york"".title()
'New York'

# 1st letters & smart
from titlecase import titlecase
titlecase('mchenry')
'McHenry'

Test on US cities: https://t.co/3qnRRx6kDa",False,False,https://twitter.com/python_tip/status/1092921058133491712,[],"[{'url': 'https://t.co/3qnRRx6kDa', 'media_url': 'http://pbs.twimg.com/media/DyaBSZIX4AA3IYM.jpg', 'display_url': 'pic.twitter.com/3qnRRx6kDa'}]"
1092747916836401152,2019-02-05 11:33:00+00:00,29,10,"Get a list of US cities and their GPS locations with geonamescache library:

(adapted from https://t.co/LwihallmIj)

#pythontip #geonamescache https://t.co/QBxdEDYidB",False,False,https://twitter.com/python_tip/status/1092747916836401152,"[{'url': 'https://t.co/LwihallmIj', 'expanded_url': 'https://galeascience.wordpress.com/2016/03/23/us-city-to-state-python-dictionary/', 'display_url': 'galeascience.wordpress.com/2016/03/23/us-…'}]","[{'url': 'https://t.co/QBxdEDYidB', 'media_url': 'http://pbs.twimg.com/media/DyZW676X4AIGTg5.jpg', 'display_url': 'pic.twitter.com/QBxdEDYidB'}]"
1092186718923415552,2019-02-03 22:23:00+00:00,119,23,"We are celebrating two years of @python_tip existence today. 🎂🥳🎈🎉

I have downloaded our Twitter data and made them publicly available on Github and Kaggle:

https://t.co/5eAFiwwmRw
https://t.co/BdVFcSH25H

Thank you all for your tips, RTs and 💙! https://t.co/5Af3xi1972",False,False,https://twitter.com/python_tip/status/1092186718923415552,"[{'url': 'https://t.co/5eAFiwwmRw', 'expanded_url': 'https://www.kaggle.com/simecek/two-years-of-python-tip', 'display_url': 'kaggle.com/simecek/two-ye…'}, {'url': 'https://t.co/BdVFcSH25H', 'expanded_url': 'https://github.com/simecek/two-years-of-python_tip', 'display_url': 'github.com/simecek/two-ye…'}]","[{'url': 'https://t.co/5Af3xi1972', 'media_url': 'http://pbs.twimg.com/media/DyciutkX0AAgHbR.jpg', 'display_url': 'pic.twitter.com/5Af3xi1972'}]"
1091352975539204096,2019-02-01 15:10:00+00:00,24,6,"Time to be creative with #python and #math.

https://t.co/d8TsxDXcF0

#numpy #plotnine

Original #rstats tweet: https://t.co/jhuaZLk7xh https://t.co/cNnq1rdOPN",False,False,https://twitter.com/python_tip/status/1091352975539204096,"[{'url': 'https://t.co/d8TsxDXcF0', 'expanded_url': 'https://gist.github.com/karlafej/7fe1d941e71a7c5dd98cf023460c5c19', 'display_url': 'gist.github.com/karlafej/7fe1d…'}, {'url': 'https://t.co/jhuaZLk7xh', 'expanded_url': 'https://twitter.com/aschinchon/status/1090718751736193026', 'display_url': 'twitter.com/aschinchon/sta…'}]","[{'url': 'https://t.co/cNnq1rdOPN', 'media_url': 'http://pbs.twimg.com/media/DyVDGOvX4AAnmC3.jpg', 'display_url': 'pic.twitter.com/cNnq1rdOPN'}]"
1091069962570088448,2019-01-31 20:25:24+00:00,140,44,"Add leading zeros to your strings using zfill()

>>> for i in [1, 11, 222, ""aaa"", 1234]:
...     str(i).zfill(4)
... 
'0001'
'0011'
'0222'
'0aaa'
'1234'

https://t.co/IdSTEzqRYi

#python",False,False,https://twitter.com/python_tip/status/1091069962570088448,"[{'url': 'https://t.co/IdSTEzqRYi', 'expanded_url': 'https://docs.python.org/3.7/library/stdtypes.html#str.zfill', 'display_url': 'docs.python.org/3.7/library/st…'}]",[]
1090630716545789958,2019-01-30 15:20:00+00:00,49,20,"0123456789 are not the only characters treated as digits in #Python3:

>>> s = ""௩௩௩""
>>> int(s)
333
>>> s.isdecimal()
True
>>> re.match('\d', s)
<_sre.SRE_Match object; span=(0, 1), match='௩'>

#unicode
https://t.co/wlE0gl8Nxz",False,False,https://twitter.com/python_tip/status/1090630716545789958,"[{'url': 'https://t.co/wlE0gl8Nxz', 'expanded_url': 'http://www.fileformat.info/info/unicode/category/Nd/list.htm', 'display_url': 'fileformat.info/info/unicode/c…'}]",[]
1090271399715827715,2019-01-29 15:32:12+00:00,46,15,"Don't miss the guide to object-oriented programming in #Python by @tw_lgiordani

https://t.co/TNq87vmgdu",False,False,https://twitter.com/python_tip/status/1090271399715827715,"[{'url': 'https://t.co/TNq87vmgdu', 'expanded_url': 'http://blog.thedigitalcatonline.com/blog/2014/08/20/python-3-oop-part-1-objects-and-types/', 'display_url': 'blog.thedigitalcatonline.com/blog/2014/08/2…'}]",[]
1089985890032734208,2019-01-28 20:37:41+00:00,91,28,"#pandas DataFrame.merge() has an indicator argument that allows you to see the source of each row.

>>> df = df1.merge(df2, on=[‘X’], how='outer', indicator='src')

https://t.co/LkBTtBnHzc

#python https://t.co/5nCnreaIen",False,False,https://twitter.com/python_tip/status/1089985890032734208,"[{'url': 'https://t.co/LkBTtBnHzc', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.merge.html', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}]","[{'url': 'https://t.co/5nCnreaIen', 'media_url': 'http://pbs.twimg.com/media/DyBoYxkXQAotxpI.jpg', 'display_url': 'pic.twitter.com/5nCnreaIen'}]"
1088580342066368513,2019-01-24 23:32:33+00:00,34,18,"Be careful when choosing a version of your Python. Many packages will drop Python 2.7 support this year:

https://t.co/gFg8PGxeQb

On contrary, note that #tensorflow still does not support Python 3.7:

https://t.co/aTBQthjkDc",False,False,https://twitter.com/python_tip/status/1088580342066368513,"[{'url': 'https://t.co/gFg8PGxeQb', 'expanded_url': 'https://python3statement.org/#sections40-timeline', 'display_url': 'python3statement.org/#sections40-ti…'}, {'url': 'https://t.co/aTBQthjkDc', 'expanded_url': 'https://github.com/voxel51/eta/issues/167', 'display_url': 'github.com/voxel51/eta/is…'}]",[]
1088210015905873921,2019-01-23 23:01:00+00:00,21,6,"#pythontip from @thisPtr:

Create an empty DataFrame to be filled later

import pandas as pd

# Creating an empty Dataframe with column names only
dfObj = pd.DataFrame(columns=['User_ID', 'UserName', 'Action'])

https://t.co/6ZpCyEUkXw",False,False,https://twitter.com/python_tip/status/1088210015905873921,"[{'url': 'https://t.co/6ZpCyEUkXw', 'expanded_url': 'https://thispointer.com/pandas-how-to-create-an-empty-dataframe-and-append-rows-columns-to-it-in-python/', 'display_url': 'thispointer.com/pandas-how-to-…'}]",[]
1087847124224532480,2019-01-22 22:59:00+00:00,45,17,"Do you need different Python versions for different projects?

With pyenv, it is as easy as

# Install Python 3.6.1
pyenv install 3.6.1

# Create env. with django 1.10
pyenv virtualenv 3.6.1 django-1.10
pyenv activate django-1.10
pip install django==1.10

https://t.co/qvZx4ELr6M",False,False,https://twitter.com/python_tip/status/1087847124224532480,"[{'url': 'https://t.co/qvZx4ELr6M', 'expanded_url': 'https://medium.com/@jordanthomasg/python-development-on-macos-with-pyenv-virtualenv-ec583b92934c', 'display_url': 'medium.com/@jordanthomasg…'}]",[]
1087484736430395392,2019-01-21 22:59:00+00:00,73,18,"#pythontip from @singhjayp

getpass.getpass() prompts a user for a password without echoing it.

Example:

import getpass                                                                       
p = getpass.getpass(""Answer to a very secret question:"") https://t.co/JctxdkaGh5",False,False,https://twitter.com/python_tip/status/1087484736430395392,"[{'url': 'https://t.co/JctxdkaGh5', 'expanded_url': 'https://twitter.com/singhjayp/status/1086345930352353281', 'display_url': 'twitter.com/singhjayp/stat…'}]",[]
1087466405748985856,2019-01-21 21:46:09+00:00,1,0,"@karlafej It even seems that you can now use https://t.co/9kF9eFMeYn_feather https://t.co/AdPKNzCCNR
(historically, #feather was not for long-term storage)",True,False,https://twitter.com/python_tip/status/1087466405748985856,"[{'url': 'https://t.co/9kF9eFMeYn', 'expanded_url': 'http://pandas.read', 'display_url': 'pandas.read'}, {'url': 'https://t.co/AdPKNzCCNR', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_feather.html', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}]",[]
1087465600123850752,2019-01-21 21:42:57+00:00,0,0,"RT @karlafej: @python_tip What about feather? Seems pretty fast...

https://t.co/VGyNajEnje
https://t.co/WdFbAbF7Xh https://t.co/DSe93XsuVr",False,True,https://twitter.com/python_tip/status/1087465600123850752,"[{'url': 'https://t.co/VGyNajEnje', 'expanded_url': 'https://github.com/wesm/feather', 'display_url': 'github.com/wesm/feather'}, {'url': 'https://t.co/WdFbAbF7Xh', 'expanded_url': 'https://blog.rstudio.com/2016/03/29/feather/', 'display_url': 'blog.rstudio.com/2016/03/29/fea…'}]","[{'url': 'https://t.co/DSe93XsuVr', 'media_url': 'http://pbs.twimg.com/media/Dxca8CMWoAAYTof.jpg', 'display_url': 'pic.twitter.com/DSe93XsuVr'}]"
1087139487816302592,2019-01-21 00:07:06+00:00,54,11,"Working with a large DataFrame, that is too slow to load/write with read_csv/to_csv?

Try  read_hdf/to_hdf or read_parquet/to_parquet (For more info: https://t.co/CQjJxhRSh3) 

#pythontip #pandas",False,False,https://twitter.com/python_tip/status/1087139487816302592,"[{'url': 'https://t.co/CQjJxhRSh3', 'expanded_url': 'https://medium.com/@bobhaffner/gist-to-medium-test-db3d51b8ba7b', 'display_url': 'medium.com/@bobhaffner/gi…'}]",[]
1086388587812319233,2019-01-18 22:23:18+00:00,104,30,"The step parameter in sequence slicing can be negative:

>>> a = [1, 2, 3, 4, 5, 6, 7, 8]
>>> a[::-1] #reverse
[8, 7, 6, 5, 4, 3, 2, 1]
>>> a[::-2]
[8, 6, 4, 2]

#python #pythontip",False,False,https://twitter.com/python_tip/status/1086388587812319233,[],[]
1085987380790726658,2019-01-17 19:49:02+00:00,79,26,"Remove duplicates from a list while keeping the order:

>>> from collections import OrderedDict
>>> a = [""foo"", ""Alice"", ""bar"", ""foo"", ""Bob""]
>>> list(OrderedDict.fromkeys(a).keys())
['foo', 'Alice', 'bar', 'Bob']

#python",False,False,https://twitter.com/python_tip/status/1085987380790726658,[],[]
1085641510496976906,2019-01-16 20:54:41+00:00,60,19,"Change theme of #jupyter notebook with jupyterthemes.

Command line usage:
List available themes: jt -l
Change theme: jt -t <themename>
Reset to default: jt -r

https://t.co/fMm3IalzUK https://t.co/24oCsEs4z9",False,False,https://twitter.com/python_tip/status/1085641510496976906,"[{'url': 'https://t.co/fMm3IalzUK', 'expanded_url': 'https://github.com/dunovank/jupyter-themes', 'display_url': 'github.com/dunovank/jupyt…'}]","[{'url': 'https://t.co/24oCsEs4z9', 'media_url': 'http://pbs.twimg.com/media/DxD5LJMXQAUGf9D.jpg', 'display_url': 'pic.twitter.com/24oCsEs4z9'}]"
1085289602057936896,2019-01-15 21:36:19+00:00,44,13,"#pythontip by @FlorimondManca:

Use #contextlib's ExitStack to cleanly enter and exit an undetermined number of context managers.

https://t.co/3EqEA5Bd31

Example below allows you to open many files at once: https://t.co/4TZBWQe1uP",False,False,https://twitter.com/python_tip/status/1085289602057936896,"[{'url': 'https://t.co/3EqEA5Bd31', 'expanded_url': 'https://docs.python.org/3/library/contextlib.html#contextlib.ExitStack', 'display_url': 'docs.python.org/3/library/cont…'}]","[{'url': 'https://t.co/4TZBWQe1uP', 'media_url': 'http://pbs.twimg.com/media/Dw-4xDYX0AA4lUN.jpg', 'display_url': 'pic.twitter.com/4TZBWQe1uP'}]"
1084818415670493186,2019-01-14 14:23:59+00:00,64,13,"Dict update method can get list of pair tuples as an input:

>>> a={1:'1'}
>>> b=[(3,'3'),(4,'4')]
>>> a.update(b)
>>> a
{1: '1', 3: '3', 4: '4'}

It might be problematic if the list contains also non key/pair values. Try this:
>>> c=[(5,'5'), 6, (7,'7')]
>>> a.update(c)
>>> a",False,False,https://twitter.com/python_tip/status/1084818415670493186,[],[]
1083498973313155074,2019-01-10 23:01:00+00:00,46,12,"Another #wtf #Python? for Friday. Guess what will be the output of the following code:

array = [1, 8, 15]
g = (x for x in array if array.count(x) > 0)
array = [2, 8, 22]
print(list(g))

Solution:
https://t.co/0714VepJsq",False,False,https://twitter.com/python_tip/status/1083498973313155074,"[{'url': 'https://t.co/0714VepJsq', 'expanded_url': 'https://github.com/satwikkansal/wtfpython#-evaluation-time-discrepancy', 'display_url': 'github.com/satwikkansal/w…'}]",[]
1083136585829359618,2019-01-09 23:01:00+00:00,75,31,"#pythontip from @singhjayp:

Use shlex.split() to get shell-like splitting:

>>> import re
>>> re.split('\s', ""this is 'my string'"")
['this', 'is', ""'my"", ""string'""]

>>> import shlex
>>> shlex.split(""this is 'my string'"")
['this', 'is', 'my string']

https://t.co/KlueBBcpEX",False,False,https://twitter.com/python_tip/status/1083136585829359618,"[{'url': 'https://t.co/KlueBBcpEX', 'expanded_url': 'https://twitter.com/singhjayp/status/1080901990601949184', 'display_url': 'twitter.com/singhjayp/stat…'}]",[]
1082774197611495426,2019-01-08 23:01:00+00:00,127,35,"#pythontip by @PyPrinciples:

You can use | and & for set union and intersection. 

>>> {1, 2} & {2, 3}
{2}
>>> {1, 2} | {2, 3}
{1, 2, 3}",False,False,https://twitter.com/python_tip/status/1082774197611495426,[],[]
1082658435697651712,2019-01-08 15:21:00+00:00,1,0,@maartendb_bel Thanks for catching that!,True,False,https://twitter.com/python_tip/status/1082658435697651712,[],[]
1082658324447981571,2019-01-08 15:20:34+00:00,0,0,RT @maartendb_bel: @python_tip You have a typo in your last command. But the idea still stands.,False,True,https://twitter.com/python_tip/status/1082658324447981571,[],[]
1082654235932741634,2019-01-08 15:04:19+00:00,32,6,"Python often reuses string objects:

> a = ""some_string""
> id(a)
2024771270192
> id(""some"" + ""_"" + ""string"")
2024771270192

But it is not guaranteed!

> a = ""wtf!""
> id(a)
2024734733736
> id(""wft"" + ""!"")
2024761422376

https://t.co/eVHbmpcBle

Thanks Ondřej Novák for the tip.",False,False,https://twitter.com/python_tip/status/1082654235932741634,"[{'url': 'https://t.co/eVHbmpcBle', 'expanded_url': 'https://github.com/satwikkansal/wtfpython#-strings-can-be-tricky-sometimes-', 'display_url': 'github.com/satwikkansal/w…'}]",[]
1082303227104804869,2019-01-07 15:49:32+00:00,25,3,"#pythontip from @thisPtr:

How to check if a process is running and find it's PID in Python. #psutil

https://t.co/bS69aZP2lG

(Send us your tips by mentioning @python_tip in your tweet or filling the form at https://t.co/mfUQ9teK5k)",False,False,https://twitter.com/python_tip/status/1082303227104804869,"[{'url': 'https://t.co/bS69aZP2lG', 'expanded_url': 'https://thispointer.com/python-check-if-a-process-is-running-by-name-and-find-its-process-id-pid/', 'display_url': 'thispointer.com/python-check-i…'}, {'url': 'https://t.co/mfUQ9teK5k', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]",[]
1081297369893871616,2019-01-04 21:12:37+00:00,84,18,"You can write #pandas objects directly to compressed format (gzip, bz2, zip, xz).

>>> https://t.co/yGT52QVczk_csv(""data.csv.gz"", compression='gzip’)

#Python",False,False,https://twitter.com/python_tip/status/1081297369893871616,"[{'url': 'https://t.co/yGT52QVczk', 'expanded_url': 'http://df.to', 'display_url': 'df.to'}]",[]
1080903814943789056,2019-01-03 19:08:46+00:00,33,6,"Version control for #jupyter notebooks? Check this blog post for possible solutions.

https://t.co/IIOh9doEDo",False,False,https://twitter.com/python_tip/status/1080903814943789056,"[{'url': 'https://t.co/IIOh9doEDo', 'expanded_url': 'https://nextjournal.com/schmudde/how-to-version-control-jupyter', 'display_url': 'nextjournal.com/schmudde/how-t…'}]",[]
1080560924258373632,2019-01-02 20:26:14+00:00,33,5,"#pythontip by @jonrocher:

If you want to shuffle a #pandas dataframe, you can use the sample() method but specifying a fraction of 1:

df.sample(frac=1)

#Python https://t.co/ZdymJPg4GX",False,False,https://twitter.com/python_tip/status/1080560924258373632,"[{'url': 'https://t.co/ZdymJPg4GX', 'expanded_url': 'https://twitter.com/jonrocher/status/1070007251929157633', 'display_url': 'twitter.com/jonrocher/stat…'}]",[]
1080200666369441792,2019-01-01 20:34:42+00:00,143,44,"Use #holidays library to check whether a date is holiday or not.

>>> from datetime import date
>>> import holidays
>>> today = https://t.co/DAMy3gbWaN()
>>> today in holidays.Czech()
True

Happy New Year! #Python 
https://t.co/UsuKl4eGLI",False,False,https://twitter.com/python_tip/status/1080200666369441792,"[{'url': 'https://t.co/DAMy3gbWaN', 'expanded_url': 'http://date.today', 'display_url': 'date.today'}, {'url': 'https://t.co/UsuKl4eGLI', 'expanded_url': 'https://www.geeksforgeeks.org/python-holidays-library/', 'display_url': 'geeksforgeeks.org/python-holiday…'}]",[]
1079698304244609024,2018-12-31 11:18:30+00:00,172,38,"#python lists have the count() method that returns the number of occurrences of an element:

>>> lst = [1, 1, 2, 3, 4, 5, 1, 3, 3, 3, 7, 9, 3]
>>> lst.count(2)
1

Most common item:
>>> max(lst, key=lst.count) 
3",False,False,https://twitter.com/python_tip/status/1079698304244609024,[],[]
1078297282343325696,2018-12-27 14:31:20+00:00,46,13,"Display debug information about the compiled regular expression with re.DEBUG flag.

https://t.co/aPjeqC4gCV

#python #regexp https://t.co/mdqWQnYrxu",False,False,https://twitter.com/python_tip/status/1078297282343325696,"[{'url': 'https://t.co/aPjeqC4gCV', 'expanded_url': 'https://stackoverflow.com/a/143636', 'display_url': 'stackoverflow.com/a/143636'}]","[{'url': 'https://t.co/mdqWQnYrxu', 'media_url': 'http://pbs.twimg.com/media/DvbhlgVW0AEb33h.jpg', 'display_url': 'pic.twitter.com/mdqWQnYrxu'}]"
1077283605444001793,2018-12-24 19:23:21+00:00,36,4,"Time for another #matplotlib animation… Merry Xmas to all!

https://t.co/gidKpuJ9p6

https://t.co/FNHcHMm2Gq https://t.co/TiP11PPbAa",False,False,https://twitter.com/python_tip/status/1077283605444001793,"[{'url': 'https://t.co/gidKpuJ9p6', 'expanded_url': 'https://matplotlib.org/gallery/animation/rain.html', 'display_url': 'matplotlib.org/gallery/animat…'}, {'url': 'https://t.co/FNHcHMm2Gq', 'expanded_url': 'https://gist.github.com/karlafej/6ec5aeb9c09aada758e3fe4599413bf1', 'display_url': 'gist.github.com/karlafej/6ec5a…'}]","[{'url': 'https://t.co/TiP11PPbAa', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/DvNHns6WoAInjoo.jpg', 'display_url': 'pic.twitter.com/TiP11PPbAa'}]"
1076013147142610944,2018-12-21 07:15:00+00:00,78,25,"#pythontip from @singhjayp:

Use difflib.SequenceMatcher to compare strings.

https://t.co/JNcXHBFpBq

Example: https://t.co/ECiN4IwuZz",False,False,https://twitter.com/python_tip/status/1076013147142610944,"[{'url': 'https://t.co/JNcXHBFpBq', 'expanded_url': 'https://docs.python.org/3/library/difflib.html#sequencematcher-examples', 'display_url': 'docs.python.org/3/library/diff…'}]","[{'url': 'https://t.co/ECiN4IwuZz', 'media_url': 'http://pbs.twimg.com/media/Du0V52TWkAAuJNC.jpg', 'display_url': 'pic.twitter.com/ECiN4IwuZz'}]"
1075676176755159040,2018-12-20 08:56:00+00:00,19,3,"#pythontip from @thisPtr:

Select elements based on multiple conditions from a #NumPy array

https://t.co/REmvmOCu5f

(Do you want to share your #pythontip? Send it by https://t.co/mfUQ9teK5k or mention @python_tip in your tweet)",False,False,https://twitter.com/python_tip/status/1075676176755159040,"[{'url': 'https://t.co/REmvmOCu5f', 'expanded_url': 'https://thispointer.com/python-numpy-select-elements-or-indices-by-conditions-from-numpy-array/', 'display_url': 'thispointer.com/python-numpy-s…'}, {'url': 'https://t.co/mfUQ9teK5k', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]",[]
1075371167278485506,2018-12-19 12:44:00+00:00,37,10,"#pythontip from @aliakbar_saleh:

Sorting in Python

https://t.co/EqDh1wlXdZ

Example:
Sort complex objects using some of the object's indices as a key. 

(Do you want to share your #pythontip? Send it by https://t.co/mfUQ9twkWS or mention @python_tip in your tweet) https://t.co/qvhzYmGYeL",False,False,https://twitter.com/python_tip/status/1075371167278485506,"[{'url': 'https://t.co/EqDh1wlXdZ', 'expanded_url': 'https://wiki.python.org/moin/HowTo/Sorting/', 'display_url': 'wiki.python.org/moin/HowTo/Sor…'}, {'url': 'https://t.co/mfUQ9twkWS', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]","[{'url': 'https://t.co/qvhzYmGYeL', 'media_url': 'http://pbs.twimg.com/media/DuxcUw5XgAAHz8a.jpg', 'display_url': 'pic.twitter.com/qvhzYmGYeL'}]"
1075334585972609024,2018-12-19 10:18:38+00:00,51,16,">>> 0.1 + 0.1 + 0.1 == 0.3
False
>>> 0.1 + 0.1 + 0.1
0.30000000000000004

https://t.co/YrnNf7uk4d 
(via Facebook)",False,False,https://twitter.com/python_tip/status/1075334585972609024,"[{'url': 'https://t.co/YrnNf7uk4d', 'expanded_url': 'https://www.exploringbinary.com/why-0-point-1-does-not-exist-in-floating-point/', 'display_url': 'exploringbinary.com/why-0-point-1-…'}]",[]
1074994485162057728,2018-12-18 11:47:12+00:00,53,25,"#Numpy append is slow because it creates a copy. See running times of appending 10,000 values from https://t.co/A7EdFeD8ou:
* list.append: 0.0015
* deque.append: 0.0014
* np.append: 0.05

If possible, it is better to allocate the array beforehand. Example: https://t.co/RWo0BmlJZ6",False,False,https://twitter.com/python_tip/status/1074994485162057728,"[{'url': 'https://t.co/A7EdFeD8ou', 'expanded_url': 'https://www.quora.com/Is-it-better-to-use-np-append-or-list-append', 'display_url': 'quora.com/Is-it-better-t…'}, {'url': 'https://t.co/RWo0BmlJZ6', 'expanded_url': 'https://gist.github.com/simecek/5280e202df1a2b39e412a7f438b2acc1', 'display_url': 'gist.github.com/simecek/5280e2…'}]",[]
1073680668142518272,2018-12-14 20:46:33+00:00,14,2,JAX: GPU- and TPU-backed NumPy with differentiation and JIT compilation  https://t.co/2Cppu0dLZD,False,False,https://twitter.com/python_tip/status/1073680668142518272,"[{'url': 'https://t.co/2Cppu0dLZD', 'expanded_url': 'https://github.com/google/jax', 'display_url': 'github.com/google/jax'}]",[]
1073253966383742976,2018-12-13 16:31:00+00:00,26,7,"#pythontip from @simonw 
If you add a _repr_html_ method returning a HTML string to any class #Jupyter notebook will render the html inline.

Demo: https://t.co/J6cp7rUrXN

Docs:
https://t.co/EXZfo9OxxC",False,False,https://twitter.com/python_tip/status/1073253966383742976,"[{'url': 'https://t.co/J6cp7rUrXN', 'expanded_url': 'https://gist.github.com/ontouchstart//ea1631f69e507a81a9d9ec56b79e4d11', 'display_url': 'gist.github.com/ontouchstart//…'}, {'url': 'https://t.co/EXZfo9OxxC', 'expanded_url': 'https://ipython.readthedocs.io/en/stable/config/integrating.html#rich-display', 'display_url': 'ipython.readthedocs.io/en/stable/conf…'}]",[]
1072865291397255169,2018-12-12 14:46:32+00:00,41,12,"#pythontip from @fabridamicelli

So you think you know #Python? You'll still learn from @__mharrison__ 's Illustrated Guide:
>>> -1 % 3
2
>>> -1 % -3
-1
>>> 1 % -3
-2
Takeaway:  you don't want to do modulo w/negative
nums on the denominator unless you're sure that's what you need",False,False,https://twitter.com/python_tip/status/1072865291397255169,[],[]
1072509266882412545,2018-12-11 15:11:50+00:00,69,24,"Use chardet library to guess encoding of your text files.

https://t.co/jf4YZYjnZl

#python https://t.co/C2DVvAQ5Q0",False,False,https://twitter.com/python_tip/status/1072509266882412545,"[{'url': 'https://t.co/jf4YZYjnZl', 'expanded_url': 'https://chardet.readthedocs.io/en/latest/usage.html', 'display_url': 'chardet.readthedocs.io/en/latest/usag…'}]","[{'url': 'https://t.co/C2DVvAQ5Q0', 'media_url': 'http://pbs.twimg.com/media/DuJRdbWWoAITs5O.jpg', 'display_url': 'pic.twitter.com/C2DVvAQ5Q0'}]"
1072140771392962560,2018-12-10 14:47:33+00:00,36,13,"Use matplotlib.pyplot.table to add tables to your #matplotlib plot. You can even generate an image containing only the table!
https://t.co/nsw6PFJjSu

#python",False,False,https://twitter.com/python_tip/status/1072140771392962560,"[{'url': 'https://t.co/nsw6PFJjSu', 'expanded_url': 'https://pythonmatplotlibtips.blogspot.com/2018/11/matplotlib-only-table.html', 'display_url': 'pythonmatplotlibtips.blogspot.com/2018/11/matplo…'}]",[]
1071187630551912448,2018-12-07 23:40:07+00:00,37,13,"We are constantly looking for new Python tips. Do you have any and want to share it with a broader audience? 

1) Easy way: Just mention us in your tweet (add @python_tip at the end).

2) Safe way: Fill it into the form at https://t.co/mfUQ9teK5k",False,False,https://twitter.com/python_tip/status/1071187630551912448,"[{'url': 'https://t.co/mfUQ9teK5k', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]",[]
1070815901740621824,2018-12-06 23:03:00+00:00,35,12,"Debugging a decorated function:

If you decorate a function, its __name__, __doc__ and __module__ might be different than what you expect.  Try @functools.wraps to get the original values.

https://t.co/JVzn7SNOL4

Example:
https://t.co/Vk3SxzAwaf https://t.co/GDPXTqe1VC",False,False,https://twitter.com/python_tip/status/1070815901740621824,"[{'url': 'https://t.co/JVzn7SNOL4', 'expanded_url': 'https://www.thecodeship.com/patterns/guide-to-python-function-decorators/', 'display_url': 'thecodeship.com/patterns/guide…'}, {'url': 'https://t.co/Vk3SxzAwaf', 'expanded_url': 'https://gist.github.com/simecek/2d74a06d75c210b750f7d1c0e6fa8f19', 'display_url': 'gist.github.com/simecek/2d74a0…'}]","[{'url': 'https://t.co/GDPXTqe1VC', 'media_url': 'http://pbs.twimg.com/media/DtsTOU5XQAEMrvU.jpg', 'display_url': 'pic.twitter.com/GDPXTqe1VC'}]"
1070462945090551808,2018-12-05 23:40:29+00:00,36,14,"In #Python3, 'str' constructor allows you to specify encoding for a bytes-like object (bytes or bytearray)

Example:
>>> str(b'\xf0\x9f\x90\xa3', 'utf-8')
'🐣'

Docs: https://t.co/YE6E074BVO

(via @raymondh
https://t.co/tN0pUE20ZX)",False,False,https://twitter.com/python_tip/status/1070462945090551808,"[{'url': 'https://t.co/YE6E074BVO', 'expanded_url': 'https://docs.python.org/3/library/stdtypes.html#bytes.decode', 'display_url': 'docs.python.org/3/library/stdt…'}, {'url': 'https://t.co/tN0pUE20ZX', 'expanded_url': 'https://twitter.com/raymondh/status/1067104653173637120', 'display_url': 'twitter.com/raymondh/statu…'}]",[]
1070107248523952128,2018-12-05 00:07:04+00:00,42,23,"Package your #Python Scripts into CLI Commands:

https://t.co/KE0lBodwrb

(#pythontip from @ManuTRILH, the post written by @thegrumpyape)",False,False,https://twitter.com/python_tip/status/1070107248523952128,"[{'url': 'https://t.co/KE0lBodwrb', 'expanded_url': 'https://medium.com/ediblesec/turning-python-scripts-into-cli-commands-aecf56dfda18', 'display_url': 'medium.com/ediblesec/turn…'}]",[]
1069730988077518848,2018-12-03 23:11:56+00:00,3,0,"@honza95m Pssst, @functools.wraps will be here on Friday :-)",True,False,https://twitter.com/python_tip/status/1069730988077518848,[],[]
1069728260077031424,2018-12-03 23:01:06+00:00,69,27,"Do you need to deprecate a function or a method? Just use this simple #decorator:

https://t.co/s4SSK006ji

(get more decorator ideas at Python Decorator Library:
https://t.co/BMLNVVh3MI) https://t.co/epFcNSeSYh",False,False,https://twitter.com/python_tip/status/1069728260077031424,"[{'url': 'https://t.co/s4SSK006ji', 'expanded_url': 'https://wiki.python.org/moin/PythonDecoratorLibrary#Generating_Deprecation_Warnings', 'display_url': 'wiki.python.org/moin/PythonDec…'}, {'url': 'https://t.co/BMLNVVh3MI', 'expanded_url': 'https://wiki.python.org/moin/PythonDecoratorLibrary', 'display_url': 'wiki.python.org/moin/PythonDec…'}]","[{'url': 'https://t.co/epFcNSeSYh', 'media_url': 'http://pbs.twimg.com/media/Dthvy-mW4AUU4Ye.jpg', 'display_url': 'pic.twitter.com/epFcNSeSYh'}]"
1069581485093605376,2018-12-03 13:17:52+00:00,1,0,@ErtanOZDEMIR7 @kenessajr Good point. I agree that in this simple case it does not matter. I have tried to find a link for further discussion but found only https://t.co/Fy8SH8bOvj,True,False,https://twitter.com/python_tip/status/1069581485093605376,"[{'url': 'https://t.co/Fy8SH8bOvj', 'expanded_url': 'https://jaxenter.com/implement-switch-case-statement-python-138315.html', 'display_url': 'jaxenter.com/implement-swit…'}]",[]
1069367812366483457,2018-12-02 23:08:49+00:00,109,31,"#pythontip from @kenessajr:

To implement a switch-case statement in #Python, you can use a dictionary of lambda functions as in @kenessajr's example. 

https://t.co/GuHwtkEkce",False,False,https://twitter.com/python_tip/status/1069367812366483457,"[{'url': 'https://t.co/GuHwtkEkce', 'expanded_url': 'https://twitter.com/kenessajr/status/1067833853530693632', 'display_url': 'twitter.com/kenessajr/stat…'}]",[]
1068916190154756097,2018-12-01 17:14:13+00:00,16,11,"#selfpromo
Petr, one of @python_tip authors, is looking for a job. If you are hiring Data Analyst / Data Scientist / Statistician, please, let him know. https://t.co/NPZUupQr6Z",False,False,https://twitter.com/python_tip/status/1068916190154756097,"[{'url': 'https://t.co/NPZUupQr6Z', 'expanded_url': 'https://twitter.com/simecek/status/1068499381807136768', 'display_url': 'twitter.com/simecek/status…'}]",[]
1068646714914078726,2018-11-30 23:23:25+00:00,47,6,"np.nonzero() returns indices of the non-zero indices of an array.

>>> x = np.array([[1,0,0], [0,2,0], [1,1,0]])
>>> np.nonzero(x)
(array([0, 1, 2, 2]), array([0, 1, 0, 1]))
>>> x[np.nonzero(x)]
array([1, 2, 1, 1])

#python #numpy 
https://t.co/4EKsABvNH4",False,False,https://twitter.com/python_tip/status/1068646714914078726,"[{'url': 'https://t.co/4EKsABvNH4', 'expanded_url': 'https://docs.scipy.org/doc/numpy-1.15.0/reference/generated/numpy.nonzero.html', 'display_url': 'docs.scipy.org/doc/numpy-1.15…'}]",[]
1068077859984560129,2018-11-29 09:43:00+00:00,19,7,"#pythontip from @KarolinaBzdusek 

The unary ~ (invert) operator yields the bitwise inversion of its integer argument. The bitwise inversion of x is defined as -(x+1). It only applies to integral numbers.",False,False,https://twitter.com/python_tip/status/1068077859984560129,[],[]
1067800552334131204,2018-11-28 15:21:05+00:00,41,15,"re.X or re.VERBOSE flag allow you to write regular expression in a more readable way, allowing you to visually separate sections and insert comments.

https://t.co/KVgg5aFP2f

https://t.co/hpNLkCTKWL",False,False,https://twitter.com/python_tip/status/1067800552334131204,"[{'url': 'https://t.co/KVgg5aFP2f', 'expanded_url': 'https://docs.python.org/3/library/re.html#re.X', 'display_url': 'docs.python.org/3/library/re.h…'}, {'url': 'https://t.co/hpNLkCTKWL', 'expanded_url': 'https://stackoverflow.com/a/101537/9968316', 'display_url': 'stackoverflow.com/a/101537/99683…'}]",[]
1067452042191474688,2018-11-27 16:16:13+00:00,52,12,"#pandas asfreq() converts #timeseries to the specified frequency

https://t.co/wIG2Vj1qvM https://t.co/ZrGXavyMk2",False,False,https://twitter.com/python_tip/status/1067452042191474688,"[{'url': 'https://t.co/wIG2Vj1qvM', 'expanded_url': 'https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/03.11-Working-with-Time-Series.ipynb', 'display_url': 'github.com/jakevdp/Python…'}]","[{'url': 'https://t.co/ZrGXavyMk2', 'media_url': 'http://pbs.twimg.com/media/DtBZ8d0XgAInJmC.jpg', 'display_url': 'pic.twitter.com/ZrGXavyMk2'}]"
1067065996429746176,2018-11-26 14:42:13+00:00,21,10,"When applied to a column of categories, pandas.get_dummies() will convert it into one-hot encoding
https://t.co/jI0mOdEkPS

#python #pandas",False,False,https://twitter.com/python_tip/status/1067065996429746176,"[{'url': 'https://t.co/jI0mOdEkPS', 'expanded_url': 'https://stackoverflow.com/a/48170725/9968316', 'display_url': 'stackoverflow.com/a/48170725/996…'}]",[]
1065741968687489024,2018-11-22 23:01:00+00:00,51,9,"#cutie: Command line User Tools for Input Easification 

Because sometimes you just need a checkbox in your terminal window.

https://t.co/Ag7W8h1upp

(via @randal_olson) https://t.co/eu1UpJ0XVu",False,False,https://twitter.com/python_tip/status/1065741968687489024,"[{'url': 'https://t.co/Ag7W8h1upp', 'expanded_url': 'https://github.com/kamik423/cutie', 'display_url': 'github.com/kamik423/cutie'}]","[{'url': 'https://t.co/eu1UpJ0XVu', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/DskBGmTX4AAczQU.jpg', 'display_url': 'pic.twitter.com/eu1UpJ0XVu'}]"
1065380586435555329,2018-11-21 23:05:00+00:00,136,42,"#Python3 pathlib is awesome. You can join paths by '/' operator:

data_folder = Path(""my_project/data/"")
file_to_open = data_folder/""raw_data.txt""

Moreover, you can directly get a content of the file, for example,

print(file_to_open.read_text())

https://t.co/MnvcCCtbHz",False,False,https://twitter.com/python_tip/status/1065380586435555329,"[{'url': 'https://t.co/MnvcCCtbHz', 'expanded_url': 'https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f', 'display_url': 'medium.com/@ageitgey/pyth…'}]",[]
1065017192536633345,2018-11-20 23:01:00+00:00,55,11,"Slightly weird idea, but since in #Python3 print() is a function, you can use it in a list-comprehension:

import sympy
[print(x) for x in range(100) if sympy.isprime(x)]",False,False,https://twitter.com/python_tip/status/1065017192536633345,[],[]
1064811349719621633,2018-11-20 09:23:03+00:00,72,21,"Moving files from/to a notebook running on a remote server can be painful. But for Colab (Google's flavor of Jupyter), there is an easy way to connect your Google Drive:

from google.colab import drive
drive.mount('/content/drive')

Now you can even see it in your Files panel. https://t.co/BFEGDo9G1S",False,False,https://twitter.com/python_tip/status/1064811349719621633,[],"[{'url': 'https://t.co/BFEGDo9G1S', 'media_url': 'http://pbs.twimg.com/media/Dsb32LrWsAIBpTl.jpg', 'display_url': 'pic.twitter.com/BFEGDo9G1S'}]"
1064288596356726784,2018-11-18 22:45:49+00:00,45,11,"Find the location of #Jupyter default startup script folder:

get_ipython().profile_dir.startup_dir

Python scripts in this folder will be run in lexicographical order.

#jupyter #pythontip",False,False,https://twitter.com/python_tip/status/1064288596356726784,[],[]
1063446102572179456,2018-11-16 14:58:03+00:00,70,17,"Convert a list containing numbers into string:

lst = [1, 2, 3, 4, 'hello', 'world']
""_"".join([str(item) for item in lst])

or

""_"".join(map(str, lst))

#python",False,False,https://twitter.com/python_tip/status/1063446102572179456,[],[]
1063340121410478080,2018-11-16 07:56:55+00:00,125,31,"If your data is in a dictionary, perhaps from a JSON file, then str.format_map() is your best friend

Pretty way
print('{name} works at {status} {company}'.format_map(info))

Less pretty
print(f'{info[""name""]} works at {info[""status""]} {info[""company""]}')

https://t.co/HO9ixnRsrf",False,False,https://twitter.com/python_tip/status/1063340121410478080,"[{'url': 'https://t.co/HO9ixnRsrf', 'expanded_url': 'https://twitter.com/raymondh/status/1060689339703734272', 'display_url': 'twitter.com/raymondh/statu…'}]",[]
1062734635879333891,2018-11-14 15:50:56+00:00,39,12,"Check where and how to use asterisks in #python.
*
**

https://t.co/bfyhBmPe1t

blogpost by @treyhunner",False,False,https://twitter.com/python_tip/status/1062734635879333891,"[{'url': 'https://t.co/bfyhBmPe1t', 'expanded_url': 'https://treyhunner.com/2018/10/asterisks-in-python-what-they-are-and-how-to-use-them/', 'display_url': 'treyhunner.com/2018/10/asteri…'}]",[]
1062417299481784320,2018-11-13 18:49:57+00:00,42,16,Use Ctrl+/ (or Cmd+/ on Mac) to comment/uncomment selected lines in #jupyter notebook.,False,False,https://twitter.com/python_tip/status/1062417299481784320,[],[]
1062026642950889473,2018-11-12 16:57:37+00:00,48,15,"#python tips & tricks #TipoftheDay by @GeekyTipsTricks

Have u ever wondered which modules are imported in a Python code?

import sys
print(sys.modules)

* sys.modules is a dictionary; keys are imported module names, values are path to those modules

https://t.co/eyoRhdPJym",False,False,https://twitter.com/python_tip/status/1062026642950889473,"[{'url': 'https://t.co/eyoRhdPJym', 'expanded_url': 'https://twitter.com/GeekyTipsTricks/status/1059685421947543553', 'display_url': 'twitter.com/GeekyTipsTrick…'}]",[]
1060804433548845056,2018-11-09 08:01:00+00:00,66,19,"#pythontip from @singhjayp:

Sometimes string representations from __repr__ can be too long. Using reprlib module you can help to avoid unwanted items in the log.

Example:
https://t.co/MevyvlgYBB

Send us your Python tips to https://t.co/mfUQ9teK5k
#reprlib https://t.co/PFCKK0Pusv",False,False,https://twitter.com/python_tip/status/1060804433548845056,"[{'url': 'https://t.co/MevyvlgYBB', 'expanded_url': 'https://gist.github.com/simecek/7b49fcddacf89a20f20dc9a537d5b74a', 'display_url': 'gist.github.com/simecek/7b49fc…'}, {'url': 'https://t.co/mfUQ9teK5k', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]","[{'url': 'https://t.co/PFCKK0Pusv', 'media_url': 'http://pbs.twimg.com/media/DrYjVvMU8AEem0b.jpg', 'display_url': 'pic.twitter.com/PFCKK0Pusv'}]"
1060442045557456896,2018-11-08 08:01:00+00:00,39,15,"The module 'inspect' is great for understanding what is happening behind the scene. 

https://t.co/L5DrMtN8oi

How to inspect 'inspect'?

from inspect import getsource, getmodule, getmembers

print(getsource(getsource))
print(getmodule(getmodule))

import time
getmembers(time) https://t.co/m552jh4aLE",False,False,https://twitter.com/python_tip/status/1060442045557456896,"[{'url': 'https://t.co/L5DrMtN8oi', 'expanded_url': 'https://www.journaldev.com/19946/python-inspect-module', 'display_url': 'journaldev.com/19946/python-i…'}]","[{'url': 'https://t.co/m552jh4aLE', 'media_url': 'http://pbs.twimg.com/media/DrYjvvJUwAAPwGP.jpg', 'display_url': 'pic.twitter.com/m552jh4aLE'}]"
1060105056551202817,2018-11-07 09:41:55+00:00,1,0,"@Harcel @KarolinaBzdusek Or even better

>>> range(5) == range(5)
True
>>> iter(range(5)) == iter(range(5))
False",True,False,https://twitter.com/python_tip/status/1060105056551202817,[],[]
1060104348187844608,2018-11-07 09:39:07+00:00,0,0,"@Harcel @KarolinaBzdusek Wow! Nice. 

Testing equality == between two generators is just checking whether they are the same object in a memory
https://t.co/1RGVk0PkIO

And still
>>> range(1000) == range(1000)
True

To my surprise, range is NOT an iterator
https://t.co/99pBd3CqWs",True,False,https://twitter.com/python_tip/status/1060104348187844608,"[{'url': 'https://t.co/1RGVk0PkIO', 'expanded_url': 'https://stackoverflow.com/questions/9983547/comparing-two-generators-in-python', 'display_url': 'stackoverflow.com/questions/9983…'}, {'url': 'https://t.co/99pBd3CqWs', 'expanded_url': 'https://treyhunner.com/2018/02/python-range-is-not-an-iterator/', 'display_url': 'treyhunner.com/2018/02/python…'}]",[]
1060083003794182144,2018-11-07 08:14:18+00:00,55,11,"#pythontip from @KarolinaBzdusek

people = ['Jane', 'John', 'Jiri']

# Iterate through people
for p in people:
  print(p)

# iterate backwards
for p in reversed(people):
  print(p)

reversed(people) == reversed(people) 
(Why False? Because reversed returns an iterator,not a list) https://t.co/3qb5mxuxbV",False,False,https://twitter.com/python_tip/status/1060083003794182144,[],"[{'url': 'https://t.co/3qb5mxuxbV', 'media_url': 'http://pbs.twimg.com/media/DrYr2wCUcAAAwHb.jpg', 'display_url': 'pic.twitter.com/3qb5mxuxbV'}]"
1059717269809455105,2018-11-06 08:01:00+00:00,50,13,"Einstein notation (numpy.einsum) for geeks and mathematicians that find

>>> einsum('ij,jk->i', A, B)

more elegant than

>>> (A@B).sum(axis=1)

https://t.co/dTGXvokBpM

#numpy #einsum https://t.co/NvyPVkRqMd",False,False,https://twitter.com/python_tip/status/1059717269809455105,"[{'url': 'https://t.co/dTGXvokBpM', 'expanded_url': 'http://ajcr.net/Basic-guide-to-einsum/', 'display_url': 'ajcr.net/Basic-guide-to…'}]","[{'url': 'https://t.co/NvyPVkRqMd', 'media_url': 'http://pbs.twimg.com/media/DrHT9DJUUAAlvmY.jpg', 'display_url': 'pic.twitter.com/NvyPVkRqMd'}]"
1058856295854264320,2018-11-03 22:59:48+00:00,136,52,"Which line of code is eating all the memory? Discover it with memory_profiler:

$ python -m memory_profiler profiling_memory.py

(Unfortunately, this is a bit hard to do in Jupyter notebook. Either use %memit or see %mprun example from https://t.co/2g58UQpuNc) https://t.co/58JwM0YWsZ",False,False,https://twitter.com/python_tip/status/1058856295854264320,"[{'url': 'https://t.co/2g58UQpuNc', 'expanded_url': 'https://jakevdp.github.io/PythonDataScienceHandbook/01.07-timing-and-profiling.html', 'display_url': 'jakevdp.github.io/PythonDataScie…'}]","[{'url': 'https://t.co/58JwM0YWsZ', 'media_url': 'http://pbs.twimg.com/media/DrHP8ebVYAAhN4t.jpg', 'display_url': 'pic.twitter.com/58JwM0YWsZ'}]"
1058474244873601026,2018-11-02 21:41:40+00:00,66,16,"Use expand=True in the str.split() method if you want to split string into several columns in a #pandas dataframe.

s  = pd.Series(['aa-123', 'ff-ds-ds', 'zzz-42', 'xx’])
s.str.split(""-"", 1, expand=True) https://t.co/2s0Epdz5tB",False,False,https://twitter.com/python_tip/status/1058474244873601026,[],"[{'url': 'https://t.co/2s0Epdz5tB', 'media_url': 'http://pbs.twimg.com/media/DrB0q2NXgAUUq9w.jpg', 'display_url': 'pic.twitter.com/2s0Epdz5tB'}]"
1058085817309114369,2018-11-01 19:58:11+00:00,45,17,"Use #selenium to get JavaScript rendered web content.

https://t.co/httYRoTsNH https://t.co/m8jYycoHhs",False,False,https://twitter.com/python_tip/status/1058085817309114369,"[{'url': 'https://t.co/httYRoTsNH', 'expanded_url': 'https://medium.freecodecamp.org/better-web-scraping-in-python-with-selenium-beautiful-soup-and-pandas-d6390592e251', 'display_url': 'medium.freecodecamp.org/better-web-scr…'}]","[{'url': 'https://t.co/m8jYycoHhs', 'media_url': 'http://pbs.twimg.com/media/Dq8TVurWsAAGgVf.jpg', 'display_url': 'pic.twitter.com/m8jYycoHhs'}]"
1057726118403493888,2018-10-31 20:08:52+00:00,16,4,"Draw your own Jack O’Lantern with #python turtle.

https://t.co/0t9r83FiBA https://t.co/NEZtuqIox5",False,False,https://twitter.com/python_tip/status/1057726118403493888,"[{'url': 'https://t.co/0t9r83FiBA', 'expanded_url': 'https://trinket.io/python/1dfa00f900', 'display_url': 'trinket.io/python/1dfa00f…'}]","[{'url': 'https://t.co/NEZtuqIox5', 'media_url': 'http://pbs.twimg.com/media/Dq3MH-6XcAUUkss.jpg', 'display_url': 'pic.twitter.com/NEZtuqIox5'}]"
1057301809495191552,2018-10-30 16:02:49+00:00,27,5,"The splitlines() method returns a list with all the lines in string.

#python 
https://t.co/dFgVJNhfe4",False,False,https://twitter.com/python_tip/status/1057301809495191552,"[{'url': 'https://t.co/dFgVJNhfe4', 'expanded_url': 'https://www.tutorialspoint.com/python3/string_splitlines.htm', 'display_url': 'tutorialspoint.com/python3/string…'}]",[]
1056928098246184960,2018-10-29 15:17:50+00:00,117,34,"Want to know if your string contains any of multiple string patterns? Use any(). 

>>> any(pattern in my_string for pattern in [""hello"", ""world""])

#python https://t.co/hmDohz0so1",False,False,https://twitter.com/python_tip/status/1056928098246184960,[],"[{'url': 'https://t.co/hmDohz0so1', 'media_url': 'http://pbs.twimg.com/media/Dqr2ZfMWsAABUNY.jpg', 'display_url': 'pic.twitter.com/hmDohz0so1'}]"
1056773207489826816,2018-10-29 05:02:21+00:00,1,0,@iam101010 It does not matter.,True,False,https://twitter.com/python_tip/status/1056773207489826816,[],[]
1055644596296802304,2018-10-26 02:17:39+00:00,0,0,@gonzalesedwin Fill in the form. The link is in the tweet.,True,False,https://twitter.com/python_tip/status/1055644596296802304,[],[]
1055631740482375680,2018-10-26 01:26:34+00:00,48,10,"Anybody interested in free $500 Google Cloud credit? This is in addition to $300 you get for a new account ($800 in total):

https://t.co/2K4krRZbp1

For a quick overview what you can accomplish with Python on GCP, see https://t.co/N0x2kVe8By

#cloud #gcp #pythontip",False,False,https://twitter.com/python_tip/status/1055631740482375680,"[{'url': 'https://t.co/2K4krRZbp1', 'expanded_url': 'https://goo.gl/forms/t0lZOEomcksCbLxm1', 'display_url': 'goo.gl/forms/t0lZOEom…'}, {'url': 'https://t.co/N0x2kVe8By', 'expanded_url': 'https://cloud.google.com/python/', 'display_url': 'cloud.google.com/python/'}]",[]
1055350870617903104,2018-10-25 06:50:29+00:00,41,13,"When making an assignment to a variable in a scope that variable is automatically considered to be local:

# this works
lst = [1, 2, 3]
def f1():
    lst.append(5)
f1()

# this throws error
lst = [1, 2, 3]
def f2():
    lst += [5]
f2()

#UnboundLocalError
https://t.co/VZyZsTSV9X",False,False,https://twitter.com/python_tip/status/1055350870617903104,"[{'url': 'https://t.co/VZyZsTSV9X', 'expanded_url': 'https://docs.python.org/2/faq/programming.html#why-am-i-getting-an-unboundlocalerror-when-the-variable-has-a-value', 'display_url': 'docs.python.org/2/faq/programm…'}]",[]
1055325037228507137,2018-10-25 05:07:50+00:00,0,0,"RT @kcemenike: A Nobel Prize has just been awarded to a Python enthusiast 😊

And it's not in Computer Science, it's in Economics 😎 pycoders…",False,True,https://twitter.com/python_tip/status/1055325037228507137,[],[]
1054991000018579456,2018-10-24 07:00:29+00:00,62,14,"Create HTML profiling report from a pandas DataFrame:

https://t.co/3qRiEdBMTo

Example:
https://t.co/ILVesgDSig

#pandasprofiling",False,False,https://twitter.com/python_tip/status/1054991000018579456,"[{'url': 'https://t.co/3qRiEdBMTo', 'expanded_url': 'https://github.com/pandas-profiling/pandas-profiling', 'display_url': 'github.com/pandas-profili…'}, {'url': 'https://t.co/ILVesgDSig', 'expanded_url': 'http://nbviewer.jupyter.org/github/JosPolfliet/pandas-profiling/blob/master/examples/meteorites.ipynb', 'display_url': 'nbviewer.jupyter.org/github/JosPolf…'}]",[]
1054673828154986497,2018-10-23 10:00:10+00:00,0,0,"RT @MiloslavPojman: @python_tip >>> sorted('\N{EGG}\N{CHICKEN}')
['🐔', '🥚']",False,True,https://twitter.com/python_tip/status/1054673828154986497,[],[]
1054607253251088384,2018-10-23 05:35:37+00:00,433,160,"Finally sorted out! Which came first, the chicken or the egg?

>>> x = ['\U0001F95A',  '\U0001F414']
>>> sorted(x)
['🐔', '🥚'] 
#emoji #python3",False,False,https://twitter.com/python_tip/status/1054607253251088384,[],[]
1054447988175659008,2018-10-22 19:02:45+00:00,0,0,@aliakbar_saleh That's an interesting tip by itself. Thanks for it.,True,False,https://twitter.com/python_tip/status/1054447988175659008,[],[]
1054268707575226370,2018-10-22 07:10:21+00:00,50,13,"Print All Cell’s Outputs (not just the last output of the cell):

from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = ""all""

See other #Jupyter tricks from https://t.co/HLbUnAOqh5 https://t.co/kvLfeps7Q3",False,False,https://twitter.com/python_tip/status/1054268707575226370,"[{'url': 'https://t.co/HLbUnAOqh5', 'expanded_url': 'https://forums.fast.ai/t/jupyter-notebook-enhancements-tips-and-tricks/17064/2', 'display_url': 'forums.fast.ai/t/jupyter-note…'}]","[{'url': 'https://t.co/kvLfeps7Q3', 'media_url': 'http://pbs.twimg.com/media/DqGDlfGVYAAm0u6.jpg', 'display_url': 'pic.twitter.com/kvLfeps7Q3'}]"
1053352156487671808,2018-10-19 18:28:19+00:00,73,20,"Try this:

>>> for i in range(20):
...     print(f'Number {i}', end='\r')

(Using carriage return in print makes the line replaceable)

#python",False,False,https://twitter.com/python_tip/status/1053352156487671808,[],[]
1052916751980212225,2018-10-18 13:38:10+00:00,139,44,"Add elements of one dictionary to another with the update() method:

>>> d1 = {'a' : 1, ""b"" : 2}
>>> d2 = {'c' : 2, ""d"" : 42, ""a"" : 3}
>>> d1.update(d2)
>>> d1
{'a': 3, 'b': 2, 'c': 2, 'd': 42}

#python",False,False,https://twitter.com/python_tip/status/1052916751980212225,[],[]
1052583379529596929,2018-10-17 15:33:28+00:00,59,15,"Iterate over #pandas dataframe rows with DataFrame.iterrows()

for i, row in df.iterrows():
    print(row[""title""])
    print(row[""description""]) https://t.co/7ipyCHFc4d",False,False,https://twitter.com/python_tip/status/1052583379529596929,[],"[{'url': 'https://t.co/7ipyCHFc4d', 'media_url': 'http://pbs.twimg.com/media/DpuG8oEW0AMF3DA.jpg', 'display_url': 'pic.twitter.com/7ipyCHFc4d'}]"
1052215207408349184,2018-10-16 15:10:29+00:00,43,14,"re.compile accepts the re.DOTALL flag, which makes . in #regexp match all characters, including newlines.

#python #regex https://t.co/EUyJJ4EThy",False,False,https://twitter.com/python_tip/status/1052215207408349184,[],"[{'url': 'https://t.co/EUyJJ4EThy', 'media_url': 'http://pbs.twimg.com/media/Dpo35FZXoAA7OJa.jpg', 'display_url': 'pic.twitter.com/EUyJJ4EThy'}]"
1051920951997333504,2018-10-15 19:41:13+00:00,57,19,"Select a random sample from #pandas dataframe:

>>> import pandas as pd
>>> df = https://t.co/KBWVZaKP7L_csv(""data.csv"")
>>> df.sample(n=5)

https://t.co/0RZGHoVUHw https://t.co/7fqhb4DUxV",False,False,https://twitter.com/python_tip/status/1051920951997333504,"[{'url': 'https://t.co/KBWVZaKP7L', 'expanded_url': 'http://pd.read', 'display_url': 'pd.read'}, {'url': 'https://t.co/0RZGHoVUHw', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.sample.html', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}]","[{'url': 'https://t.co/7fqhb4DUxV', 'media_url': 'http://pbs.twimg.com/media/DpksOhpWwAggjH4.jpg', 'display_url': 'pic.twitter.com/7fqhb4DUxV'}]"
1050642473486352384,2018-10-12 07:01:00+00:00,69,16,"With Jupytext plugin, you can reads and writes notebooks as plain text files.

https://t.co/Ys4IxsGhS1

#jupyter #jupytext https://t.co/pDMT3Yvlhx",False,False,https://twitter.com/python_tip/status/1050642473486352384,"[{'url': 'https://t.co/Ys4IxsGhS1', 'expanded_url': 'https://towardsdatascience.com/introducing-jupytext-9234fdff6c57', 'display_url': 'towardsdatascience.com/introducing-ju…'}]","[{'url': 'https://t.co/pDMT3Yvlhx', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/Do4WTgHU8AASXlN.jpg', 'display_url': 'pic.twitter.com/pDMT3Yvlhx'}]"
1050280088510423042,2018-10-11 07:01:01+00:00,41,15,"#pythontip from @singhjayp:

reduce(f, seq, initializer) returns a single value constructed by calling 'f' on the first two items of 'seq', then on the result and the next item, and so on.

Set 'initializer' to avoid error if 'seq' is empty.

Example: https://t.co/R09mpIb7kd",False,False,https://twitter.com/python_tip/status/1050280088510423042,[],"[{'url': 'https://t.co/R09mpIb7kd', 'media_url': 'http://pbs.twimg.com/media/Do4UdUHU0AAn4ma.jpg', 'display_url': 'pic.twitter.com/R09mpIb7kd'}]"
1049917697734008832,2018-10-10 07:01:00+00:00,35,7,"Get N minimal values with numpy.argpartition. Example:

import numpy as np

N = 3
random_points = np.random.rand(100,2)
distance_from_origin = (random_points ** 2).sum(axis=1)       
idx_N_near_origin = np.argpartition(distance_from_origin, N)[:N]
random_points[idx_N_near_origin] https://t.co/ba2rMrkjf4",False,False,https://twitter.com/python_tip/status/1049917697734008832,[],"[{'url': 'https://t.co/ba2rMrkjf4', 'media_url': 'http://pbs.twimg.com/media/Do4UzHpU0AAdPTZ.jpg', 'display_url': 'pic.twitter.com/ba2rMrkjf4'}]"
1049555309885149185,2018-10-09 07:01:00+00:00,50,13,"Understanding pandas selection (.iloc vs .loc):

https://t.co/j8uRNmQWuA https://t.co/XP8kReNiRU",False,False,https://twitter.com/python_tip/status/1049555309885149185,"[{'url': 'https://t.co/j8uRNmQWuA', 'expanded_url': 'https://www.shanelynn.ie/select-pandas-dataframe-rows-and-columns-using-iloc-loc-and-ix/', 'display_url': 'shanelynn.ie/select-pandas-…'}, {'url': 'https://t.co/XP8kReNiRU', 'expanded_url': 'https://twitter.com/gauravjain49/status/1040210122864295936', 'display_url': 'twitter.com/gauravjain49/s…'}]",[]
1049192922225283072,2018-10-08 07:01:00+00:00,111,28,"How to read two text files, line by line, simultaneously

with open(file1) as f1, open(file2) as f2:
  for x, y in zip(f1, f2):
     print(f""{x.strip()}\t{y.strip()}"")

https://t.co/jIOjiiJgDh",False,False,https://twitter.com/python_tip/status/1049192922225283072,"[{'url': 'https://t.co/jIOjiiJgDh', 'expanded_url': 'https://stackoverflow.com/a/11295227/7651153', 'display_url': 'stackoverflow.com/a/11295227/765…'}]",[]
1048289177681481729,2018-10-05 19:09:50+00:00,14,3,"explanation: 
s1 = '\u00F1'
s2 = 'n\u0303’

😈😈",False,False,https://twitter.com/python_tip/status/1048289177681481729,[],[]
1048288346693423105,2018-10-05 19:06:32+00:00,53,10,"Not all ñ’s are equal! 
It’s a good idea to normalize #unicode input. Use unicodedata.normalize().

#python https://t.co/44XUeHSXzR",False,False,https://twitter.com/python_tip/status/1048288346693423105,[],"[{'url': 'https://t.co/44XUeHSXzR', 'media_url': 'http://pbs.twimg.com/media/DoxEmziXoAEc6Hu.jpg', 'display_url': 'pic.twitter.com/44XUeHSXzR'}]"
1047839410321084416,2018-10-04 13:22:37+00:00,131,34,"Pretty-print dictionaries with json.dumps

>>> import json
>>> d = {'a':'hello', 'd':1, 'b':5}
>>> print(json.dumps(d, indent=4, sort_keys=True)) https://t.co/9plSBWrkOc",False,False,https://twitter.com/python_tip/status/1047839410321084416,[],"[{'url': 'https://t.co/9plSBWrkOc', 'media_url': 'http://pbs.twimg.com/media/DoqsTn8XUAAlolZ.jpg', 'display_url': 'pic.twitter.com/9plSBWrkOc'}]"
1047574691487997954,2018-10-03 19:50:44+00:00,0,0,"RT @SargonoffAkkad: @python_tip for item in (*x,*y,*z):
    print(item)",False,True,https://twitter.com/python_tip/status/1047574691487997954,[],[]
1047526246656225280,2018-10-03 16:38:13+00:00,165,39,"Use itertools.chain to iterate over items in separate lists:

>>> from itertools import chain
>>> x = [1, 2, 3]
>>> y = [5, 6, 7]
>>> z = ['a', 'b']
>>> for item in chain(x, y, z):
...     print(item)
... 
1
2
3
5
6
7
a
b

#python #itertools",False,False,https://twitter.com/python_tip/status/1047526246656225280,[],[]
1047128390103420928,2018-10-02 14:17:17+00:00,29,11,"Ever wanted to try TPU? Do it for free in #Google #Colaboratory
https://t.co/zzSuXIe0Hy
#python #DeepLearning https://t.co/Z9NxSBZCFT",False,False,https://twitter.com/python_tip/status/1047128390103420928,"[{'url': 'https://t.co/zzSuXIe0Hy', 'expanded_url': 'https://colab.research.google.com/github/tensorflow/tpu/blob/master/tools/colab/shakespeare_with_tpu_and_keras.ipynb', 'display_url': 'colab.research.google.com/github/tensorf…'}, {'url': 'https://t.co/Z9NxSBZCFT', 'expanded_url': 'https://twitter.com/karlafej/status/1045186826665971712', 'display_url': 'twitter.com/karlafej/statu…'}]",[]
1046838233429135362,2018-10-01 19:04:18+00:00,63,17,"If you want a lambda to capture a value ad the definition point and keep it, include it as a default value. 
Compare:
>>> pow1 = [lambda x: x**n for n in range(5)]
and 
pow2 = [lambda x, n=n: x**n for n in range(5)]
#python https://t.co/QOEbNCIEEO",False,False,https://twitter.com/python_tip/status/1046838233429135362,[],"[{'url': 'https://t.co/QOEbNCIEEO', 'media_url': 'http://pbs.twimg.com/media/DocdrXvXkAAej42.jpg', 'display_url': 'pic.twitter.com/QOEbNCIEEO'}]"
1045569043682320384,2018-09-28 07:01:00+00:00,73,10,"Apply a function to each row of a data frame with DataFrame.apply(your_function, axis=1)

Example: https://t.co/vOfaslwFY5",False,False,https://twitter.com/python_tip/status/1045569043682320384,[],"[{'url': 'https://t.co/vOfaslwFY5', 'media_url': 'http://pbs.twimg.com/media/DnvEvFPVAAYu-c8.jpg', 'display_url': 'pic.twitter.com/vOfaslwFY5'}]"
1045378961218318336,2018-09-27 18:25:41+00:00,27,10,"Back to school? Or just want to take Python more seriously?

@pybites offers 20-60 minute challenges you can code and verify in your browser. Try #100DaysOfCode in Python.

https://t.co/g1ikeEho56 (disclaimer: affiliate link)",False,False,https://twitter.com/python_tip/status/1045378961218318336,"[{'url': 'https://t.co/g1ikeEho56', 'expanded_url': 'https://codechalleng.es/via/pythontip', 'display_url': 'codechalleng.es/via/pythontip'}]",[]
1044844267708043264,2018-09-26 07:01:00+00:00,46,12,"When you get an exception in Jupyter notebook, you can use %debug magic to diagnose the problem (run ipdb debugger)

Try it in Colaboratory: https://t.co/QC2IC19z2U

Original source:
https://t.co/lDhNe03UZA",False,False,https://twitter.com/python_tip/status/1044844267708043264,"[{'url': 'https://t.co/QC2IC19z2U', 'expanded_url': 'http://bit.ly/2NxYIhd', 'display_url': 'bit.ly/2NxYIhd'}, {'url': 'https://t.co/lDhNe03UZA', 'expanded_url': 'https://twitter.com/radekosmulski/status/945739571735748609', 'display_url': 'twitter.com/radekosmulski/…'}]",[]
1044483137890279424,2018-09-25 07:06:00+00:00,217,73,"When web-scraping with Python, you can use cookies from your Firefox/Chrome browser:

https://t.co/IbouMJVl4u https://t.co/jNS0F45eLa",False,False,https://twitter.com/python_tip/status/1044483137890279424,"[{'url': 'https://t.co/IbouMJVl4u', 'expanded_url': 'https://bitbucket.org/richardpenman/browsercookie', 'display_url': 'bitbucket.org/richardpenman/…'}]","[{'url': 'https://t.co/jNS0F45eLa', 'media_url': 'http://pbs.twimg.com/media/DnvH_UUUUAAJdoJ.jpg', 'display_url': 'pic.twitter.com/jNS0F45eLa'}]"
1044466344463200256,2018-09-25 05:59:16+00:00,17,6,"If you ever wanted to get into Machine Learning, I highly recommend to sign-up to https://t.co/OzHG7XYu97 Practical Deep Learning For Coders (starting Oct 22, need to register before Oct 12). https://t.co/UyR3yFlxjV",False,False,https://twitter.com/python_tip/status/1044466344463200256,"[{'url': 'https://t.co/OzHG7XYu97', 'expanded_url': 'http://fast.ai', 'display_url': 'fast.ai'}, {'url': 'https://t.co/UyR3yFlxjV', 'expanded_url': 'https://twitter.com/math_rachel/status/1044451257346191361', 'display_url': 'twitter.com/math_rachel/st…'}]",[]
1044322317898108931,2018-09-24 20:26:57+00:00,0,0,"RT @alvinlindstam: @python_tip Though still with the classic grapheme gotchas:

>>> ""🇸🇪"" in ""🇪🇸🇪🇸""
True

🤯",False,True,https://twitter.com/python_tip/status/1044322317898108931,[],[]
1044119492446621696,2018-09-24 07:01:00+00:00,114,15,"One of my favorite things in Python. Testing if a string A contains a substring B is just ""B in A"", for example,

>>> x = 'hello'
>>> y = 'll'
>>> y in x
True

#pythontip",False,False,https://twitter.com/python_tip/status/1044119492446621696,[],[]
1043289661181808640,2018-09-22 00:03:33+00:00,0,0,RT @alexpmil: @python_tip @kondrej from tqdm import tqdm_notebook for pretty HTML5 progress bars in Jupyter.,False,True,https://twitter.com/python_tip/status/1043289661181808640,[],[]
1043257783628361728,2018-09-21 21:56:53+00:00,162,57,"With 'tqdm' you can add a progress meter to any iterable object (see examples in @kondrej's short video):

https://t.co/mS1J4YIZd0

#pythontip #iterable #tqdm",False,False,https://twitter.com/python_tip/status/1043257783628361728,[],"[{'url': 'https://t.co/mS1J4YIZd0', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/DnhTHGGW4AA04DV.jpg', 'display_url': 'pic.twitter.com/mS1J4YIZd0'}]"
1042829817090064386,2018-09-20 17:36:17+00:00,22,6,"Sort objects of the same class that don’t natively support comparison operations using operator.attrgetter

https://t.co/2VAlOgrHKh

#python",False,False,https://twitter.com/python_tip/status/1042829817090064386,"[{'url': 'https://t.co/2VAlOgrHKh', 'expanded_url': 'https://gist.github.com/karlafej/810c4870315be84400e14336f54f602a', 'display_url': 'gist.github.com/karlafej/810c4…'}]",[]
1042396175968677888,2018-09-19 12:53:09+00:00,195,65,"Use ""\N"" escape sequence to print #unicode symbols by name.

>>> print('\N{smiling face with sunglasses}’)
😎

#python",False,False,https://twitter.com/python_tip/status/1042396175968677888,[],[]
1042088083091595265,2018-09-18 16:28:54+00:00,49,12,"Run simple #python code directly from the command line with the -c switch:

python -c ""import datetime; print(https://t.co/FXWDCB9dX6())""",False,False,https://twitter.com/python_tip/status/1042088083091595265,"[{'url': 'https://t.co/FXWDCB9dX6', 'expanded_url': 'http://datetime.datetime.now', 'display_url': 'datetime.datetime.now'}]",[]
1041606233894133760,2018-09-17 08:34:12+00:00,104,30,"When using expand=True in pandas.Series.str.split(), the elements will expand out into separate columns. #python #pandas #python https://t.co/jJVLH2kX4P",False,False,https://twitter.com/python_tip/status/1041606233894133760,[],"[{'url': 'https://t.co/jJVLH2kX4P', 'media_url': 'http://pbs.twimg.com/media/DnSHVlHWsAAMy8f.jpg', 'display_url': 'pic.twitter.com/jJVLH2kX4P'}]"
1040480261782175749,2018-09-14 06:00:00+00:00,45,12,"Ever wanted to plot graphs in the console? Try #bashplotlib package. 

https://t.co/XxAalm2oOk https://t.co/xl3XQtsokf",False,False,https://twitter.com/python_tip/status/1040480261782175749,"[{'url': 'https://t.co/XxAalm2oOk', 'expanded_url': 'https://github.com/glamp/bashplotlib', 'display_url': 'github.com/glamp/bashplot…'}]","[{'url': 'https://t.co/xl3XQtsokf', 'media_url': 'http://pbs.twimg.com/media/Dmtm5FfU4AUCL7-.jpg', 'display_url': 'pic.twitter.com/xl3XQtsokf'}]"
1040117874013089792,2018-09-13 06:00:00+00:00,111,26,"dict(zip(list1, list2)) creates a dictionary from two lists.

Example:
>>> keys = ['red', 'green', 'blue']
>>> values = ['#FF0000','#008000', '#0000FF']
>>> color_dictionary = dict(zip(keys, values)) https://t.co/rYjtdkGvaz",False,False,https://twitter.com/python_tip/status/1040117874013089792,[],"[{'url': 'https://t.co/rYjtdkGvaz', 'media_url': 'http://pbs.twimg.com/media/Dmtk3yQU0AEOxIe.jpg', 'display_url': 'pic.twitter.com/rYjtdkGvaz'}]"
1039755234455605248,2018-09-12 05:59:00+00:00,41,8,"Installing Python packages is sometimes challenging but #virtualenv, #easy_install and #conda are here to assist.

1) A helpful list what to try if you get stuck https://t.co/jIsVAAIwII

2) conda vs. pip, which tool should I use? https://t.co/dR0ULw0Rpx?

https://t.co/28AbHoyF6P https://t.co/VwMiw7ryVv",False,False,https://twitter.com/python_tip/status/1039755234455605248,"[{'url': 'https://t.co/jIsVAAIwII', 'expanded_url': 'https://stackoverflow.com/a/39155105/7651153', 'display_url': 'stackoverflow.com/a/39155105/765…'}, {'url': 'https://t.co/dR0ULw0Rpx', 'expanded_url': 'https://jakevdp.github.io/blog/2016/08/25/conda-myths-and-misconceptions/#Postscript:-Which-Tool-Should-I-Use', 'display_url': 'jakevdp.github.io/blog/2016/08/2…'}, {'url': 'https://t.co/28AbHoyF6P', 'expanded_url': 'https://xkcd.com/1987/', 'display_url': 'xkcd.com/1987/'}, {'url': 'https://t.co/VwMiw7ryVv', 'expanded_url': 'https://twitter.com/vboykis/status/1038067991387295745', 'display_url': 'twitter.com/vboykis/status…'}]",[]
1039393100232314880,2018-09-11 06:00:00+00:00,77,22,"#pythontip from @singhjayp:

zip stops without warning when one of the iterables is
exhausted; consider using https://t.co/yR33kQMdOF_longest to avoid that problem

Example: https://t.co/CEvjrZgXP0",False,False,https://twitter.com/python_tip/status/1039393100232314880,"[{'url': 'https://t.co/yR33kQMdOF', 'expanded_url': 'http://itertools.zip', 'display_url': 'itertools.zip'}]","[{'url': 'https://t.co/CEvjrZgXP0', 'media_url': 'http://pbs.twimg.com/media/DmtUcYYU4AA1VGr.jpg', 'display_url': 'pic.twitter.com/CEvjrZgXP0'}]"
1039030713381605376,2018-09-10 06:00:00+00:00,85,29,"Do not use mutable default arguments (lists, sets, dicts...)

Why? Consider a function:

def append_to(element, to=[]):
    to.append(element)
    return to

>>> append_to(12)
[12]
# looks ok, but...
>>> append_to(42)
[12, 42]
# what? not ok

Explanation: https://t.co/4V26oZgmw1 https://t.co/TNiTcZox71",False,False,https://twitter.com/python_tip/status/1039030713381605376,"[{'url': 'https://t.co/4V26oZgmw1', 'expanded_url': 'https://docs.python-guide.org/writing/gotchas/', 'display_url': 'docs.python-guide.org/writing/gotcha…'}]","[{'url': 'https://t.co/TNiTcZox71', 'media_url': 'http://pbs.twimg.com/media/DmtWbHEU0AAsrnl.jpg', 'display_url': 'pic.twitter.com/TNiTcZox71'}]"
1038129674931654658,2018-09-07 18:19:36+00:00,50,12,"Let your colleagues know what you think about the data quality. Use pictures as data markers in #matplotlib plots:
https://t.co/j0ixbtiOdQ

#python #tgif https://t.co/N2zQcAjw35",False,False,https://twitter.com/python_tip/status/1038129674931654658,"[{'url': 'https://t.co/j0ixbtiOdQ', 'expanded_url': 'http://catherineh.github.io/programming/2017/10/24/emoji-data-markers-in-matplotlib', 'display_url': 'catherineh.github.io/programming/20…'}]","[{'url': 'https://t.co/N2zQcAjw35', 'media_url': 'http://pbs.twimg.com/media/DmgtbR4XcAEyDn_.jpg', 'display_url': 'pic.twitter.com/N2zQcAjw35'}]"
1037681602443325440,2018-09-06 12:39:07+00:00,21,6,"Download and parse newspaper articles with #newspaper3k module.
#python
https://t.co/K4cR5kt8ar",False,False,https://twitter.com/python_tip/status/1037681602443325440,"[{'url': 'https://t.co/K4cR5kt8ar', 'expanded_url': 'https://newspaper.readthedocs.io/en/latest/', 'display_url': 'newspaper.readthedocs.io/en/latest/'}]",[]
1037353846719356928,2018-09-05 14:56:44+00:00,56,20,"Make toy dataframes and series with pandas.util.testing:
>>> import pandas.util.testing as tm
>>> tm.makeDataFrame()

#pandas #python 
https://t.co/lVGKkUrc9I https://t.co/7qr4wGAK8h",False,False,https://twitter.com/python_tip/status/1037353846719356928,"[{'url': 'https://t.co/lVGKkUrc9I', 'expanded_url': 'https://realpython.com/python-pandas-tricks/#2-make-toy-data-structures-with-pandas-testing-module', 'display_url': 'realpython.com/python-pandas-…'}]","[{'url': 'https://t.co/7qr4wGAK8h', 'media_url': 'http://pbs.twimg.com/media/DmVrkRKXoAE7QJ7.jpg', 'display_url': 'pic.twitter.com/7qr4wGAK8h'}]"
1036935333340950529,2018-09-04 11:13:43+00:00,60,12,"Use textwrap module to format text output.
https://t.co/jiuYvHOwIj
#python https://t.co/wtbKMhsUGX",False,False,https://twitter.com/python_tip/status/1036935333340950529,"[{'url': 'https://t.co/jiuYvHOwIj', 'expanded_url': 'https://pymotw.com/3/textwrap/', 'display_url': 'pymotw.com/3/textwrap/'}]","[{'url': 'https://t.co/wtbKMhsUGX', 'media_url': 'http://pbs.twimg.com/media/DmPvJViW4AAfImM.jpg', 'display_url': 'pic.twitter.com/wtbKMhsUGX'}]"
1036606549798662144,2018-09-03 13:27:15+00:00,132,36,"enumerate() takes a second parameter to change the starting count:

>>> names = [""Alice"", ""Bob"", ""Charlie""]
>>> list(enumerate(names, start=101))
[(101, 'Alice'), (102, 'Bob'), (103, 'Charlie')]

https://t.co/SECAO6sci5

#python",False,False,https://twitter.com/python_tip/status/1036606549798662144,"[{'url': 'https://t.co/SECAO6sci5', 'expanded_url': 'https://docs.python.org/3/library/functions.html#enumerate', 'display_url': 'docs.python.org/3/library/func…'}]",[]
1035431760551497728,2018-08-31 07:39:03+00:00,0,0,"RT @zuoike: @python_tip Why not ignore the "".pyc"" in a "".gitignore"" file? 

There is a reason for the byte code existence!",False,True,https://twitter.com/python_tip/status/1035431760551497728,[],[]
1035407587284602880,2018-08-31 06:03:00+00:00,133,52,"Every time you

>>> import your_module

Python creates .pyc file with compiled bytecode. If you want to avoid .pyc files (for example, you do not want to commit them with git), set env. variable PYTHONDONTWRITEBYTECODE or use

import sys
sys.dont_write_bytecode = True",False,False,https://twitter.com/python_tip/status/1035407587284602880,[],[]
1035313151808495616,2018-08-30 23:47:45+00:00,0,0,"@thinkingmonks @lru_cache Not really. This is just a screen capture od Colaboratory notebook.

However, this one looks cool:
https://t.co/MwWVMKI2RY",True,False,https://twitter.com/python_tip/status/1035313151808495616,"[{'url': 'https://t.co/MwWVMKI2RY', 'expanded_url': 'https://carbon.now.sh/', 'display_url': 'carbon.now.sh'}]",[]
1035056020152672256,2018-08-30 06:46:00+00:00,130,46,"Speed-up your code with @lru_cache decorator:

https://t.co/Io3V6H6Dyz

Example - calculation of 35th Fibonacci number
(speedup from 4.32s to 0.000055s): https://t.co/QPonLSbWIm https://t.co/ufPkakn4Nm",False,False,https://twitter.com/python_tip/status/1035056020152672256,"[{'url': 'https://t.co/Io3V6H6Dyz', 'expanded_url': 'https://twitter.com/jakevdp/status/1027298136178319360', 'display_url': 'twitter.com/jakevdp/status…'}, {'url': 'https://t.co/QPonLSbWIm', 'expanded_url': 'https://colab.research.google.com/gist/simecek/61e46b0049a0e4be1c4dba4a3f5c34f8/lru_cache-decorator.ipynb', 'display_url': 'colab.research.google.com/gist/simecek/6…'}]","[{'url': 'https://t.co/ufPkakn4Nm', 'media_url': 'http://pbs.twimg.com/media/Dlj-_F3U8AA9KOf.jpg', 'display_url': 'pic.twitter.com/ufPkakn4Nm'}]"
1034688347409510400,2018-08-29 06:25:00+00:00,50,19,"Execute Jupyter notebooks for different parameters with papermill:

https://t.co/xZkQwT4Nzv

Learn about scheduling and executing notebooks at Netflix:
https://t.co/WJfmomoZ4Z
https://t.co/J1GPZVAaKO https://t.co/q31aA71qaP",False,False,https://twitter.com/python_tip/status/1034688347409510400,"[{'url': 'https://t.co/xZkQwT4Nzv', 'expanded_url': 'https://github.com/nteract/papermill', 'display_url': 'github.com/nteract/paperm…'}, {'url': 'https://t.co/WJfmomoZ4Z', 'expanded_url': 'https://medium.com/netflix-techblog/scheduling-notebooks-348e6c14cfd6', 'display_url': 'medium.com/netflix-techbl…'}, {'url': 'https://t.co/J1GPZVAaKO', 'expanded_url': 'https://medium.com/netflix-techblog/notebook-innovation-591ee3221233', 'display_url': 'medium.com/netflix-techbl…'}]","[{'url': 'https://t.co/q31aA71qaP', 'media_url': 'http://pbs.twimg.com/media/DloqL2EUYAAW2di.jpg', 'display_url': 'pic.twitter.com/q31aA71qaP'}]"
1034327469581455365,2018-08-28 06:31:00+00:00,24,5,"Is this the greatest Twitter scheme of all time? Find the answer with Python:

https://t.co/C5hUZawCir
(thanks @minebocek for inspiration)

https://t.co/kkYIc30boO https://t.co/EiLSyB4kiH",False,False,https://twitter.com/python_tip/status/1034327469581455365,"[{'url': 'https://t.co/C5hUZawCir', 'expanded_url': 'https://colab.research.google.com/gist/simecek/ca1f33adddf8f050287f2ec90d186b49/timeline_scraping.ipynb', 'display_url': 'colab.research.google.com/gist/simecek/c…'}, {'url': 'https://t.co/kkYIc30boO', 'expanded_url': 'https://twitter.com/CostcoRiceBag/status/1032699857117605888', 'display_url': 'twitter.com/CostcoRiceBag/…'}]","[{'url': 'https://t.co/EiLSyB4kiH', 'media_url': 'http://pbs.twimg.com/media/Dloqo3vUwAALXz3.jpg', 'display_url': 'pic.twitter.com/EiLSyB4kiH'}]"
1034151837102825472,2018-08-27 18:53:06+00:00,1,0,"@mhlkong Good question. The solution below is adapted from https://t.co/vBsbiUe08k

def funcC(j):
  return lambda x: x*j

multipliers = [funcC(i) for i in range(3)]

for f in multipliers:
    print(f(2))

AFAIK there is no difference in Python function created using lambda and using def.",True,False,https://twitter.com/python_tip/status/1034151837102825472,"[{'url': 'https://t.co/vBsbiUe08k', 'expanded_url': 'https://stackoverflow.com/a/233835/7651153', 'display_url': 'stackoverflow.com/a/233835/76511…'}]",[]
1034150828985044992,2018-08-27 18:49:05+00:00,0,0,"RT @mhlkong: @python_tip So, is this nonsense, or is there a way of getting the expected result?

I was thinking initialization, but it's a…",False,True,https://twitter.com/python_tip/status/1034150828985044992,[],[]
1033959293580533760,2018-08-27 06:08:00+00:00,56,19,"One of Python gotchas:

multipliers = [lambda x: i*x for i in range(3)]

for f in multipliers:
    print(f(2))

You might expect to see: 0 2 4. While you actually get: 4 4 4.
That is because all functions  refer to the same i and, at the of the cycle, i=2.
https://t.co/a8VUbdb6uB https://t.co/NGhXwe0zH9",False,False,https://twitter.com/python_tip/status/1033959293580533760,"[{'url': 'https://t.co/a8VUbdb6uB', 'expanded_url': 'https://stackoverflow.com/questions/233673/how-do-lexical-closures-work', 'display_url': 'stackoverflow.com/questions/2336…'}]","[{'url': 'https://t.co/NGhXwe0zH9', 'media_url': 'http://pbs.twimg.com/media/DlkFqfMUwAAtZuV.jpg', 'display_url': 'pic.twitter.com/NGhXwe0zH9'}]"
1033126873260146688,2018-08-24 23:00:15+00:00,25,3,"#JupyterCon talk: ""I Don't Like Notebooks"": https://t.co/XFvtPCvA0U

Is your project based on Jupyter notebooks? Can you share tips how you deal with these problems? (either by reply, or through https://t.co/mfUQ9twkWS) https://t.co/m93m2qIEbC",False,False,https://twitter.com/python_tip/status/1033126873260146688,"[{'url': 'https://t.co/XFvtPCvA0U', 'expanded_url': 'https://docs.google.com/presentation/d/1n2RlMdmv1p25Xy5thJUhkKGvjtV-dkAIsUXP-AL4ffI/edit?usp=sharing', 'display_url': 'docs.google.com/presentation/d…'}, {'url': 'https://t.co/mfUQ9twkWS', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}, {'url': 'https://t.co/m93m2qIEbC', 'expanded_url': 'https://twitter.com/joelgrus/status/1033035196428378113', 'display_url': 'twitter.com/joelgrus/statu…'}]",[]
1032998115756912641,2018-08-24 14:28:37+00:00,47,12,"Add padding around strings:

>>> a = ""hello""
>>> ""{:#^20}"".format(a)
'#######hello########'
>>> f""{a:*^11}""
'***hello***'

https://t.co/fMvuoDwTUv
https://t.co/o73VxOHAeg

#python",False,False,https://twitter.com/python_tip/status/1032998115756912641,"[{'url': 'https://t.co/fMvuoDwTUv', 'expanded_url': 'https://chrisalbon.com/python/basics/add_padding_around_string/', 'display_url': 'chrisalbon.com/python/basics/…'}, {'url': 'https://t.co/o73VxOHAeg', 'expanded_url': 'https://docs.python.org/3.7/library/string.html#format-specification-mini-language', 'display_url': 'docs.python.org/3.7/library/st…'}]",[]
1032682881011916800,2018-08-23 17:35:59+00:00,92,27,"#pythontip from @daviddelachurch
Loving #Python3.5 PEP 448 for overwriting a dictionary of default values:

>>> defaults = {""lenny"": ""white"", ""carl"": ""black""}
>>> overwrite = {""lenny"": ""yellow""}
>>> new = {**defaults, **overwrite}
>>> new
{'lenny': 'yellow', 'carl': 'black'}",False,False,https://twitter.com/python_tip/status/1032682881011916800,[],[]
1032262965469294592,2018-08-22 13:47:24+00:00,59,17,"Open a website in default web browser from #python scripts:

import webbrowser
https://t.co/JZLG2SaDuI_new_tab(""https://t.co/PlI6Z7ZLYi"")

https://t.co/1xdOBsK1Xg",False,False,https://twitter.com/python_tip/status/1032262965469294592,"[{'url': 'https://t.co/JZLG2SaDuI', 'expanded_url': 'http://webbrowser.open', 'display_url': 'webbrowser.open'}, {'url': 'https://t.co/PlI6Z7ZLYi', 'expanded_url': 'https://stackoverflow.com', 'display_url': 'stackoverflow.com'}, {'url': 'https://t.co/1xdOBsK1Xg', 'expanded_url': 'https://docs.python.org/3.7/library/webbrowser.html', 'display_url': 'docs.python.org/3.7/library/we…'}]",[]
1031878446299922432,2018-08-21 12:19:27+00:00,44,8,"#pandas: See on which rows the column is changing its value using 

df['col'].ne(df['col'].shift())

(shift() move the whole column down by one space)
https://t.co/GJbLATZD22 https://t.co/0vMj802r4o",False,False,https://twitter.com/python_tip/status/1031878446299922432,"[{'url': 'https://t.co/GJbLATZD22', 'expanded_url': 'https://stackoverflow.com/questions/40348541/pandas-diff-with-string', 'display_url': 'stackoverflow.com/questions/4034…'}]","[{'url': 'https://t.co/0vMj802r4o', 'media_url': 'http://pbs.twimg.com/media/DlH37FkWwAAQZTj.jpg', 'display_url': 'pic.twitter.com/0vMj802r4o'}]"
1031520224208728065,2018-08-20 12:36:00+00:00,37,11,"Get a day of the week for a given date with https://t.co/PbVoFZYd0h.weekday().
(Monday is 0, Sunday is 6):
>>> new_year = https://t.co/PbVoFZYd0h(2019, 1, 1)
>>> new_year.weekday()
1
#python #datetime",False,False,https://twitter.com/python_tip/status/1031520224208728065,"[{'url': 'https://t.co/PbVoFZYd0h', 'expanded_url': 'http://datetime.date', 'display_url': 'datetime.date'}, {'url': 'https://t.co/PbVoFZYd0h', 'expanded_url': 'http://datetime.date', 'display_url': 'datetime.date'}]",[]
1030326397665914880,2018-08-17 05:32:10+00:00,54,17,"Redirecting of stdout in #Python3:

>>> contextlib.redirect_stdout(f)

See an example from @raymondh:
https://t.co/ZtYLZcWAli

And four other ways to redirect stdout from https://t.co/tJs6sfe5GX https://t.co/chfn252bvg",False,False,https://twitter.com/python_tip/status/1030326397665914880,"[{'url': 'https://t.co/ZtYLZcWAli', 'expanded_url': 'https://twitter.com/raymondh/status/1030160198600548352', 'display_url': 'twitter.com/raymondh/statu…'}, {'url': 'https://t.co/tJs6sfe5GX', 'expanded_url': 'https://www.blog.pythonlibrary.org/2016/06/16/python-101-redirecting-stdout/', 'display_url': 'blog.pythonlibrary.org/2016/06/16/pyt…'}]","[{'url': 'https://t.co/chfn252bvg', 'media_url': 'http://pbs.twimg.com/media/Dkx0VldU4AAdxGV.jpg', 'display_url': 'pic.twitter.com/chfn252bvg'}]"
1030117680563380224,2018-08-16 15:42:48+00:00,0,0,"@messa_cz It depends: 
* collections.namedtuple is - well - a tuple, therefore immutable
* dataclasses.dataclass is mutable",True,False,https://twitter.com/python_tip/status/1030117680563380224,[],[]
1029973782146904064,2018-08-16 06:11:00+00:00,87,28,"By default, Python compare objects using their ids. Consider the following class:

class Number:
    def __init__(self, x):
        self.x = x

n1 = Number(1)
n2 = Number(1)
n1 == n2 # False 😲😲

The elegant solution to this problem is to use #dataclasses https://t.co/wxBtxfyLPR",False,False,https://twitter.com/python_tip/status/1029973782146904064,"[{'url': 'https://t.co/wxBtxfyLPR', 'expanded_url': 'http://bit.ly/2MhhMQu', 'display_url': 'bit.ly/2MhhMQu'}]",[]
1029909779672530945,2018-08-16 01:56:40+00:00,0,0,"@fonnesbeck This is Colaboratory (Google's flavor of Jupyter Notebook), see https://t.co/cqayFpyj4J",True,False,https://twitter.com/python_tip/status/1029909779672530945,"[{'url': 'https://t.co/cqayFpyj4J', 'expanded_url': 'https://colab.research.google.com/gist/simecek/780defbae955902aa1086ef8298a23b2/line-profiler.ipynb', 'display_url': 'colab.research.google.com/gist/simecek/7…'}]",[]
1029632055284363264,2018-08-15 07:33:06+00:00,326,96,Wanna know which line of your function is eating all the time? Measure it with #lprun: https://t.co/1NpmVNH6F1,False,False,https://twitter.com/python_tip/status/1029632055284363264,[],"[{'url': 'https://t.co/1NpmVNH6F1', 'media_url': 'http://pbs.twimg.com/media/Dkn7CBLU4AAN7td.jpg', 'display_url': 'pic.twitter.com/1NpmVNH6F1'}]"
1029249762942377984,2018-08-14 06:14:00+00:00,53,22,">>> from contextlib import suppress
>>> with suppress(SpecificError): doing_something()

will not propagate SpecificError if it is raised while doing_something()

#pythontip #exceptions https://t.co/zMPF7gagV5",False,False,https://twitter.com/python_tip/status/1029249762942377984,[],"[{'url': 'https://t.co/zMPF7gagV5', 'media_url': 'http://pbs.twimg.com/media/DkZa60ZU4AE9oVr.jpg', 'display_url': 'pic.twitter.com/zMPF7gagV5'}]"
1028883851844747265,2018-08-13 06:00:00+00:00,31,10,"Unlike C, Java, R, …, there is no overloading of functions in #Python, but

1) @functools.singledispatch = define specific implementations based on the type of first argument
https://t.co/YqYaI5ioA4

2) @typing.overload = for different number of arguments
https://t.co/rTCFE80Ysu",False,False,https://twitter.com/python_tip/status/1028883851844747265,"[{'url': 'https://t.co/YqYaI5ioA4', 'expanded_url': 'https://docs.python.org/3/library/functools.html#functools.singledispatch', 'display_url': 'docs.python.org/3/library/func…'}, {'url': 'https://t.co/rTCFE80Ysu', 'expanded_url': 'https://stackoverflow.com/a/7113162/7651153', 'display_url': 'stackoverflow.com/a/7113162/7651…'}]",[]
1027899866976931840,2018-08-10 12:50:00+00:00,60,13,"bqplot is a library for interactive plotting in #Jupyter notebooks. Try it yourself: 
https://t.co/9RfOjnXdUP 

Histogram idea: @NicholasStrayer 

More examples at bqplot github repo: https://t.co/wn2f15vuYP https://t.co/d71fOXNMMx",False,False,https://twitter.com/python_tip/status/1027899866976931840,"[{'url': 'https://t.co/9RfOjnXdUP', 'expanded_url': 'https://mybinder.org/v2/gh/karlafej/python_tip/master?filepath=notebooks/20180810_bqplot.ipynb', 'display_url': 'mybinder.org/v2/gh/karlafej…'}, {'url': 'https://t.co/wn2f15vuYP', 'expanded_url': 'https://github.com/bloomberg/bqplot', 'display_url': 'github.com/bloomberg/bqpl…'}]","[{'url': 'https://t.co/d71fOXNMMx', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/DkPPrYiX4AArDvj.jpg', 'display_url': 'pic.twitter.com/d71fOXNMMx'}]"
1027509800391856131,2018-08-09 11:00:01+00:00,107,44,"Add annotations to your #python functions to give hints about  how the function is supposed to be used. (They are not type checks and they don't alter python behavior!)

def myfun(a:int, b:int) -> int:
    return a + b https://t.co/Qs7TRN6JHX",False,False,https://twitter.com/python_tip/status/1027509800391856131,[],"[{'url': 'https://t.co/Qs7TRN6JHX', 'media_url': 'http://pbs.twimg.com/media/DkFKop1XgAAbBhx.jpg', 'display_url': 'pic.twitter.com/Qs7TRN6JHX'}]"
1027176351873286144,2018-08-08 12:55:00+00:00,52,15,"Get number of Null values in a #pandas dataframe:

df.isnull().sum() (column wise)

df.isnull().sum(axis=1) (row wise)

#python https://t.co/UZhQyUjYqM",False,False,https://twitter.com/python_tip/status/1027176351873286144,[],"[{'url': 'https://t.co/UZhQyUjYqM', 'media_url': 'http://pbs.twimg.com/media/DkFDNLCXcAAyhMZ.jpg', 'display_url': 'pic.twitter.com/UZhQyUjYqM'}]"
1026725629390020608,2018-08-07 07:04:00+00:00,54,15,"Use https://t.co/KBWVZb2pZj_clipboard() to copy and paste a table into dataframe.
https://t.co/xAeOLeM4IE
#pandas",False,False,https://twitter.com/python_tip/status/1026725629390020608,"[{'url': 'https://t.co/KBWVZb2pZj', 'expanded_url': 'http://pd.read', 'display_url': 'pd.read'}, {'url': 'https://t.co/xAeOLeM4IE', 'expanded_url': 'https://stackoverflow.com/questions/31610889/how-to-copy-paste-dataframe-from-stackoverflow-into-python', 'display_url': 'stackoverflow.com/questions/3161…'}]",[]
1026445347776880641,2018-08-06 12:30:15+00:00,0,0,"RT @A_Mc_Carthy: @python_tip Thanks for that, I've just written a short blog post (my first this year... 🙄) describing how the flags, and t…",False,True,https://twitter.com/python_tip/status/1026445347776880641,[],[]
1026354685891014656,2018-08-06 06:30:00+00:00,742,382,"Be careful when reversing #unicode strings. You may be surprised…

>>> s = ""Welcome in 🇬🇧”
>>> s[::-1]
'🇧🇬 ni emocleW'

(thanks @piskvor for the inspiration!) https://t.co/JKNb0MotzQ",False,False,https://twitter.com/python_tip/status/1026354685891014656,[],"[{'url': 'https://t.co/JKNb0MotzQ', 'media_url': 'http://pbs.twimg.com/media/Dj2ITdWXoAIhuml.jpg', 'display_url': 'pic.twitter.com/JKNb0MotzQ'}]"
1025262991443259392,2018-08-03 06:12:00+00:00,21,6,"A simple #matplotlib animation

https://t.co/R7XSFkeLvv

Try it yourself in Colab: https://t.co/ye3uM8jufp https://t.co/n309X3bdxQ",False,False,https://twitter.com/python_tip/status/1025262991443259392,"[{'url': 'https://t.co/R7XSFkeLvv', 'expanded_url': 'http://jakevdp.github.io/blog/2013/05/28/a-simple-animation-the-magic-triangle/', 'display_url': 'jakevdp.github.io/blog/2013/05/2…'}, {'url': 'https://t.co/ye3uM8jufp', 'expanded_url': 'http://bit.ly/2vehJu3', 'display_url': 'bit.ly/2vehJu3'}]","[{'url': 'https://t.co/n309X3bdxQ', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/DjogRoiUYAAS7Ob.jpg', 'display_url': 'pic.twitter.com/n309X3bdxQ'}]"
1025070401632657408,2018-08-02 17:26:43+00:00,0,0,RT @hroncok: @python_tip Why the unnecessary dance with builtins? https://t.co/yFZw09HmL0,False,True,https://twitter.com/python_tip/status/1025070401632657408,[],"[{'url': 'https://t.co/yFZw09HmL0', 'media_url': 'http://pbs.twimg.com/media/DjlR9PYW0AAWBZz.jpg', 'display_url': 'pic.twitter.com/yFZw09HmL0'}]"
1024912431695454208,2018-08-02 06:59:00+00:00,65,24,"In #Python3, print is a function and you can override it (NOT a recommended approach, but a hack that can be useful).

Example: https://t.co/E64uSjWpnR https://t.co/QVHmcX0M93",False,False,https://twitter.com/python_tip/status/1024912431695454208,"[{'url': 'https://t.co/E64uSjWpnR', 'expanded_url': 'http://bit.ly/2Kijpri', 'display_url': 'bit.ly/2Kijpri'}]","[{'url': 'https://t.co/QVHmcX0M93', 'media_url': 'http://pbs.twimg.com/media/DjauSVRV4AE3MWC.jpg', 'display_url': 'pic.twitter.com/QVHmcX0M93'}]"
1024542242885824512,2018-08-01 06:28:00+00:00,17,3,"Kaggle BlackJack microchallenge:

https://t.co/eYxoTEBAYc

Simple if-condition strategy wins 41.5% games (see below). Can you get over 42.0%?

Check creative ideas in the discussion:
• Decision trees https://t.co/6AOBLrj0R8
• Deep Reinforcement Learning, https://t.co/JUbadHgPD7 https://t.co/YOagu7ClJ0",False,False,https://twitter.com/python_tip/status/1024542242885824512,"[{'url': 'https://t.co/eYxoTEBAYc', 'expanded_url': 'http://ow.ly/Cmgg30l6fvJ', 'display_url': 'ow.ly/Cmgg30l6fvJ'}, {'url': 'https://t.co/6AOBLrj0R8', 'expanded_url': 'https://www.kaggle.com/kmader/july-24-micro-challenge', 'display_url': 'kaggle.com/kmader/july-24…'}, {'url': 'https://t.co/JUbadHgPD7', 'expanded_url': 'https://www.kaggle.com/bockjo/july-24-micro-challenge', 'display_url': 'kaggle.com/bockjo/july-24…'}]","[{'url': 'https://t.co/YOagu7ClJ0', 'media_url': 'http://pbs.twimg.com/media/DjanO1eU0AAUgyP.jpg', 'display_url': 'pic.twitter.com/YOagu7ClJ0'}]"
1024536538930204672,2018-08-01 06:05:20+00:00,0,0,"RT @ThePSF: New Release: NumPy 1.15.0 is a release with an unusual number of cleanups, many deprecations of old functions, and improvements…",False,True,https://twitter.com/python_tip/status/1024536538930204672,[],[]
1024351590101090304,2018-07-31 17:50:25+00:00,0,0,@samzuckerman See the source code: https://t.co/hKLOQkYrmJ,True,False,https://twitter.com/python_tip/status/1024351590101090304,"[{'url': 'https://t.co/hKLOQkYrmJ', 'expanded_url': 'http://bit.ly/2vipC0z', 'display_url': 'bit.ly/2vipC0z'}]",[]
1024180011300016128,2018-07-31 06:28:37+00:00,0,0,"@ori75660 No, thank you!",True,False,https://twitter.com/python_tip/status/1024180011300016128,[],[]
1024178421696323585,2018-07-31 06:22:18+00:00,78,23,"#pythontip from @ori75660:

Check the temperature of your CPU using Python (and other cool tricks)
https://t.co/rnwhMjqGjH

>>> import psutil
>>> psutil.sensors_battery()
>>> psutil.sensors_temperatures()

Send us your own #pythontip to https://t.co/mfUQ9twkWS",False,False,https://twitter.com/python_tip/status/1024178421696323585,"[{'url': 'https://t.co/rnwhMjqGjH', 'expanded_url': 'https://dapythonista.com/2018/05/18/check-the-temperature-of-your-cpu-using-python-and-other-cool-tricks/', 'display_url': 'dapythonista.com/2018/05/18/che…'}, {'url': 'https://t.co/mfUQ9twkWS', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]",[]
1023995362183282688,2018-07-30 18:14:53+00:00,0,0,@sinebase I do not have much experience. Note that GIF has just 12 frames.,True,False,https://twitter.com/python_tip/status/1023995362183282688,[],[]
1023994715652247552,2018-07-30 18:12:19+00:00,2,0,@A_K_Nain no idea. test it and let others know.,True,False,https://twitter.com/python_tip/status/1023994715652247552,[],[]
1023842213116035073,2018-07-30 08:06:20+00:00,185,54,"Create an animated GIF with 'imageio', Python library for reading and writing image data.

>>> from imageio import imread, mimsave
>>> images = []
>>> for f in filenames:
    images.append(imread(f))
>>> mimsave('movie.gif', images)

Source code: https://t.co/hKLOQkYrmJ https://t.co/xUoFCs77GN",False,False,https://twitter.com/python_tip/status/1023842213116035073,"[{'url': 'https://t.co/hKLOQkYrmJ', 'expanded_url': 'http://bit.ly/2vipC0z', 'display_url': 'bit.ly/2vipC0z'}]","[{'url': 'https://t.co/xUoFCs77GN', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/DjVpAegU8AEaZGi.jpg', 'display_url': 'pic.twitter.com/xUoFCs77GN'}]"
1022823248424259584,2018-07-27 12:37:20+00:00,41,5,"pathlib.Path has methods for reading and writing files:

from pathlib import Path
fname = Path('sometxt.txt')
fname.write_text(""Pathlib is great"")
print(https://t.co/XNpZpBgL7D_text())

#python3 #python #pathlib",False,False,https://twitter.com/python_tip/status/1022823248424259584,"[{'url': 'https://t.co/XNpZpBgL7D', 'expanded_url': 'http://fname.read', 'display_url': 'fname.read'}]",[]
1022431882183667712,2018-07-26 10:42:11+00:00,75,26,"Get the directory path of a #python script from within itself:

import os
print(os.path.dirname(os.path.realpath(__file__)))

or

from pathlib import Path
print(str(Path(__file__).resolve().parent))",False,False,https://twitter.com/python_tip/status/1022431882183667712,[],[]
1022070362178285568,2018-07-25 10:45:38+00:00,27,4,"Check from which module was the function imported: foo.__module__

>>> sum.__module__
'builtins'
>>> from numpy import * # don't do this ;)
>>> sum.__module__
'numpy.core.fromnumeric'

#python",False,False,https://twitter.com/python_tip/status/1022070362178285568,[],[]
1021845471885549568,2018-07-24 19:52:00+00:00,54,9,"You can use #python to multiply strings or tuples:
>>> 4*'ab'
'abababab'
>>> 3*('python', 'tip')
('python', 'tip', 'python', 'tip', 'python', 'tip')
>>> 2*(3,1)
(3, 1, 3, 1)",False,False,https://twitter.com/python_tip/status/1021845471885549568,[],[]
1021452996868124672,2018-07-23 17:52:26+00:00,49,21,"Check https://t.co/SQdCVjSiC4 3.0: fast rendering of big datasets, integration with #Jupyter notebooks... https://t.co/8NtBgPXoo4 #plotly #python",False,False,https://twitter.com/python_tip/status/1021452996868124672,"[{'url': 'https://t.co/SQdCVjSiC4', 'expanded_url': 'http://plotly.py', 'display_url': 'plotly.py'}, {'url': 'https://t.co/8NtBgPXoo4', 'expanded_url': 'https://medium.com/@plotlygraphs/introducing-plotly-py-3-0-0-7bb1333f69c6', 'display_url': 'medium.com/@plotlygraphs/…'}]",[]
1020187800338083840,2018-07-20 06:05:00+00:00,29,9,"If an object without any references is modified, does it make a sound? Refresh you modern pandas skills from https://t.co/RN6ai97lxq

* Method Chaining
* Indexes
* Fast Pandas
* Tidy Data
* Visualization
* Time Series
* Scaling

#pythontip #pandas https://t.co/XsquMYT9Ql",False,False,https://twitter.com/python_tip/status/1020187800338083840,"[{'url': 'https://t.co/RN6ai97lxq', 'expanded_url': 'https://tomaugspurger.github.io/modern-1-intro.html', 'display_url': 'tomaugspurger.github.io/modern-1-intro…'}]","[{'url': 'https://t.co/XsquMYT9Ql', 'media_url': 'http://pbs.twimg.com/media/DiUmPgfVMAAFOaL.jpg', 'display_url': 'pic.twitter.com/XsquMYT9Ql'}]"
1019825126865424384,2018-07-19 06:03:52+00:00,31,14,"#SciPy2018 (Scientific Computing with Python) videos are now available on YouTube:

https://t.co/MmpHUhwY5A",False,False,https://twitter.com/python_tip/status/1019825126865424384,"[{'url': 'https://t.co/MmpHUhwY5A', 'expanded_url': 'https://www.youtube.com/playlist?list=PLYx7XA2nY5Gd-tNhm79CNMe_qvi35PgUR', 'display_url': 'youtube.com/playlist?list=…'}]",[]
1019459417513738240,2018-07-18 05:50:40+00:00,63,28,"You most likely know about 'global' and 'local' variables but do you know 'nonlocal'?

https://t.co/rmQjUgUKfZ
https://t.co/XgaF26MKHX

#python3 #pythontip #nonlocal https://t.co/RgU1rqWy59",False,False,https://twitter.com/python_tip/status/1019459417513738240,"[{'url': 'https://t.co/rmQjUgUKfZ', 'expanded_url': 'https://stackoverflow.com/questions/1261875/python-nonlocal-statement', 'display_url': 'stackoverflow.com/questions/1261…'}, {'url': 'https://t.co/XgaF26MKHX', 'expanded_url': 'https://docs.python.org/3/tutorial/classes.html#scopes-and-namespaces-example', 'display_url': 'docs.python.org/3/tutorial/cla…'}]","[{'url': 'https://t.co/RgU1rqWy59', 'media_url': 'http://pbs.twimg.com/media/DiXYD4jVMAUVCYQ.jpg', 'display_url': 'pic.twitter.com/RgU1rqWy59'}]"
1019099384657506305,2018-07-17 06:00:01+00:00,8,1,"Troubles with #TensorFlow installation? You are not alone, check

https://t.co/cMVpNwFkMF",False,False,https://twitter.com/python_tip/status/1019099384657506305,"[{'url': 'https://t.co/cMVpNwFkMF', 'expanded_url': 'http://www.laurencemoroney.com/tensorflow-to-gpu-or-not-to-gpu/', 'display_url': 'laurencemoroney.com/tensorflow-to-…'}]",[]
1018905600921489408,2018-07-16 17:10:00+00:00,54,14,"To test whether some class C1 is a subclass of another class C2:

>>> issubclass(C1, C2)

Examples: https://t.co/99OgP7fan9",False,False,https://twitter.com/python_tip/status/1018905600921489408,[],"[{'url': 'https://t.co/99OgP7fan9', 'media_url': 'http://pbs.twimg.com/media/DiPhGbqUEAINOrl.jpg', 'display_url': 'pic.twitter.com/99OgP7fan9'}]"
1017985580846551040,2018-07-14 04:14:10+00:00,100,31,"#pythontip from @DynamicWebPaige: if you ever want to inspect the source code for a module that you've imported, but don't want to waste time hunting around for the .py file

import inspect
import pprint

pprint.pprint(inspect.getsource( <module_name>))",False,False,https://twitter.com/python_tip/status/1017985580846551040,[],[]
1017312426268639232,2018-07-12 07:39:17+00:00,49,17,"• del does not delete the object
• del just decrease the reference counter
• __del__ is an object destroyer, avoid using it

For more see @DasIstHerrKuska's #pyconcz talk: https://t.co/unjLh0j185",False,False,https://twitter.com/python_tip/status/1017312426268639232,"[{'url': 'https://t.co/unjLh0j185', 'expanded_url': 'https://youtu.be/ALDUKcg6W9o?t=23m47s', 'display_url': 'youtu.be/ALDUKcg6W9o?t=…'}]",[]
1016945324005515264,2018-07-11 07:20:33+00:00,52,9,"In #Jupyter notebook, %lsmagic gives you a list of all available magics.
#pythontip",False,False,https://twitter.com/python_tip/status/1016945324005515264,[],[]
1016663178816737282,2018-07-10 12:39:25+00:00,113,34,"For string concatenation, s1 += s2 + s3 is faster than s1 = s1 + s2 + s3 because s1 is not destroyed while calculating the complete string.

https://t.co/5qn3jDzSHU

#python https://t.co/dmgqkdJ8p8",False,False,https://twitter.com/python_tip/status/1016663178816737282,"[{'url': 'https://t.co/5qn3jDzSHU', 'expanded_url': 'https://www.codementor.io/satwikkansal/do-you-really-think-you-know-strings-in-python-fnxh8mtha', 'display_url': 'codementor.io/satwikkansal/d…'}]","[{'url': 'https://t.co/dmgqkdJ8p8', 'media_url': 'http://pbs.twimg.com/media/Dhvpw7XWAAAHEFr.jpg', 'display_url': 'pic.twitter.com/dmgqkdJ8p8'}]"
1016286137906757632,2018-07-09 11:41:11+00:00,27,6,"Confused about #pandas indexing? Check this blogpost by @_brohrer_ : https://t.co/aklBubSzMg

#pythontip https://t.co/pIZLy6mtWH",False,False,https://twitter.com/python_tip/status/1016286137906757632,"[{'url': 'https://t.co/aklBubSzMg', 'expanded_url': 'http://brohrer.github.io/dataframe_indexing.html', 'display_url': 'brohrer.github.io/dataframe_inde…'}]","[{'url': 'https://t.co/pIZLy6mtWH', 'media_url': 'http://pbs.twimg.com/media/DhqSbx9XkAApUgr.jpg', 'display_url': 'pic.twitter.com/pIZLy6mtWH'}]"
1015127204320239616,2018-07-06 06:56:00+00:00,95,40,"How Encoding Works in Python2 vs Python3? The best explanation of encode, decode and UTF-8 I have ever seen:

https://t.co/esPYEXbHaR https://t.co/hvr6x0sMvH",False,False,https://twitter.com/python_tip/status/1015127204320239616,"[{'url': 'https://t.co/esPYEXbHaR', 'expanded_url': 'https://pybit.es/python-encodings.html', 'display_url': 'pybit.es/python-encodin…'}]","[{'url': 'https://t.co/hvr6x0sMvH', 'media_url': 'http://pbs.twimg.com/media/DhASe_cVQAARQrk.jpg', 'display_url': 'pic.twitter.com/hvr6x0sMvH'}]"
1014762551857557509,2018-07-05 06:47:00+00:00,43,18,"#pythontip from @rajatktb:

Use generators when dealing with large data set in deep learning tasks. Each pass of the generator can go for an I/O call.

For example 
https://t.co/VbfmsgXl1E

Send us your tips to https://t.co/mfUQ9teK5k",False,False,https://twitter.com/python_tip/status/1014762551857557509,"[{'url': 'https://t.co/VbfmsgXl1E', 'expanded_url': 'https://stanford.edu/~shervine/blog/keras-how-to-generate-data-on-the-fly.html', 'display_url': 'stanford.edu/~shervine/blog…'}, {'url': 'https://t.co/mfUQ9teK5k', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]",[]
1014388335438004224,2018-07-04 06:00:00+00:00,126,41,"zip() is its own inverse (via @jakevdp):

>>> data = [(1, 2, 3), ('a', 'b', 'c')]
>>> zipped = zip(*data)
>>> zipped
[(1, 'a'), (2, 'b'), (3, 'c')]
>>> unzipped = zip(*zipped)
>>> unzipped
[(1, 2, 3), ('a', 'b', 'c')]

#pythontip #zip",False,False,https://twitter.com/python_tip/status/1014388335438004224,[],[]
1014032239061954561,2018-07-03 06:25:00+00:00,76,14,"Domino animation in 10 lines of #Python code:

https://t.co/LI2SFekFlm https://t.co/724pKDMmjg",False,False,https://twitter.com/python_tip/status/1014032239061954561,"[{'url': 'https://t.co/LI2SFekFlm', 'expanded_url': 'http://slicker.me/blender/domino.htm', 'display_url': 'slicker.me/blender/domino…'}]","[{'url': 'https://t.co/724pKDMmjg', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/DhAHAs2U8AA4x3m.jpg', 'display_url': 'pic.twitter.com/724pKDMmjg'}]"
1013671361259008000,2018-07-02 06:31:00+00:00,72,16,"Get a list of keywords in #Python:

>> import keyword
>> print(keyword.kwlist)

#pythontip via https://t.co/fL1ALJPoAb",False,False,https://twitter.com/python_tip/status/1013671361259008000,"[{'url': 'https://t.co/fL1ALJPoAb', 'expanded_url': 'https://twitter.com/vboykis/status/1011414603769761792', 'display_url': 'twitter.com/vboykis/status…'}]",[]
1012698634280824834,2018-06-29 14:05:44+00:00,33,8,"Practise your coding skills by solving puzzles. Try CodinGame https://t.co/GV8xn3QKAY

#python #java #javascript #ruby and more...",False,False,https://twitter.com/python_tip/status/1012698634280824834,"[{'url': 'https://t.co/GV8xn3QKAY', 'expanded_url': 'https://www.codingame.com/', 'display_url': 'codingame.com'}]",[]
1012325041252552704,2018-06-28 13:21:12+00:00,116,62,"#Python 3.7 is released. Data classes, built-in breakpoint(), context variables and more.
https://t.co/udgh1vyXqN",False,False,https://twitter.com/python_tip/status/1012325041252552704,"[{'url': 'https://t.co/udgh1vyXqN', 'expanded_url': 'https://realpython.com/python37-new-features/', 'display_url': 'realpython.com/python37-new-f…'}]",[]
1011981261978599426,2018-06-27 14:35:09+00:00,55,20,"Use maxsplit parameter in str.split to specify maximum number of splits to be done:
>>> s = ""aa bb cc dd""
>>> s.split(maxsplit=1)
['aa', 'bb cc dd']

#python
https://t.co/o3YxgkOwUj",False,False,https://twitter.com/python_tip/status/1011981261978599426,"[{'url': 'https://t.co/o3YxgkOwUj', 'expanded_url': 'https://docs.python.org/3/library/stdtypes.html#str.split', 'display_url': 'docs.python.org/3/library/stdt…'}]",[]
1011594171914899458,2018-06-26 12:56:59+00:00,44,16,"Empty sequence evaluates to False in #python:

>>> lst = list()
>>> if lst:
...     print(lst)
... else:
...     print(""Empty"")
...
Empty",False,False,https://twitter.com/python_tip/status/1011594171914899458,[],[]
1011252841447677953,2018-06-25 14:20:40+00:00,46,15,Looking for a project template for #DataScience projects in #Python? Try #cookiecutter data science. https://t.co/f2Yf4oSbrA,False,False,https://twitter.com/python_tip/status/1011252841447677953,"[{'url': 'https://t.co/f2Yf4oSbrA', 'expanded_url': 'https://drivendata.github.io/cookiecutter-data-science/', 'display_url': 'drivendata.github.io/cookiecutter-d…'}]",[]
1010040389263245312,2018-06-22 06:02:49+00:00,64,24,"The best way to learn to code is by doing it. For a beginner it could be hard to find a project. @pybites prepared Python exercises and projects for you, check it out at https://t.co/oUKn3w62vv

Try one, join #100DaysOfCode and go with us through 
https://t.co/7evFVZC5FG",False,False,https://twitter.com/python_tip/status/1010040389263245312,"[{'url': 'https://t.co/oUKn3w62vv', 'expanded_url': 'http://CodeChalleng.es', 'display_url': 'CodeChalleng.es'}, {'url': 'https://t.co/7evFVZC5FG', 'expanded_url': 'http://talkpython.fm/100days', 'display_url': 'talkpython.fm/100days'}]",[]
1009632246892937217,2018-06-21 03:01:00+00:00,43,14,"Getting the class name of an instance X:

X.__class__.__name__

or 

type(X).__name__

https://t.co/s23ZKOaorY https://t.co/pwZmtKfJbS",False,False,https://twitter.com/python_tip/status/1009632246892937217,"[{'url': 'https://t.co/s23ZKOaorY', 'expanded_url': 'https://stackoverflow.com/questions/510972/getting-the-class-name-of-an-instance-in-python', 'display_url': 'stackoverflow.com/questions/5109…'}]","[{'url': 'https://t.co/pwZmtKfJbS', 'media_url': 'http://pbs.twimg.com/media/DgLqtCbU8AANkbs.jpg', 'display_url': 'pic.twitter.com/pwZmtKfJbS'}]"
1009323700116545537,2018-06-20 06:34:57+00:00,62,25,"#pythontip from @singhjayp:

Search multiple dicts using ChainMap

from collections import ChainMap

countryCapital = {'US':'Washinton', 'IN':'Delhi'}
stateCapital = {'MA':'Boston', 'KA': 'Bangalore'}
x = ChainMap(countryCapital, stateCapital)
print(x['IN'], x['MA']) https://t.co/1eTBLtzVsY",False,False,https://twitter.com/python_tip/status/1009323700116545537,[],"[{'url': 'https://t.co/1eTBLtzVsY', 'media_url': 'http://pbs.twimg.com/media/DgHV2W6U0AAEYtr.jpg', 'display_url': 'pic.twitter.com/1eTBLtzVsY'}]"
1009142068503965696,2018-06-19 18:33:12+00:00,0,0,"RT @zuoike: @python_tip @EnCuKou @pythoncz For Python 3, it's supposed to be
codeobj = compile('x = 2\nprint(""X is"", x)', 'fakemodule', 'ex…",False,True,https://twitter.com/python_tip/status/1009142068503965696,[],[]
1008977453581135872,2018-06-19 07:39:05+00:00,23,7,"☠ Dark magic ☠: built-in 'compile' and 'exec' functions enable you to compile and run Python code WITHIN Python:

>>> codeobj = compile('x = 2\nprint ""X is"", x', 'fakemodule', 'exec')
>>> exec(codeobj)
X is 2

Learn more from @EnCuKou talk at @pythoncz:

https://t.co/3l0Kqi8xGC https://t.co/Bnb8Ht07u7",False,False,https://twitter.com/python_tip/status/1008977453581135872,"[{'url': 'https://t.co/3l0Kqi8xGC', 'expanded_url': 'https://youtu.be/I5DmlKniTO0?t=5h4m25s', 'display_url': 'youtu.be/I5DmlKniTO0?t=…'}]","[{'url': 'https://t.co/Bnb8Ht07u7', 'media_url': 'http://pbs.twimg.com/media/DgCbgj0V4AEilYS.jpg', 'display_url': 'pic.twitter.com/Bnb8Ht07u7'}]"
1008597844662472704,2018-06-18 06:30:39+00:00,197,76,"In #Python3, the print function has options
* 'sep' to separate the arguments
* 'end' to be printed after the last argument

https://t.co/Jm8LgiGnAJ https://t.co/V56ARBc7ku",False,False,https://twitter.com/python_tip/status/1008597844662472704,"[{'url': 'https://t.co/Jm8LgiGnAJ', 'expanded_url': 'https://docs.python.org/3/library/functions.html#print', 'display_url': 'docs.python.org/3/library/func…'}]","[{'url': 'https://t.co/V56ARBc7ku', 'media_url': 'http://pbs.twimg.com/media/Df9BvDMVQAAUvDL.jpg', 'display_url': 'pic.twitter.com/V56ARBc7ku'}]"
1007629097621737472,2018-06-15 14:21:12+00:00,48,14,"Call an external program in #python(3.5) with https://t.co/K6Gg56jD4p().
>>> import subprocess
>>> proc = https://t.co/K6Gg56jD4p([""ls"", ""-l""], stdout=subprocess.PIPE) https://t.co/GpO2WXJP3e",False,False,https://twitter.com/python_tip/status/1007629097621737472,"[{'url': 'https://t.co/K6Gg56jD4p', 'expanded_url': 'http://subprocess.run', 'display_url': 'subprocess.run'}, {'url': 'https://t.co/K6Gg56jD4p', 'expanded_url': 'http://subprocess.run', 'display_url': 'subprocess.run'}]","[{'url': 'https://t.co/GpO2WXJP3e', 'media_url': 'http://pbs.twimg.com/media/DfvRSDDW0AAmrgd.jpg', 'display_url': 'pic.twitter.com/GpO2WXJP3e'}]"
1007237101199527936,2018-06-14 12:23:33+00:00,81,25,"Run a #python script and enter the interactive mode having access to everything defined in the script

python -i https://t.co/ZW80JGqOU2 https://t.co/9uuxoeARaF",False,False,https://twitter.com/python_tip/status/1007237101199527936,"[{'url': 'https://t.co/ZW80JGqOU2', 'expanded_url': 'http://foo.py', 'display_url': 'foo.py'}]","[{'url': 'https://t.co/9uuxoeARaF', 'media_url': 'http://pbs.twimg.com/media/Dfpspb8X4AAZzCD.jpg', 'display_url': 'pic.twitter.com/9uuxoeARaF'}]"
1006904704201297920,2018-06-13 14:22:43+00:00,33,8,"#matplotlib labels can take TeX style strings:
plt.xlabel(r""$xxxx = \sum_{n=1}^\infty\frac{-e^{i\pi}}{2^n}$"")
plt.ylabel(""$4\pi t + 2$"")

https://t.co/7FR6FBhj5f

#python https://t.co/00WWGU4pPK",False,False,https://twitter.com/python_tip/status/1006904704201297920,"[{'url': 'https://t.co/7FR6FBhj5f', 'expanded_url': 'https://matplotlib.org/users/usetex.html', 'display_url': 'matplotlib.org/users/usetex.h…'}]","[{'url': 'https://t.co/00WWGU4pPK', 'media_url': 'http://pbs.twimg.com/media/Dfk-XnaW4AEjxOV.png', 'display_url': 'pic.twitter.com/00WWGU4pPK'}]"
1006525736348454912,2018-06-12 13:16:50+00:00,18,7,"With #doctest, you can define and run tests in docstrings. #python
https://t.co/RHXWXTEzVW",False,False,https://twitter.com/python_tip/status/1006525736348454912,"[{'url': 'https://t.co/RHXWXTEzVW', 'expanded_url': 'https://pymotw.com/2/doctest/', 'display_url': 'pymotw.com/2/doctest/'}]",[]
1006260262117232641,2018-06-11 19:41:56+00:00,75,23,"F-strings can embed #python (3.6) expressions:

>>> r = 10
>>> f'Area of a circle with radius {r}: {math.pi*r**2}'
'Area of a circle with radius 10: 314.1592653589793’

>>> for i in range(3):
...     f'{i} box{""es""if i!=1 else """"}'
... 
'0 boxes'
'1 box'
'2 boxes'",False,False,https://twitter.com/python_tip/status/1006260262117232641,[],[]
1004994185093496832,2018-06-08 07:51:00+00:00,36,15,"New to the standard library: Data Classes = mutable namedtuples with defaults

PEP557: https://t.co/WkHLCwqPJY

or watch @raymondh's #PyCon2018 talk: https://t.co/VO2rUGcZaj

#dataclass #pythontip https://t.co/4b5nYZ4hcX",False,False,https://twitter.com/python_tip/status/1004994185093496832,"[{'url': 'https://t.co/WkHLCwqPJY', 'expanded_url': 'https://www.python.org/dev/peps/pep-0557/', 'display_url': 'python.org/dev/peps/pep-0…'}, {'url': 'https://t.co/VO2rUGcZaj', 'expanded_url': 'https://www.youtube.com/watch?v=T-TwcmT6Rcw', 'display_url': 'youtube.com/watch?v=T-Twcm…'}]","[{'url': 'https://t.co/4b5nYZ4hcX', 'media_url': 'http://pbs.twimg.com/media/DfEmvqgUwAUB2P1.jpg', 'display_url': 'pic.twitter.com/4b5nYZ4hcX'}]"
1004736236450467841,2018-06-07 14:46:00+00:00,14,7,"From 0 to Pythonic in 7 days. Sssign 🐍 up to Kaggle's 7-day Python Challenge, starting June 11th. 

https://t.co/wggQkOCIaA",False,False,https://twitter.com/python_tip/status/1004736236450467841,"[{'url': 'https://t.co/wggQkOCIaA', 'expanded_url': 'http://ow.ly/Z5vz30km2bg', 'display_url': 'ow.ly/Z5vz30km2bg'}]",[]
1004622477463412736,2018-06-07 07:13:58+00:00,58,16,"#selfpromo Jupyter notebooks from our #pyconcz workshop ""Deep Learning in Keras&TF: From Zero to Hero in 3 Hours""

https://t.co/NBtGjsmP5j

Examples: classification of Simpsons / flowers, a text generator for Obama speeches / new chapters in (Czech) Bible Kralická https://t.co/G4LyIzjbpR",False,False,https://twitter.com/python_tip/status/1004622477463412736,"[{'url': 'https://t.co/NBtGjsmP5j', 'expanded_url': 'http://bit.ly/czkeras', 'display_url': 'bit.ly/czkeras'}]","[{'url': 'https://t.co/G4LyIzjbpR', 'media_url': 'http://pbs.twimg.com/media/DfEitJNUYAAu_He.jpg', 'display_url': 'pic.twitter.com/G4LyIzjbpR'}]"
1003875482838786049,2018-06-05 05:45:40+00:00,36,5,"pandas.crosstab = cross-tabulation (pivot table) for two categorical variables

import pandas as pd
a = pd.Categorical([1,1,2,2,2,3,3,1])
b = pd.Categorical([1,2,2,3,1,1,1,1])
pd.crosstab(a,b)",False,False,https://twitter.com/python_tip/status/1003875482838786049,[],[]
1003548320890048512,2018-06-04 08:05:39+00:00,86,23,"#pythontip from @singhjayp:

How to insert an element into a sorted list and ensure the list remains sorted?

>>> import  bisect
>>> a = [1, 2, 4, 5] 
>>> bisect.insort(a, 3)
>>> print(a)
[1, 2, 3, 4, 5]",False,False,https://twitter.com/python_tip/status/1003548320890048512,[],[]
1003546711648817152,2018-06-04 07:59:15+00:00,1,0,@singhjayp @HarlinAtWork Nice. Thank you!,True,False,https://twitter.com/python_tip/status/1003546711648817152,[],[]
1002519904497684480,2018-06-01 11:59:05+00:00,19,3,"Searching for Colab (https://t.co/gLbfX4seZZ) specific issue? Look into ready-to-go solutions under

Help > Search code snippets

#colab #pythontip https://t.co/iKxcZgfBHi",False,False,https://twitter.com/python_tip/status/1002519904497684480,"[{'url': 'https://t.co/gLbfX4seZZ', 'expanded_url': 'http://colab.research.google.com', 'display_url': 'colab.research.google.com'}]","[{'url': 'https://t.co/iKxcZgfBHi', 'media_url': 'http://pbs.twimg.com/media/Demqe1pWkAAwxDD.jpg', 'display_url': 'pic.twitter.com/iKxcZgfBHi'}]"
1002228567059595264,2018-05-31 16:41:25+00:00,50,14,"6+1 #pythontips to Speed-up Your Calculations (by @jakevdp #PyCon2018):
• Line profiling
• NumPy vectorization
• Specialized data structures
• Cython
• Numba
• Dask

https://t.co/6DVAxxwYrS https://t.co/uY5vZdX545",False,False,https://twitter.com/python_tip/status/1002228567059595264,"[{'url': 'https://t.co/6DVAxxwYrS', 'expanded_url': 'https://speakerdeck.com/jakevdp/seven-strategies-for-optimizing-numerical-code', 'display_url': 'speakerdeck.com/jakevdp/seven-…'}]","[{'url': 'https://t.co/uY5vZdX545', 'media_url': 'http://pbs.twimg.com/media/Deihfw5X4AAnM1s.jpg', 'display_url': 'pic.twitter.com/uY5vZdX545'}]"
1001809904221515776,2018-05-30 12:57:48+00:00,106,28,"Combine two lists with list comprehension:
>>> colors = ['red', 'green', 'blue']
>>> toys = ['car', 'ball', 'duck']
>>> [[color, toy] for color in colors for toy in toys] https://t.co/GrwkWrztIn",False,False,https://twitter.com/python_tip/status/1001809904221515776,[],"[{'url': 'https://t.co/GrwkWrztIn', 'media_url': 'http://pbs.twimg.com/media/Deckx6gWkAAM5it.jpg', 'display_url': 'pic.twitter.com/GrwkWrztIn'}]"
1001504188910600192,2018-05-29 16:43:00+00:00,63,21,"The lambda keyword provides a shortcut for declaring small and anonymous functions.

>>> (lambda x, y: x + y)(5, 3)
8

Learn more about lambda functions from https://t.co/OlclAfqz8x

#lambda #pythontip",False,False,https://twitter.com/python_tip/status/1001504188910600192,"[{'url': 'https://t.co/OlclAfqz8x', 'expanded_url': 'https://dbader.org/blog/python-lambda-functions', 'display_url': 'dbader.org/blog/python-la…'}]",[]
1001048042420785152,2018-05-28 10:30:26+00:00,10,5,"Constrained layout: experimental layout engine in #matplotlib 2.2.
https://t.co/EnoQpGUMkG
#dataviz #python",False,False,https://twitter.com/python_tip/status/1001048042420785152,"[{'url': 'https://t.co/EnoQpGUMkG', 'expanded_url': 'https://matplotlib.org/tutorials/intermediate/constrainedlayout_guide.html', 'display_url': 'matplotlib.org/tutorials/inte…'}]",[]
999902887370219521,2018-05-25 06:40:00+00:00,88,34,"Good logging practice in #Python
(why 'print' in not enough):

https://t.co/AmGPd5MAB5

#log #logging #pythontip https://t.co/1WBYYng9EY",False,False,https://twitter.com/python_tip/status/999902887370219521,"[{'url': 'https://t.co/AmGPd5MAB5', 'expanded_url': 'https://fangpenlin.com/posts/2012/08/26/good-logging-practice-in-python/', 'display_url': 'fangpenlin.com/posts/2012/08/…'}]","[{'url': 'https://t.co/1WBYYng9EY', 'media_url': 'http://pbs.twimg.com/media/Dd7LprQVwAAAzsI.jpg', 'display_url': 'pic.twitter.com/1WBYYng9EY'}]"
999539492859076609,2018-05-24 06:36:00+00:00,27,10,"str() vs repr()

str() and repr() are both used to get a string representation of object. But str() is used for creating output for end user while repr() is mainly used for debugging and development.

https://t.co/7ocHssUZVy

#str #repr #pythontip",False,False,https://twitter.com/python_tip/status/999539492859076609,"[{'url': 'https://t.co/7ocHssUZVy', 'expanded_url': 'https://www.geeksforgeeks.org/str-vs-repr-in-python/', 'display_url': 'geeksforgeeks.org/str-vs-repr-in…'}]",[]
999197619913043969,2018-05-23 07:57:31+00:00,31,7,"Python Style Guides:
https://t.co/pVkHorwxLO
https://t.co/vLjAIChjX4
https://t.co/T0V1FOy7MP

Pylint can help you to check for coding standards. To integrate it into your IDE: https://t.co/YwjkFURsJe

#pythontip #pylint",False,False,https://twitter.com/python_tip/status/999197619913043969,"[{'url': 'https://t.co/pVkHorwxLO', 'expanded_url': 'http://docs.python-guide.org/en/latest/writing/style/', 'display_url': 'docs.python-guide.org/en/latest/writ…'}, {'url': 'https://t.co/vLjAIChjX4', 'expanded_url': 'https://google.github.io/styleguide/pyguide.html', 'display_url': 'google.github.io/styleguide/pyg…'}, {'url': 'https://t.co/T0V1FOy7MP', 'expanded_url': 'https://www.python.org/dev/peps/pep-0008/', 'display_url': 'python.org/dev/peps/pep-0…'}, {'url': 'https://t.co/YwjkFURsJe', 'expanded_url': 'http://pylint.readthedocs.io/en/1.9/user_guide/ide-integration.html', 'display_url': 'pylint.readthedocs.io/en/1.9/user_gu…'}]",[]
998821755543212033,2018-05-22 07:03:58+00:00,34,12,"#pythontip from @bminor232:

Create #data-pipelines via Pandas method chaining https://t.co/TdDAmWH7U1

Send us your own #pythontip to https://t.co/mfUQ9twkWS https://t.co/evgfmNebdg",False,False,https://twitter.com/python_tip/status/998821755543212033,"[{'url': 'https://t.co/TdDAmWH7U1', 'expanded_url': 'https://tomaugspurger.github.io/method-chaining', 'display_url': 'tomaugspurger.github.io/method-chaining'}, {'url': 'https://t.co/mfUQ9twkWS', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]","[{'url': 'https://t.co/evgfmNebdg', 'media_url': 'http://pbs.twimg.com/media/DdyG0YpU8AA6h0S.jpg', 'display_url': 'pic.twitter.com/evgfmNebdg'}]"
998454978053226501,2018-05-21 06:46:31+00:00,41,9,"#pycon2018 videos are online:

https://t.co/hNFIAEcIRf

https://t.co/OISLbE19c2",False,False,https://twitter.com/python_tip/status/998454978053226501,"[{'url': 'https://t.co/hNFIAEcIRf', 'expanded_url': 'https://us.pycon.org/2018/schedule/talks/', 'display_url': 'us.pycon.org/2018/schedule/…'}, {'url': 'https://t.co/OISLbE19c2', 'expanded_url': 'https://www.youtube.com/channel/UCsX05-2sVSH7Nx3zuk3NYuQ/videos', 'display_url': 'youtube.com/channel/UCsX05…'}]",[]
997479628464934912,2018-05-18 14:10:50+00:00,10,5,"How to use #tensorboard with Google #colab:
https://t.co/ZnMk6tETEM

#python #DeepLearning",False,False,https://twitter.com/python_tip/status/997479628464934912,"[{'url': 'https://t.co/ZnMk6tETEM', 'expanded_url': 'https://www.dlology.com/blog/quick-guide-to-run-tensorboard-in-google-colab/', 'display_url': 'dlology.com/blog/quick-gui…'}]",[]
997165361287061504,2018-05-17 17:22:03+00:00,63,16,"Join the content of two string columns into one column with https://t.co/gJy7eDJM81() method:

df['c'] = df['a'].str.cat(df['b'], sep=',')

#pandas #python 
https://t.co/uxv9lN5CCg https://t.co/mEf0wjOx92",False,False,https://twitter.com/python_tip/status/997165361287061504,"[{'url': 'https://t.co/gJy7eDJM81', 'expanded_url': 'http://str.cat', 'display_url': 'str.cat'}, {'url': 'https://t.co/uxv9lN5CCg', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.str.cat.html', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}]","[{'url': 'https://t.co/mEf0wjOx92', 'media_url': 'http://pbs.twimg.com/media/DdakmxrVMAAsQjZ.jpg', 'display_url': 'pic.twitter.com/mEf0wjOx92'}]"
996756981674332162,2018-05-16 14:19:17+00:00,13,0,"Need to download a file from #Google #colab?

from google.colab import files
https://t.co/mJCa5G8g1z('model1.h5')",False,False,https://twitter.com/python_tip/status/996756981674332162,"[{'url': 'https://t.co/mJCa5G8g1z', 'expanded_url': 'http://files.download', 'display_url': 'files.download'}]",[]
996333363391860737,2018-05-15 10:15:59+00:00,116,34,"Difference between list.append() and list.extend(): 

>>> x = [1, 2, 3]
>>> x.append([4, 5])
>>> print(x)
[1, 2, 3, [4, 5]]

>>> x = [1, 2, 3]
>>> x.extend([4, 5])
>>> print(x)
[1, 2, 3, 4, 5]

#python",False,False,https://twitter.com/python_tip/status/996333363391860737,[],[]
996027753915998208,2018-05-14 14:01:36+00:00,74,25,"Import your Google sheets into #pandas dataframes using gspread:
https://t.co/1n4x5xDbTe
#python",False,False,https://twitter.com/python_tip/status/996027753915998208,"[{'url': 'https://t.co/1n4x5xDbTe', 'expanded_url': 'https://gist.github.com/karlafej/2de8ee4f14b74e636418b2ff881c0843', 'display_url': 'gist.github.com/karlafej/2de8e…'}]",[]
994810079563010048,2018-05-11 05:23:00+00:00,55,14,"🕒 If you have 1 hour, you can start with Neural Networks and Keras by watching this #io18 talk: https://t.co/CEjiwdsPoo

📝 @DataCamp Keras Cheat Sheet: https://t.co/h4hIA3MWjk

🕒🕒🕒 (If you have 3 hours, you can come to our Keras workshop at @pyconcz)",False,False,https://twitter.com/python_tip/status/994810079563010048,"[{'url': 'https://t.co/CEjiwdsPoo', 'expanded_url': 'https://www.youtube.com/watch?time_continue=3&v=tjsHSIG8I08', 'display_url': 'youtube.com/watch?time_con…'}, {'url': 'https://t.co/h4hIA3MWjk', 'expanded_url': 'https://bit.ly/2IcSEEL', 'display_url': 'bit.ly/2IcSEEL'}]",[]
994449201739239424,2018-05-10 05:29:00+00:00,56,15,"How to ignore warnings:

> import warnings
> warnings.filterwarnings('ignore')

You can ignore only a specific type of warnings, for example DeprecationWarning.

warnings.filterwarnings('ignore', 'DeprecationWarning')

For more info,  https://t.co/ihUzsTnWyy

#pythontip #warnings https://t.co/zzq9zozGob",False,False,https://twitter.com/python_tip/status/994449201739239424,"[{'url': 'https://t.co/ihUzsTnWyy', 'expanded_url': 'https://www.lesinskis.com/python_deprecation_tutorial.html', 'display_url': 'lesinskis.com/python_depreca…'}]","[{'url': 'https://t.co/zzq9zozGob', 'media_url': 'http://pbs.twimg.com/media/DcyMBRLVQAEfWXi.jpg', 'display_url': 'pic.twitter.com/zzq9zozGob'}]"
994073352435314688,2018-05-09 04:35:30+00:00,232,95,"Colab (Google's flavor of Jupyter Notebook) can now open/save notebooks directly from Github. Just add your Github path to https://t.co/8B58ZpRZDq

For example, to open
https://t.co/wMDaguQOuv
use the following URL https://t.co/nlNkO0S800

More details at https://t.co/WI3NUvBduc",False,False,https://twitter.com/python_tip/status/994073352435314688,"[{'url': 'https://t.co/8B58ZpRZDq', 'expanded_url': 'http://colab.research.google.com/github/', 'display_url': 'colab.research.google.com/github/'}, {'url': 'https://t.co/wMDaguQOuv', 'expanded_url': 'https://github.com/tensorflow/tensor2tensor/blob/master/tensor2tensor/notebooks/hello_t2t.ipynb', 'display_url': 'github.com/tensorflow/ten…'}, {'url': 'https://t.co/nlNkO0S800', 'expanded_url': 'https://colab.research.google.com/github/tensorflow/tensor2tensor/blob/master/tensor2tensor/notebooks/hello_t2t.ipynb', 'display_url': 'colab.research.google.com/github/tensorf…'}, {'url': 'https://t.co/WI3NUvBduc', 'expanded_url': 'https://medium.com/tensorflow/colab-an-easy-way-to-learn-and-use-tensorflow-d74d1686e309', 'display_url': 'medium.com/tensorflow/col…'}]",[]
993770054515802113,2018-05-08 08:30:19+00:00,19,4,"Changing an environment variable affects the current process and following child processes ('check_output' run cmd and return its output)

> import os, subprocess
> os.environ['USER'] = 'peter'
> subprocess.check_output('echo $USER', shell=True)
'peter\n'

(inspired by @raymondh)",False,False,https://twitter.com/python_tip/status/993770054515802113,[],[]
993605454293970944,2018-05-07 21:36:15+00:00,0,0,@__anoop @ratneshkush Thanks.,True,False,https://twitter.com/python_tip/status/993605454293970944,[],[]
993605366196748293,2018-05-07 21:35:54+00:00,0,0,"RT @__anoop: @python_tip @ratneshkush missing quotes on those
num = 90
name = 'Ratnesh'
subject = 'Algorithm'

print(f'I am {name} scored {…",False,True,https://twitter.com/python_tip/status/993605366196748293,[],[]
993562318784024577,2018-05-07 18:44:50+00:00,29,8,"#pythontip from @ratneshkush:

For Python 3.5+
String formatting improved

num = 90
name = Ratnesh
subject = Algorithm

print(f'I am {name} scored {num} out of 100 in {subject}')

Send us your #pythontip to https://t.co/mfUQ9twkWS",False,False,https://twitter.com/python_tip/status/993562318784024577,"[{'url': 'https://t.co/mfUQ9twkWS', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]",[]
992403864396750849,2018-05-04 14:01:33+00:00,26,2,"Analyze the memory usage of your #Python code with memory_profiler. In #Jupyter notebook, you can use %memit and %mprun magic.
https://t.co/cpqd2ba6xe
https://t.co/K6tekSguIQ",False,False,https://twitter.com/python_tip/status/992403864396750849,"[{'url': 'https://t.co/cpqd2ba6xe', 'expanded_url': 'https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/01.07-Timing-and-Profiling.ipynb', 'display_url': 'github.com/jakevdp/Python…'}, {'url': 'https://t.co/K6tekSguIQ', 'expanded_url': 'https://pypi.org/project/memory_profiler/', 'display_url': 'pypi.org/project/memory…'}]",[]
992397522810306560,2018-05-04 13:36:21+00:00,0,0,"RT @pybites: String literals will concatenate in #Python:

>>> 'Python' ' is ' 'fun'
'Python is fun'",False,True,https://twitter.com/python_tip/status/992397522810306560,[],[]
992062625679921153,2018-05-03 15:25:36+00:00,52,9,"zip() is great for transposing 2D data:
>>> lst = [(1, 2, 3, 4), (5, 6, 7, 8)]
>>> list(zip(*lst))
[(1, 5), (2, 6), (3, 7), (4, 8)]

#python",False,False,https://twitter.com/python_tip/status/992062625679921153,[],[]
991632180668452864,2018-05-02 10:55:10+00:00,33,18,"Extract tar files using #python
import tarfile
with https://t.co/IteGFw4RUG('./datasets/housing/housing.tgz') as tgz:
    tgz.extractall(path = './datasets/housing')",False,False,https://twitter.com/python_tip/status/991632180668452864,"[{'url': 'https://t.co/IteGFw4RUG', 'expanded_url': 'http://tarfile.open', 'display_url': 'tarfile.open'}]",[]
991410807354339329,2018-05-01 20:15:30+00:00,33,17,Python dictionaries are insertion ordered by default in 3.7+,False,False,https://twitter.com/python_tip/status/991410807354339329,[],[]
991005945420365824,2018-04-30 17:26:44+00:00,0,0,RT @xkcdComic: Python Environment https://t.co/cyeaNT2Mk8 https://t.co/DMqsewgIzz https://t.co/ULfDw9uL0u,False,True,https://twitter.com/python_tip/status/991005945420365824,"[{'url': 'https://t.co/cyeaNT2Mk8', 'expanded_url': 'https://xkcd.com/1987/', 'display_url': 'xkcd.com/1987/'}, {'url': 'https://t.co/DMqsewgIzz', 'expanded_url': 'https://m.xkcd.com/1987/', 'display_url': 'm.xkcd.com/1987/'}]","[{'url': 'https://t.co/ULfDw9uL0u', 'media_url': 'http://pbs.twimg.com/media/DcCZv4WV4AELKaI.jpg', 'display_url': 'pic.twitter.com/ULfDw9uL0u'}]"
990951411302256642,2018-04-30 13:50:02+00:00,123,37,"Print calendar of a given month and year:
>>> import calendar
>>> print(calendar.month(2018, 5))
#python https://t.co/ivX91vqT59",False,False,https://twitter.com/python_tip/status/990951411302256642,[],"[{'url': 'https://t.co/ivX91vqT59', 'media_url': 'http://pbs.twimg.com/media/DcCRDaOX0AEq7l4.jpg', 'display_url': 'pic.twitter.com/ivX91vqT59'}]"
989761062856724480,2018-04-27 07:00:00+00:00,26,12,"Modules/packages are imported only the first time. If you work interactively and need to reimport module/package after its editing

> importlib.reload(packagename)

(works with Python version 3.4 and newer, for older versions, try imp.reload(packagename) or reload(packagename))",False,False,https://twitter.com/python_tip/status/989761062856724480,[],[]
989655410675089409,2018-04-27 00:00:11+00:00,10,2,See you there on our Deep Learning with Keras & Tensorflow workshop: https://t.co/M5cxOq5vmp https://t.co/b6oU2jA7D8,False,False,https://twitter.com/python_tip/status/989655410675089409,"[{'url': 'https://t.co/M5cxOq5vmp', 'expanded_url': 'https://cz.pycon.org/2018/programme/detail/workshop/4/', 'display_url': 'cz.pycon.org/2018/programme…'}, {'url': 'https://t.co/b6oU2jA7D8', 'expanded_url': 'https://twitter.com/pyconcz/status/989411255369678848', 'display_url': 'twitter.com/pyconcz/status…'}]",[]
989398674022256641,2018-04-26 07:00:00+00:00,30,7,"Wrap C++ to Python the easy way:

https://t.co/MPx1eQMKuP

Example:
https://t.co/ko5ztN4kmO
(particularly with Google's bazel build system and protobufs, CLIF works miracles)",False,False,https://twitter.com/python_tip/status/989398674022256641,"[{'url': 'https://t.co/MPx1eQMKuP', 'expanded_url': 'https://github.com/google/clif', 'display_url': 'github.com/google/clif'}, {'url': 'https://t.co/ko5ztN4kmO', 'expanded_url': 'https://github.com/google/clif/blob/master/examples/property/python/myoptions.clif', 'display_url': 'github.com/google/clif/bl…'}]",[]
989059204743917568,2018-04-25 08:31:04+00:00,0,0,"RT @FilipBolt: #pandas

apply => column-wise apply
applymap => element-wise apply https://t.co/oNmPf2IeeR",False,True,https://twitter.com/python_tip/status/989059204743917568,"[{'url': 'https://t.co/oNmPf2IeeR', 'expanded_url': 'https://twitter.com/python_tip/status/989036287440146432', 'display_url': 'twitter.com/python_tip/sta…'}]",[]
989036287440146432,2018-04-25 07:00:00+00:00,66,19,"Learn the difference between 'apply', 'applymap' and 'map'

https://t.co/9WhKbfW9L9
#pandas https://t.co/vjRdjr3Qnu",False,False,https://twitter.com/python_tip/status/989036287440146432,"[{'url': 'https://t.co/9WhKbfW9L9', 'expanded_url': 'https://stackoverflow.com/a/19798528/7651153', 'display_url': 'stackoverflow.com/a/19798528/765…'}]","[{'url': 'https://t.co/vjRdjr3Qnu', 'media_url': 'http://pbs.twimg.com/media/DblCe7eV4AAGdvL.jpg', 'display_url': 'pic.twitter.com/vjRdjr3Qnu'}]"
988673902854443008,2018-04-24 07:00:01+00:00,24,1,"Traveling salesman portrait in Python

https://t.co/QlWWRukbXZ https://t.co/ihU9RzmdnR",False,False,https://twitter.com/python_tip/status/988673902854443008,"[{'url': 'https://t.co/QlWWRukbXZ', 'expanded_url': 'http://www.randalolson.com/2018/04/11/traveling-salesman-portrait-in-python/', 'display_url': 'randalolson.com/2018/04/11/tra…'}]","[{'url': 'https://t.co/ihU9RzmdnR', 'media_url': 'http://pbs.twimg.com/media/DbbMei_U8AEgtpe.jpg', 'display_url': 'pic.twitter.com/ihU9RzmdnR'}]"
988321270314909696,2018-04-23 07:38:47+00:00,27,10,"Learn about scikit-learn, a consistent API for machine learning methods, from @amuellerml #rstatsnyc talk

https://t.co/HWfDqDhcge https://t.co/I04LEc4g9D",False,False,https://twitter.com/python_tip/status/988321270314909696,"[{'url': 'https://t.co/HWfDqDhcge', 'expanded_url': 'https://github.com/amueller/talks_odt/blob/master/2018/machine-learning-with-scikit-learn-NYC-R.pdf', 'display_url': 'github.com/amueller/talks…'}]","[{'url': 'https://t.co/I04LEc4g9D', 'media_url': 'http://pbs.twimg.com/media/Dbc4s0FV0AAIl5r.jpg', 'display_url': 'pic.twitter.com/I04LEc4g9D'}]"
987316485545750529,2018-04-20 13:06:08+00:00,67,23,"Pass functions to .loc[] and .iloc[] for indexing:
df.loc[lambda x: x.col != 0]

In this way, you can easily chain selection operations.
https://t.co/SstL8M99WT

#python #pandas https://t.co/j5LqhwZH8L",False,False,https://twitter.com/python_tip/status/987316485545750529,"[{'url': 'https://t.co/SstL8M99WT', 'expanded_url': 'http://pandas.pydata.org/pandas-docs/stable/indexing.html#selection-by-callable', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}]","[{'url': 'https://t.co/j5LqhwZH8L', 'media_url': 'http://pbs.twimg.com/media/DbOm36IX4AANROx.jpg', 'display_url': 'pic.twitter.com/j5LqhwZH8L'}]"
986877058914566144,2018-04-19 08:00:00+00:00,18,7,"Check out swiftapply by @jcarpenter542 : automatically find an efficient way to apply any function to #pandas series/dataframe.

https://t.co/hADmpZzXlh",False,False,https://twitter.com/python_tip/status/986877058914566144,"[{'url': 'https://t.co/hADmpZzXlh', 'expanded_url': 'https://medium.com/@jmcarpenter2/swiftapply-automatically-efficient-pandas-apply-operations-50e1058909f9', 'display_url': 'medium.com/@jmcarpenter2/…'}]",[]
986700393907408896,2018-04-18 20:18:00+00:00,51,13,"Display a 2D array in #Jupyter notebook with tabulate: 

from IPython.display import HTML, display
import tabulate
display(HTML(tabulate.tabulate(pred, tablefmt='html') https://t.co/N2oK08iZr7",False,False,https://twitter.com/python_tip/status/986700393907408896,[],"[{'url': 'https://t.co/N2oK08iZr7', 'media_url': 'http://pbs.twimg.com/media/DbESGpnW0AAmiMt.jpg', 'display_url': 'pic.twitter.com/N2oK08iZr7'}]"
986563995011309568,2018-04-18 11:16:00+00:00,13,6,%xmode verbose magic shows context and also values of the variables that are used in evaluation of an exceptionous expression #IPython #jupyter https://t.co/pYp772M6MC,False,False,https://twitter.com/python_tip/status/986563995011309568,[],"[{'url': 'https://t.co/pYp772M6MC', 'media_url': 'http://pbs.twimg.com/media/Da_IRWQXkAATtpH.jpg', 'display_url': 'pic.twitter.com/pYp772M6MC'}]"
986209785061298177,2018-04-17 11:48:30+00:00,15,10,"You can pass multiple axes to np.mean as a tuple:
>>> np.mean(myarray, axis = (0, 2, 3))

#numpy #python https://t.co/WQA7mLLORG",False,False,https://twitter.com/python_tip/status/986209785061298177,[],"[{'url': 'https://t.co/WQA7mLLORG', 'media_url': 'http://pbs.twimg.com/media/Da-4e4SX0AAkKwT.jpg', 'display_url': 'pic.twitter.com/WQA7mLLORG'}]"
985896744922820609,2018-04-16 15:04:35+00:00,51,26,"round() can accept a negative argument for number of places:
>>> x = 12345.6789
>>> round(x)
12346.0
>>> round(x,2)
12345.68
>>> round(x, -2)
12300.0

#python",False,False,https://twitter.com/python_tip/status/985896744922820609,[],[]
984687631383478272,2018-04-13 07:00:00+00:00,20,6,"To list all values in pandas DataFrame, use .unique()

To count them, use .value_counts()

import pandas as pd
reviews = https://t.co/KBWVZb2pZj_csv(""https://t.co/sz08ZG95vx"")

reviews.head()
https://t.co/9IoOFNun7I.unique()
https://t.co/9IoOFNun7I.value_counts() https://t.co/nVna5H1V1n",False,False,https://twitter.com/python_tip/status/984687631383478272,"[{'url': 'https://t.co/KBWVZb2pZj', 'expanded_url': 'http://pd.read', 'display_url': 'pd.read'}, {'url': 'https://t.co/sz08ZG95vx', 'expanded_url': 'https://raw.githubusercontent.com/davestroud/Wine/master/winemag-data-130k-v2.csv', 'display_url': 'raw.githubusercontent.com/davestroud/Win…'}, {'url': 'https://t.co/9IoOFNun7I', 'expanded_url': 'http://reviews.country', 'display_url': 'reviews.country'}, {'url': 'https://t.co/9IoOFNun7I', 'expanded_url': 'http://reviews.country', 'display_url': 'reviews.country'}]","[{'url': 'https://t.co/nVna5H1V1n', 'media_url': 'http://pbs.twimg.com/media/Dao3UGFW0AAITuz.jpg', 'display_url': 'pic.twitter.com/nVna5H1V1n'}]"
984655087497707520,2018-04-13 04:50:41+00:00,0,0,RT @ManikosN: @python_tip @pybites I have written an (extensive) guide about Python import machinery. If you like to check it out here is t…,False,True,https://twitter.com/python_tip/status/984655087497707520,[],[]
984325249243086848,2018-04-12 07:00:01+00:00,45,18,"How does Python find modules/packages?

When you try

>>> import spam

Interpreter looks for `spam` in sys.path folders

>>> import sys
>>> print(sys.path)

You can manipulate sys.path:

>>>  sys.path.append('../path/to/your/modules/')
>>> print(sys.path)

https://t.co/Vko9R9gEMT https://t.co/2k9tdPle9T",False,False,https://twitter.com/python_tip/status/984325249243086848,"[{'url': 'https://t.co/Vko9R9gEMT', 'expanded_url': 'https://docs.python.org/3/tutorial/modules.html#the-module-search-path', 'display_url': 'docs.python.org/3/tutorial/mod…'}]","[{'url': 'https://t.co/2k9tdPle9T', 'media_url': 'http://pbs.twimg.com/media/DaSo7hTU8AUymIV.jpg', 'display_url': 'pic.twitter.com/2k9tdPle9T'}]"
983962857221091328,2018-04-11 07:00:00+00:00,41,13,"Simple way to get the prime numbers less than 50 using #List_Comprehensions:

>> noprimes = [j for i in range(2, 8) for j in range(i*2, 50, i)]
>>> primes = [x for x in range(2, 50) if x not in noprimes]
>>> print(primes)
[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47]",False,False,https://twitter.com/python_tip/status/983962857221091328,[],[]
983809051518619648,2018-04-10 20:48:50+00:00,0,0,RT @ChristianHeimes: Python 2 will be replaced with Python 3 in the next Red Hat Enterprise Linux (RHEL) major release.  #python #rhel #red…,False,True,https://twitter.com/python_tip/status/983809051518619648,[],[]
983600469489500161,2018-04-10 07:00:00+00:00,23,13,"Does your project need BOTH Python and R?

1) Call R functions from Python with rpy2 and %R magic (https://t.co/tl0rMsFMHJ)

OR

2) Call Python functions from R using reticulate package (https://t.co/AWo7df1u7B) https://t.co/FJ06ol8BH1",False,False,https://twitter.com/python_tip/status/983600469489500161,"[{'url': 'https://t.co/tl0rMsFMHJ', 'expanded_url': 'https://bit.ly/2HinRGt', 'display_url': 'bit.ly/2HinRGt'}, {'url': 'https://t.co/AWo7df1u7B', 'expanded_url': 'https://bit.ly/2GIjtiS', 'display_url': 'bit.ly/2GIjtiS'}]","[{'url': 'https://t.co/FJ06ol8BH1', 'media_url': 'http://pbs.twimg.com/media/DaSc2ZkVMAEPqIc.png', 'display_url': 'pic.twitter.com/FJ06ol8BH1'}]"
983238078725853184,2018-04-09 07:00:00+00:00,51,16,"Print #Pandas Cheat Sheets:

1) basic operations:
 https://t.co/9JJ3BxiOiv

2) tidy data & data wrangling:
https://t.co/rVM4LiUueh

#pythontip",False,False,https://twitter.com/python_tip/status/983238078725853184,"[{'url': 'https://t.co/9JJ3BxiOiv', 'expanded_url': 'https://assets.datacamp.com/blog_assets/PandasPythonForDataScience.pdf', 'display_url': 'assets.datacamp.com/blog_assets/Pa…'}, {'url': 'https://t.co/rVM4LiUueh', 'expanded_url': 'https://github.com/pandas-dev/pandas/blob/master/doc/cheatsheet/Pandas_Cheat_Sheet.pdf', 'display_url': 'github.com/pandas-dev/pan…'}]",[]
982266551188389888,2018-04-06 14:39:30+00:00,49,18,"list.sort() and sorted() accept key argument to specify a function which returns what you would like your items sorted by:

mylst.sort(key = lambda x: x[-1])

sorted(mylst, key = lambda x: len(x)) https://t.co/aVD7Zz2m4H",False,False,https://twitter.com/python_tip/status/982266551188389888,[],"[{'url': 'https://t.co/aVD7Zz2m4H', 'media_url': 'http://pbs.twimg.com/media/DaG2MtmVAAE9eHf.jpg', 'display_url': 'pic.twitter.com/aVD7Zz2m4H'}]"
981938295272861699,2018-04-05 16:55:07+00:00,21,8,"Recursive folder globbing is easy in #python3

imgs = glob.glob('/path/**/*.png')
or 
imgs = pathlib.Path('/path').glob('**/*.png')

https://t.co/HjmOW04Tal
https://t.co/jyNqpHaJXi",False,False,https://twitter.com/python_tip/status/981938295272861699,"[{'url': 'https://t.co/HjmOW04Tal', 'expanded_url': 'https://docs.python.org/3/library/glob.html', 'display_url': 'docs.python.org/3/library/glob…'}, {'url': 'https://t.co/jyNqpHaJXi', 'expanded_url': 'https://docs.python.org/3/library/pathlib.html#basic-use', 'display_url': 'docs.python.org/3/library/path…'}]",[]
981552759597142016,2018-04-04 15:23:08+00:00,49,17,"#Pandas: If you know in advance which columns of your data you’d like to use, you can pass them to the usecols argument of https://t.co/KBWVZaKP7L_csv, https://t.co/KBWVZaKP7L_table, etc. https://t.co/QS9KYprLLl",False,False,https://twitter.com/python_tip/status/981552759597142016,"[{'url': 'https://t.co/KBWVZaKP7L', 'expanded_url': 'http://pd.read', 'display_url': 'pd.read'}, {'url': 'https://t.co/KBWVZaKP7L', 'expanded_url': 'http://pd.read', 'display_url': 'pd.read'}]","[{'url': 'https://t.co/QS9KYprLLl', 'media_url': 'http://pbs.twimg.com/media/DZ8s6mIX0AA01wx.jpg', 'display_url': 'pic.twitter.com/QS9KYprLLl'}]"
981141568110424064,2018-04-03 12:09:13+00:00,24,5,"Call a function until a sentinel value is returned with iter()

lines = []
with open('file.txt') as fp:
    for line in iter(fp.readline, ''):
        lines.append(line.strip())

https://t.co/zm5D5EXu2z

#python",False,False,https://twitter.com/python_tip/status/981141568110424064,"[{'url': 'https://t.co/zm5D5EXu2z', 'expanded_url': 'https://stackoverflow.com/questions/38087427/what-are-the-uses-of-itercallable-sentinel', 'display_url': 'stackoverflow.com/questions/3808…'}]",[]
980882587332829184,2018-04-02 19:00:07+00:00,20,8,"Unhappy with != inequality operator? FLUFL Uncle Barry will help! 😈

>>> from __future__ import barry_as_FLUFL
>>> 1 <> 2
True

Happy #Easter and the belated start of the month!
https://t.co/kWo93rADmv https://t.co/9HTYBiyc6a",False,False,https://twitter.com/python_tip/status/980882587332829184,"[{'url': 'https://t.co/kWo93rADmv', 'expanded_url': 'https://www.python.org/dev/peps/pep-0401/', 'display_url': 'python.org/dev/peps/pep-0…'}]","[{'url': 'https://t.co/9HTYBiyc6a', 'media_url': 'http://pbs.twimg.com/media/DZzLG1eWkAARJgG.jpg', 'display_url': 'pic.twitter.com/9HTYBiyc6a'}]"
979599103909773312,2018-03-30 06:00:01+00:00,0,0,"@property, a pythonic way to use getters and setters

https://t.co/yHCJKGokgR",True,False,https://twitter.com/python_tip/status/979599103909773312,"[{'url': 'https://t.co/yHCJKGokgR', 'expanded_url': 'https://www.programiz.com/python-programming/property', 'display_url': 'programiz.com/python-program…'}]",[]
979236713749921793,2018-03-29 06:00:00+00:00,46,14,"#pythontip by @raymondh:
A specialized tool often beats a general purpose tool
* math.sqrt(x) is more accurate than x ** 0.5
* math.log2(x) is more accurate than math.log(x, 2)
* math.log1p(x) is more accurate than math.log(1+x)
...

For example (see the figure) https://t.co/gB6Vhmakow",False,False,https://twitter.com/python_tip/status/979236713749921793,[],"[{'url': 'https://t.co/gB6Vhmakow', 'media_url': 'http://pbs.twimg.com/media/DZLb4wNVMAANw8f.jpg', 'display_url': 'pic.twitter.com/gB6Vhmakow'}]"
979140567354376192,2018-03-28 23:37:57+00:00,0,0,"@kimiamania For those who never heard about rot13 before:

https://t.co/zDDgC7F8ai",True,False,https://twitter.com/python_tip/status/979140567354376192,"[{'url': 'https://t.co/zDDgC7F8ai', 'expanded_url': 'https://stackoverflow.com/a/5856320/7651153', 'display_url': 'stackoverflow.com/a/5856320/7651…'}]",[]
978874331374628864,2018-03-28 06:00:01+00:00,47,23,"You may know that

>>> import this

prints the Zen of Python. But have you ever looked into its https://t.co/LyDaxRDcfe source code?

https://t.co/OCQuRvO7jB https://t.co/JneItkIAy9",False,False,https://twitter.com/python_tip/status/978874331374628864,"[{'url': 'https://t.co/LyDaxRDcfe', 'expanded_url': 'http://this.py', 'display_url': 'this.py'}, {'url': 'https://t.co/OCQuRvO7jB', 'expanded_url': 'https://github.com/python/cpython/blob/master/Lib/this.py', 'display_url': 'github.com/python/cpython…'}]","[{'url': 'https://t.co/JneItkIAy9', 'media_url': 'http://pbs.twimg.com/media/DZLXX-kVwAA1hDG.jpg', 'display_url': 'pic.twitter.com/JneItkIAy9'}]"
978511938455068672,2018-03-27 06:00:00+00:00,16,11,"Speed-up your array-oriented, math-heavy code with numba using @jit (= just-in-time compilation) decorator. See examples at

https://t.co/JUVXVkNXzi 

#numba #deeplearning #pythontip",False,False,https://twitter.com/python_tip/status/978511938455068672,"[{'url': 'https://t.co/JUVXVkNXzi', 'expanded_url': 'https://numba.pydata.org/', 'display_url': 'numba.pydata.org'}]",[]
978149555253530624,2018-03-26 06:00:01+00:00,42,17,">>> {True: 'yes', 1: 'no', 1.0: 'maybe'}
{True: 'maybe'}

Wait, but why?
* Short explanation: https://t.co/kFTOrfey8k
* Long explanation: https://t.co/wolF2ggFn9
#pythontip",False,False,https://twitter.com/python_tip/status/978149555253530624,"[{'url': 'https://t.co/kFTOrfey8k', 'expanded_url': 'https://stackoverflow.com/a/47803817', 'display_url': 'stackoverflow.com/a/47803817'}, {'url': 'https://t.co/wolF2ggFn9', 'expanded_url': 'https://dbader.org/blog/python-mystery-dict-expression', 'display_url': 'dbader.org/blog/python-my…'}]",[]
977204746451849217,2018-03-23 15:25:41+00:00,47,22,"One more way to combine a list of lists into a single set:

>>> lol = [['a', 'b', 'c'], ['b', 'c', 'd'], ['d', 'e']]
>>> set().union(*lol)
set(['a', 'c', 'b', 'e', 'd'])

#pythontip from @raymondh",False,False,https://twitter.com/python_tip/status/977204746451849217,[],[]
976836051191914496,2018-03-22 15:00:37+00:00,20,6,"IPython ? magic accepts wildcards:

?np.*close*

np.allclose
np.isclose
np.real_if_close

#ipython #jupyter",False,False,https://twitter.com/python_tip/status/976836051191914496,[],[]
976477554314969088,2018-03-21 15:16:05+00:00,28,10,"Which one is faster?
df[(df[""A""] > 0) & (df[""A""] < 100)]
or
df.loc[(df[""A""] > 0) & (df[""A""] < 100)]

See benchmarks of various operations on #pandas dataframes: https://t.co/gkujfKtPPS

#python #pandas #numpy https://t.co/1MFAdE66J3",False,False,https://twitter.com/python_tip/status/976477554314969088,"[{'url': 'https://t.co/gkujfKtPPS', 'expanded_url': 'https://github.com/mm-mansour/Fast-Pandas', 'display_url': 'github.com/mm-mansour/Fas…'}]","[{'url': 'https://t.co/1MFAdE66J3', 'media_url': 'http://pbs.twimg.com/media/DY0kKV3X0AAK6wm.jpg', 'display_url': 'pic.twitter.com/1MFAdE66J3'}]"
976076015255552005,2018-03-20 12:40:31+00:00,33,15,"Read the content of a file as a string with #pathlib https://t.co/faYhFGaIt5_text() method.
https://t.co/qHXdEqrjpb https://t.co/ynBOK9Z3jH",False,False,https://twitter.com/python_tip/status/976076015255552005,"[{'url': 'https://t.co/faYhFGaIt5', 'expanded_url': 'http://Path.read', 'display_url': 'Path.read'}, {'url': 'https://t.co/qHXdEqrjpb', 'expanded_url': 'https://docs.python.org/3/library/pathlib.html#pathlib.Path.read_text', 'display_url': 'docs.python.org/3/library/path…'}]","[{'url': 'https://t.co/ynBOK9Z3jH', 'media_url': 'http://pbs.twimg.com/media/DYu37RAW4AIuXSt.jpg', 'display_url': 'pic.twitter.com/ynBOK9Z3jH'}]"
975708743060152320,2018-03-19 12:21:06+00:00,40,9,"Ridgeline plots are an alternative to violin plots. Make them easily with joypy. https://t.co/1LLEs2aimr
#python #pandas #dataviz https://t.co/43EU1tAWdN",False,False,https://twitter.com/python_tip/status/975708743060152320,"[{'url': 'https://t.co/1LLEs2aimr', 'expanded_url': 'https://github.com/sbebo/joypy', 'display_url': 'github.com/sbebo/joypy'}]","[{'url': 'https://t.co/43EU1tAWdN', 'media_url': 'http://pbs.twimg.com/media/DYppjQpV4AIHtFa.jpg', 'display_url': 'pic.twitter.com/43EU1tAWdN'}]"
974531657624506368,2018-03-16 06:23:47+00:00,38,9,"Make your pandas rolling - with rolling mean and other operations

Example(s):
https://t.co/DzV59NwJBe
https://t.co/ISxJDIb0lJ
#pythontip https://t.co/aD3bAJ8jIR",False,False,https://twitter.com/python_tip/status/974531657624506368,"[{'url': 'https://t.co/DzV59NwJBe', 'expanded_url': 'https://gist.github.com/simecek/4746ebc758e0cd9aba3094197319627b', 'display_url': 'gist.github.com/simecek/4746eb…'}, {'url': 'https://t.co/ISxJDIb0lJ', 'expanded_url': 'https://stackoverflow.com/questions/40060842/moving-average-pandas', 'display_url': 'stackoverflow.com/questions/4006…'}]","[{'url': 'https://t.co/aD3bAJ8jIR', 'media_url': 'http://pbs.twimg.com/media/DYY7QpbV4AEXy0i.jpg', 'display_url': 'pic.twitter.com/aD3bAJ8jIR'}]"
974188132072484864,2018-03-15 07:38:44+00:00,22,9,"A bit late to the #PiDay party, but if you want to compute 100,000 digits of π in just a few seconds, try mpmath module and the following method

https://t.co/zFfN16mgip

(for those of you persistent, last 4 digits are believed to be Jeff Dean's PIN code, https://t.co/Q3jKOcd9ct) https://t.co/XfPphAV8pP",False,False,https://twitter.com/python_tip/status/974188132072484864,"[{'url': 'https://t.co/zFfN16mgip', 'expanded_url': 'http://bit.ly/2FCSzg1', 'display_url': 'bit.ly/2FCSzg1'}, {'url': 'https://t.co/Q3jKOcd9ct', 'expanded_url': 'http://bit.ly/2pcCdQQ', 'display_url': 'bit.ly/2pcCdQQ'}]","[{'url': 'https://t.co/XfPphAV8pP', 'media_url': 'http://pbs.twimg.com/media/DYUCgPpU0AARsHY.jpg', 'display_url': 'pic.twitter.com/XfPphAV8pP'}]"
973800901277356033,2018-03-14 06:00:01+00:00,15,8,"Do you need to call your C++ functions/classes from Python? Wrap them with SWIG

https://t.co/5qOrBJdAfY

Bonus: you can then use them from Java, Perl, ... as well.",False,False,https://twitter.com/python_tip/status/973800901277356033,"[{'url': 'https://t.co/5qOrBJdAfY', 'expanded_url': 'http://www.swig.org/tutorial.html', 'display_url': 'swig.org/tutorial.html'}]",[]
973431339155275776,2018-03-13 05:31:31+00:00,45,13,"https://t.co/jFOxw48Kzo() and https://t.co/1Ix7e2EG42() are timezone unaware

> from datetime import datetime
> https://t.co/1Ix7e2EG42().tzinfo is None
True

Read more about Python and Timezones
https://t.co/lG8uC5M1Vt

And always specify t.z.
> https://t.co/1Ix7e2EG42(pytz.utc)",False,False,https://twitter.com/python_tip/status/973431339155275776,"[{'url': 'https://t.co/jFOxw48Kzo', 'expanded_url': 'http://datetime.today', 'display_url': 'datetime.today'}, {'url': 'https://t.co/1Ix7e2EG42', 'expanded_url': 'http://datetime.now', 'display_url': 'datetime.now'}, {'url': 'https://t.co/1Ix7e2EG42', 'expanded_url': 'http://datetime.now', 'display_url': 'datetime.now'}, {'url': 'https://t.co/lG8uC5M1Vt', 'expanded_url': 'https://julien.danjou.info/blog/2015/python-and-timezones', 'display_url': 'julien.danjou.info/blog/2015/pyth…'}, {'url': 'https://t.co/1Ix7e2EG42', 'expanded_url': 'http://datetime.now', 'display_url': 'datetime.now'}]",[]
973111968088317953,2018-03-12 08:22:27+00:00,0,0,RT @eumiro: @python_tip using .now() from dt.datetime is neither human nor computer friendly. Use .utcnow() or .now(pytz.timezone(…)) inste…,False,True,https://twitter.com/python_tip/status/973111968088317953,[],[]
973076122307936257,2018-03-12 06:00:01+00:00,83,23,"#humanize = module for human friendly representations

import datetime as dt
import time
import humanize

t = https://t.co/mj5384TM25()
time.sleep(10)
humanize.naturaltime(t)

y = https://t.co/Gt94Oj5rqW()-dt.timedelta(1)
humanize.naturaldate(y)

(from A.Samuel #PyDataNYC slides) https://t.co/gmfFwXKzOw",False,False,https://twitter.com/python_tip/status/973076122307936257,"[{'url': 'https://t.co/mj5384TM25', 'expanded_url': 'http://dt.datetime.now', 'display_url': 'dt.datetime.now'}, {'url': 'https://t.co/Gt94Oj5rqW', 'expanded_url': 'http://dt.date.today', 'display_url': 'dt.date.today'}]","[{'url': 'https://t.co/gmfFwXKzOw', 'media_url': 'http://pbs.twimg.com/media/DXV1kVGU0AAlLAE.jpg', 'display_url': 'pic.twitter.com/gmfFwXKzOw'}]"
972173623036399616,2018-03-09 18:13:48+00:00,52,20,"Select rows of #pandas dataframe where a column of strings contains   a substring with str.contains()

>>> df[df[“col""].str.contains(""abc”)]

#python https://t.co/AW4MwgvFcI",False,False,https://twitter.com/python_tip/status/972173623036399616,[],"[{'url': 'https://t.co/AW4MwgvFcI', 'media_url': 'http://pbs.twimg.com/media/DX3arquW0AIW-ju.jpg', 'display_url': 'pic.twitter.com/AW4MwgvFcI'}]"
971762660097363974,2018-03-08 15:00:47+00:00,56,17,"Use textwrap.fill() to print long strings so that they fill a specified number of columns.

>>> print(textwrap.fill(long_str, 60))

#python https://t.co/unhErzp5C4",False,False,https://twitter.com/python_tip/status/971762660097363974,[],"[{'url': 'https://t.co/unhErzp5C4', 'media_url': 'http://pbs.twimg.com/media/DXxk5knWAAABJte.jpg', 'display_url': 'pic.twitter.com/unhErzp5C4'}]"
971419966544236544,2018-03-07 16:19:02+00:00,12,1,How to Insert an element at specific index in list?  https://t.co/hLuM0Mg8Ii,False,False,https://twitter.com/python_tip/status/971419966544236544,"[{'url': 'https://t.co/hLuM0Mg8Ii', 'expanded_url': 'http://thispointer.com/python-how-to-insert-an-element-at-specific-index-in-list/', 'display_url': 'thispointer.com/python-how-to-…'}]",[]
971052138729222146,2018-03-06 15:57:25+00:00,76,35,"Use itertools.compress to filter a sequence based on the results of filtering another related sequence:

counts = [0, 5, 6, 3, 2]
names = ['Bob', 'Alice', 'Jane', 'Joe', 'Luke']
more3 = [n > 3 for n in counts]
list(compress(names, more3))

#python https://t.co/vyUL0VPXEf",False,False,https://twitter.com/python_tip/status/971052138729222146,[],"[{'url': 'https://t.co/vyUL0VPXEf', 'media_url': 'http://pbs.twimg.com/media/DXneEcJXcAA8JR8.jpg', 'display_url': 'pic.twitter.com/vyUL0VPXEf'}]"
970696992799195136,2018-03-05 16:26:12+00:00,32,7,"Place p elements randomly in a 2D #numpy array: 

n = 10
p = 3
Z = np.zeros((n,n))
np.put(Z, np.random.choice(range(n*n), p, replace=False),1)
print(Z)

For more #numpy tips, see https://t.co/iXKWliIbdZ 

#python",False,False,https://twitter.com/python_tip/status/970696992799195136,"[{'url': 'https://t.co/iXKWliIbdZ', 'expanded_url': 'https://github.com/rougier/numpy-100/blob/master/100%20Numpy%20exercises.md', 'display_url': 'github.com/rougier/numpy-…'}]",[]
969496982631858176,2018-03-02 08:57:47+00:00,38,14,"Download Google Image Search results with #BeautifulSoup:

https://t.co/x5p3HQNTXk https://t.co/HmRSkDcEIZ",False,False,https://twitter.com/python_tip/status/969496982631858176,"[{'url': 'https://t.co/x5p3HQNTXk', 'expanded_url': 'https://stackoverflow.com/a/28487500', 'display_url': 'stackoverflow.com/a/28487500'}]","[{'url': 'https://t.co/HmRSkDcEIZ', 'media_url': 'http://pbs.twimg.com/media/DXRYIN9VoAIgRQe.jpg', 'display_url': 'pic.twitter.com/HmRSkDcEIZ'}]"
969348948623110145,2018-03-01 23:09:33+00:00,0,0,"RT @aaronchall: dict.setdefault works like get but also sets:

chars = 'alphabet'
found = {}
for char in chars:
    found.setdefault('vowel…",False,True,https://twitter.com/python_tip/status/969348948623110145,[],[]
969343002358378497,2018-03-01 22:45:55+00:00,0,0,RT @hroncok: @python_tip Python 2 print? https://t.co/aOoJgbozSE,False,True,https://twitter.com/python_tip/status/969343002358378497,[],"[{'url': 'https://t.co/aOoJgbozSE', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/DXMf2VmW4AEGkb1.jpg', 'display_url': 'pic.twitter.com/aOoJgbozSE'}]"
969120059892359169,2018-03-01 08:00:02+00:00,40,8,"Python dictionary's method get() can be used with a default value:

>>> dict = {'Name': 'Zabra', 'Age': 7}
>>> print ""Value : %s"" %  dict.get('Age')
Value : 7
>>> print ""Value : %s"" %  dict.get('Education', ""NA"")
Value : NA",False,False,https://twitter.com/python_tip/status/969120059892359169,[],[]
968742565297164290,2018-02-28 07:00:00+00:00,48,18,"1990s The Scripting Era
(Python as Alternative to Bash)
2000s SciPy Era
(Python as Alternative to Matlab)
2010s PyData Era
(Python as Alternative to R)

Interested how Python became #1 prog. language for data analysis? Check @jakevdp #pydata slides: https://t.co/mGar7YmIbu https://t.co/OtmesBfkM6",False,False,https://twitter.com/python_tip/status/968742565297164290,"[{'url': 'https://t.co/mGar7YmIbu', 'expanded_url': 'https://speakerdeck.com/jakevdp/intro-to-pydata', 'display_url': 'speakerdeck.com/jakevdp/intro-…'}]","[{'url': 'https://t.co/OtmesBfkM6', 'media_url': 'http://pbs.twimg.com/media/DXDyM--VAAAk73H.jpg', 'display_url': 'pic.twitter.com/OtmesBfkM6'}]"
968395277437566976,2018-02-27 08:00:00+00:00,34,10,"Get the list of module attributes (= all the things that are in the module):

>>> import math
>>> dir(math)
['__doc__', '__name__', ... , 'tanh', 'trunc']

#pythontip",False,False,https://twitter.com/python_tip/status/968395277437566976,[],[]
968033139749658624,2018-02-26 08:01:00+00:00,36,6,"Describe your plot layer-by-layer, learn the grammar of graphics. For Python implementations and a comparison to R, see

https://t.co/M2fb6rPZG5

A quick tutorial:
https://t.co/Sw2M4xnOxM

#pythontip #plotnine #ggplot2 https://t.co/9TE1EE86C7",False,False,https://twitter.com/python_tip/status/968033139749658624,"[{'url': 'https://t.co/M2fb6rPZG5', 'expanded_url': 'http://pltn.ca/plotnine-superior-python-ggplot/', 'display_url': 'pltn.ca/plotnine-super…'}, {'url': 'https://t.co/Sw2M4xnOxM', 'expanded_url': 'https://www.kaggle.com/residentmario/grammer-of-graphics-with-plotnine-optional', 'display_url': 'kaggle.com/residentmario/…'}]","[{'url': 'https://t.co/9TE1EE86C7', 'media_url': 'http://pbs.twimg.com/media/DW6k8sYVwAAl2vR.jpg', 'display_url': 'pic.twitter.com/9TE1EE86C7'}]"
967875536625152001,2018-02-25 21:34:44+00:00,11,4,"If you are looking for your first EU Python event, @pyconcz is very open and welcoming to newcomers:

🗺️ PRAGUE, CZECHIA 
🗓 1-3 JUNE 2018
📨 CfP deadline 2018-02-28!
https://t.co/5PhfjVX16B https://t.co/akXvBofPOx",False,False,https://twitter.com/python_tip/status/967875536625152001,"[{'url': 'https://t.co/5PhfjVX16B', 'expanded_url': 'https://cz.pycon.org/2018/', 'display_url': 'cz.pycon.org/2018/'}, {'url': 'https://t.co/akXvBofPOx', 'expanded_url': 'https://twitter.com/pyconcz/status/964800086755524609', 'display_url': 'twitter.com/pyconcz/status…'}]",[]
967078256812941312,2018-02-23 16:46:38+00:00,54,22,"Keep a limited history of items with collections.deque:

q = deque([1,2,3], maxlen=3)
q.append(4)

#python https://t.co/Z3pSwOZ5KZ",False,False,https://twitter.com/python_tip/status/967078256812941312,[],"[{'url': 'https://t.co/Z3pSwOZ5KZ', 'media_url': 'http://pbs.twimg.com/media/DWvAZFxWsAAbIXl.jpg', 'display_url': 'pic.twitter.com/Z3pSwOZ5KZ'}]"
966704808328646657,2018-02-22 16:02:41+00:00,69,29,"You can name your slices:

>>> record = ""01234567890123456789I want this0123456789""
>>> IWANT = slice(20,31) 
>>> record[IWANT]
'I want this'

#python #pythontip",False,False,https://twitter.com/python_tip/status/966704808328646657,[],[]
966323104866816000,2018-02-21 14:45:56+00:00,31,5,"Have you tried #JupyterLab? It's pretty cool! Install it with conda or pip.
https://t.co/MScqA087iX

https://t.co/hIJ6KQJub4 https://t.co/yPmcL3hc4J",False,False,https://twitter.com/python_tip/status/966323104866816000,"[{'url': 'https://t.co/MScqA087iX', 'expanded_url': 'https://blog.jupyter.org/jupyterlab-is-ready-for-users-5a6f039b8906', 'display_url': 'blog.jupyter.org/jupyterlab-is-…'}, {'url': 'https://t.co/hIJ6KQJub4', 'expanded_url': 'http://jupyterlab.readthedocs.io/en/stable/getting_started/installation.html', 'display_url': 'jupyterlab.readthedocs.io/en/stable/gett…'}]","[{'url': 'https://t.co/yPmcL3hc4J', 'media_url': 'http://pbs.twimg.com/media/DWkRmJ8XUAAuwdD.png', 'display_url': 'pic.twitter.com/yPmcL3hc4J'}]"
966039756487274496,2018-02-20 20:00:00+00:00,14,4,"Grouped violin plots with split violins (sorry, @alexpmil):

https://t.co/EEJ2mFqcUo

#pythontip #seaborn https://t.co/BGbIpuJ7Fj",False,False,https://twitter.com/python_tip/status/966039756487274496,"[{'url': 'https://t.co/EEJ2mFqcUo', 'expanded_url': 'http://seaborn.pydata.org/examples/grouped_violinplots.html', 'display_url': 'seaborn.pydata.org/examples/group…'}]","[{'url': 'https://t.co/BGbIpuJ7Fj', 'media_url': 'http://pbs.twimg.com/media/DVyi9QjUMAEAlln.jpg', 'display_url': 'pic.twitter.com/BGbIpuJ7Fj'}]"
965496173275443201,2018-02-19 08:00:00+00:00,19,5,"You can set a threshold for dropping NA values in #pandas dataframes, for example

df.dropna(thresh=5)

won't drop a row if 5 or more of the values are not NA

https://t.co/zfpGy16qxQ

#pythontip",False,False,https://twitter.com/python_tip/status/965496173275443201,"[{'url': 'https://t.co/zfpGy16qxQ', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.dropna.html', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}]",[]
964409009699770368,2018-02-16 08:00:00+00:00,16,5,"Twitter hashtag wordcloud in form of twitter logo by @FerroRodolfo:
 
https://t.co/P9CohxasKZ https://t.co/Rbv9DDE97J",False,False,https://twitter.com/python_tip/status/964409009699770368,"[{'url': 'https://t.co/P9CohxasKZ', 'expanded_url': 'https://github.com/RodolfoFerro/TwHashtagsVis/', 'display_url': 'github.com/RodolfoFerro/T…'}]","[{'url': 'https://t.co/Rbv9DDE97J', 'media_url': 'http://pbs.twimg.com/media/DVylFvjV4AAM_Ep.jpg', 'display_url': 'pic.twitter.com/Rbv9DDE97J'}]"
964046629128024065,2018-02-15 08:00:02+00:00,54,16,"#Jupyter notebook autocomplete and docs:

Tab = autocomplete
Shift-tab = arguments of the function/method
2 x shift-tab, 3 x shift-tab, ?function = more docs
??function = source code",False,False,https://twitter.com/python_tip/status/964046629128024065,[],[]
963916390267633664,2018-02-14 23:22:30+00:00,0,0,"RT @DynamicWebPaige: @drob your heart is red
but my heart is torn
between #rstats + ggplot2
and #python + seaborn https://t.co/i6h2eoWoJL",False,True,https://twitter.com/python_tip/status/963916390267633664,[],"[{'url': 'https://t.co/i6h2eoWoJL', 'media_url': 'http://pbs.twimg.com/media/DWCCvNcVwAAuAS0.jpg', 'display_url': 'pic.twitter.com/i6h2eoWoJL'}]"
963684235906306048,2018-02-14 08:00:00+00:00,25,7,"Scraping data from Facebook using just urllib (by @kondrej):

https://t.co/CPTE4rBhaq",False,False,https://twitter.com/python_tip/status/963684235906306048,"[{'url': 'https://t.co/CPTE4rBhaq', 'expanded_url': 'https://kokes.github.io/blog/2018/02/04/facebook-downloading.html', 'display_url': 'kokes.github.io/blog/2018/02/0…'}]",[]
963321850934697984,2018-02-13 08:00:01+00:00,15,2,"Preparing for #ValentineDay? Say ""I love you!"" in Python and other programming languages.

https://t.co/eCzbgbvbV2 https://t.co/rIKPoIxmhc",False,False,https://twitter.com/python_tip/status/963321850934697984,"[{'url': 'https://t.co/eCzbgbvbV2', 'expanded_url': 'https://codegolf.stackexchange.com/questions/20558/make-a-valentine-wish-with-your-favourite-language', 'display_url': 'codegolf.stackexchange.com/questions/2055…'}]","[{'url': 'https://t.co/rIKPoIxmhc', 'media_url': 'http://pbs.twimg.com/media/DVynmO9UMAEdTUj.jpg', 'display_url': 'pic.twitter.com/rIKPoIxmhc'}]"
962959466936270848,2018-02-12 08:00:02+00:00,30,5,"Not only #pythontip: Financial Times Visual Vocabulary

https://t.co/sdLWJFJGNF

can help you to select the best graphical representation of your data. (a #waterfall chart below generated by https://t.co/uKHfikWaah) https://t.co/16e39O91AP",False,False,https://twitter.com/python_tip/status/962959466936270848,"[{'url': 'https://t.co/sdLWJFJGNF', 'expanded_url': 'http://ft.com/vocabulary', 'display_url': 'ft.com/vocabulary'}, {'url': 'https://t.co/uKHfikWaah', 'expanded_url': 'https://github.com/chrispaulca/waterfall', 'display_url': 'github.com/chrispaulca/wa…'}]","[{'url': 'https://t.co/16e39O91AP', 'media_url': 'http://pbs.twimg.com/media/DVymgh-UQAAlLk5.jpg', 'display_url': 'pic.twitter.com/16e39O91AP'}]"
961975962513571842,2018-02-09 14:51:56+00:00,30,5,"Create vega-lite plots from your #pandas dataframes with pdvega by @jakevdp. It has almost the same API as Pandas' built-in visualization tools.
https://t.co/0zYROoElqd
#dataviz #python https://t.co/KEn3fTQiXv",False,False,https://twitter.com/python_tip/status/961975962513571842,"[{'url': 'https://t.co/0zYROoElqd', 'expanded_url': 'https://github.com/jakevdp/pdvega', 'display_url': 'github.com/jakevdp/pdvega'}]","[{'url': 'https://t.co/KEn3fTQiXv', 'media_url': 'http://pbs.twimg.com/media/DVmfq0qW4AEc-bE.jpg', 'display_url': 'pic.twitter.com/KEn3fTQiXv'}]"
961646715328712705,2018-02-08 17:03:38+00:00,32,5,"Filter a #pandas dataframe based on a partial string match in a column:

df[df[""filename""].str.contains(""abc"")]",False,False,https://twitter.com/python_tip/status/961646715328712705,[],[]
961461710614757376,2018-02-08 04:48:29+00:00,0,0,@alexpmil Nice!,True,False,https://twitter.com/python_tip/status/961461710614757376,[],[]
961407009076596737,2018-02-08 01:11:07+00:00,0,0,RT @alexpmil: @python_tip Down with violin plots! https://t.co/PJTd5KqPvy,False,True,https://twitter.com/python_tip/status/961407009076596737,[],"[{'url': 'https://t.co/PJTd5KqPvy', 'media_url': 'http://pbs.twimg.com/media/DVdQFt2W0AAq63i.jpg', 'display_url': 'pic.twitter.com/PJTd5KqPvy'}]"
961299457928175616,2018-02-07 18:03:45+00:00,36,14,"Do you call the function repeatedly for the same parameters? #Memoization is your friend. See 

https://t.co/d47CZdzmfG

for explanation and module functools for the actual implementation

https://t.co/zDNqXHDsfA

#pythontip",False,False,https://twitter.com/python_tip/status/961299457928175616,"[{'url': 'https://t.co/d47CZdzmfG', 'expanded_url': 'https://www.python-course.eu/python3_memoization.php', 'display_url': 'python-course.eu/python3_memoiz…'}, {'url': 'https://t.co/zDNqXHDsfA', 'expanded_url': 'http://book.pythontips.com/en/latest/function_caching.html', 'display_url': 'book.pythontips.com/en/latest/func…'}]",[]
960931741077790721,2018-02-06 17:42:34+00:00,17,3,"Change the maximum number of rows / columns shown when pretty-printing a #pandas dataframe:

pd.set_option('display.max_rows', 200)
pd.set_option('display.max_columns', 200)

https://t.co/2oib0fbReP",False,False,https://twitter.com/python_tip/status/960931741077790721,"[{'url': 'https://t.co/2oib0fbReP', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/stable/options.html', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}]",[]
960527247525449729,2018-02-05 14:55:16+00:00,16,2,"Complex is better than complicated.
One liners are not the same thing as concise

https://t.co/SZMWt5MbKN

(via @raymondh and @jackdied)",False,False,https://twitter.com/python_tip/status/960527247525449729,"[{'url': 'https://t.co/SZMWt5MbKN', 'expanded_url': 'https://twitter.com/raymondh/status/955647324792938496', 'display_url': 'twitter.com/raymondh/statu…'}]",[]
959721832516534272,2018-02-03 09:34:50+00:00,46,2,A year ago the first @python_tip was published. 🎂 🎈 🎉 🎏 https://t.co/ESz7QXv78z,False,False,https://twitter.com/python_tip/status/959721832516534272,"[{'url': 'https://t.co/ESz7QXv78z', 'expanded_url': 'https://twitter.com/python_tip/status/827622022461214721', 'display_url': 'twitter.com/python_tip/sta…'}]",[]
959335579757367297,2018-02-02 08:00:00+00:00,69,26,"Unzipping files in Python:

import zipfile
with zipfile.ZipFile(""https://t.co/FFxRQWEcR8"",""r"") as zip_ref:
    zip_ref.extractall(""targetdir"")

#zip #pythontip",False,False,https://twitter.com/python_tip/status/959335579757367297,"[{'url': 'https://t.co/FFxRQWEcR8', 'expanded_url': 'http://file.zip', 'display_url': 'file.zip'}]",[]
958973194630778880,2018-02-01 08:00:01+00:00,27,7,"Compare distributions of two variables with seaborn.violinplot:

df = pd.DataFrame({""Group"": 50*[""A""] + 50*[""B""], ""Y"": np.random.normal(2, 1, 100) + np.array([0]*50 + [1]*50)})
sns.violinplot(https://t.co/4jtacwaQPQ, df.Y, inner=""quartile"")
https://t.co/mdh1L2FULi()

#pythontip https://t.co/74Q4BZCe8l",False,False,https://twitter.com/python_tip/status/958973194630778880,"[{'url': 'https://t.co/4jtacwaQPQ', 'expanded_url': 'http://df.Group', 'display_url': 'df.Group'}, {'url': 'https://t.co/mdh1L2FULi', 'expanded_url': 'http://plt.show', 'display_url': 'plt.show'}]","[{'url': 'https://t.co/74Q4BZCe8l', 'media_url': 'http://pbs.twimg.com/media/DUq1KjCU0AA9QmY.jpg', 'display_url': 'pic.twitter.com/74Q4BZCe8l'}]"
958826173676466176,2018-01-31 22:15:48+00:00,1,0,"@pascalbugnion @maartenbreddels Thanks for the extension and gmaps module, really easy to use.",True,False,https://twitter.com/python_tip/status/958826173676466176,[],[]
958825494396354562,2018-01-31 22:13:06+00:00,1,0,"@GRIQUOIS Interesting, you are right. It seems to be caused by NaN value:

>>> import numpy as np
>>> np.array([1,2,3])
array([1, 2, 3])
>>> np.array([1,2,3,np.nan])
array([  1.,   2.,   3.,  nan])",True,False,https://twitter.com/python_tip/status/958825494396354562,[],[]
958824470197620736,2018-01-31 22:09:02+00:00,1,0,"@iskishor Point taken, more diverse tips needed. I usually tweet what I struggle with. And that is currently #numpy and #pandas.",True,False,https://twitter.com/python_tip/status/958824470197620736,[],[]
958610806471499776,2018-01-31 08:00:01+00:00,46,13,"Does your #numpy array contain missing values? 

> import numpy as np
> x = np.array([1,2,3,np.nan])

You can remove them:

> x[~np.isnan(x)]
array([ 1.,  2.,  3.])
> np.nanmean(x)
2.0

Or replace them by a number:

> np.nan_to_num(x,0)
array([ 1.,  2.,  3.,  0.]) 

#pythontip",False,False,https://twitter.com/python_tip/status/958610806471499776,[],[]
958248415632113664,2018-01-30 08:00:00+00:00,54,10,"Create an interactive map of your followers' locations in #Jupyter notebook:

https://t.co/jwkLwTCZ8N

It is amazing to see that @python_tip is now followed from 96 countries. Thank you all.

#tweepy #googlemaps #gmaps https://t.co/MVqVN8n1r8",False,False,https://twitter.com/python_tip/status/958248415632113664,"[{'url': 'https://t.co/jwkLwTCZ8N', 'expanded_url': 'https://gist.github.com/simecek/fa9f995cafc6fa4f878a8ee0e7a2d3cf', 'display_url': 'gist.github.com/simecek/fa9f99…'}]","[{'url': 'https://t.co/MVqVN8n1r8', 'media_url': 'http://pbs.twimg.com/media/DUqoXQnVAAAEPyU.jpg', 'display_url': 'pic.twitter.com/MVqVN8n1r8'}]"
957886029209456640,2018-01-29 08:00:00+00:00,27,9,"The tilde ~ is the unary negation operator:

>>> import numpy as np
>>> ~ np.array([True,False])
array([False,  True], dtype=bool)

Be aware that using ~ to scalars can lead to unexpected results:

 >>> ~ True
-2
>>> ~ False
-1
>>> ~ np.isfinite(np.inf)
True

#pythontip",False,False,https://twitter.com/python_tip/status/957886029209456640,[],[]
956953573673328640,2018-01-26 18:14:45+00:00,37,13,Add interactivity to #matplotlib plots inside #Jupyter notebooks with %matplotlib notebook magic. https://t.co/yMJHcu6PNj,False,False,https://twitter.com/python_tip/status/956953573673328640,"[{'url': 'https://t.co/yMJHcu6PNj', 'expanded_url': 'https://twitter.com/radekosmulski/status/956927960434597888', 'display_url': 'twitter.com/radekosmulski/…'}]",[]
956901652161814530,2018-01-26 14:48:26+00:00,0,0,"RT @jakevdp: On this day in 1994, Python version 1.0 was released! And today, you can try it yourself using conda:

  $ conda create -n py1…",False,True,https://twitter.com/python_tip/status/956901652161814530,[],[]
956545313195642881,2018-01-25 15:12:29+00:00,89,34,"Know the difference between append() and extend():

>>> x = [1,2,3]
>>> x.append([4,5])
>>> x
[1, 2, 3, [4, 5]]
>>> x.extend([6,7])
>>> x
[1, 2, 3, [4, 5], 6, 7]
>>> x.extend(""abc"")
>>> x
[1, 2, 3, [4, 5], 6, 7, 'a', 'b', 'c']

https://t.co/qbMrM1bRAf",False,False,https://twitter.com/python_tip/status/956545313195642881,"[{'url': 'https://t.co/qbMrM1bRAf', 'expanded_url': 'https://stackoverflow.com/questions/252703/difference-between-append-vs-extend-list-methods-in-python', 'display_url': 'stackoverflow.com/questions/2527…'}]",[]
956213407027515395,2018-01-24 17:13:36+00:00,36,3,"Find frequency of values in #pandas dataframe with value_counts() method. 

>>> df.groupby('State')['Industry'].value_counts()

#python https://t.co/IdzsPCdDcr",False,False,https://twitter.com/python_tip/status/956213407027515395,[],"[{'url': 'https://t.co/IdzsPCdDcr', 'media_url': 'http://pbs.twimg.com/media/DUUm-8-XcAE00qC.jpg', 'display_url': 'pic.twitter.com/IdzsPCdDcr'}]"
955800730014834688,2018-01-23 13:53:46+00:00,19,3,"Use #pandas to extract values from a file as a #numpy array:

val = https://t.co/KBWVZaKP7L_csv(""./dl/val.csv"")['mask'].values

#python",False,False,https://twitter.com/python_tip/status/955800730014834688,"[{'url': 'https://t.co/KBWVZaKP7L', 'expanded_url': 'http://pd.read', 'display_url': 'pd.read'}]",[]
955429320591364096,2018-01-22 13:17:55+00:00,51,26,"Use #pathlib for recursive globbing:
>>> import pathlib
>>> images = pathlib.Path('/mypath/').glob('**/*.png')
>>> list(images)

https://t.co/jyNqpHaJXi

#python3",False,False,https://twitter.com/python_tip/status/955429320591364096,"[{'url': 'https://t.co/jyNqpHaJXi', 'expanded_url': 'https://docs.python.org/3/library/pathlib.html#basic-use', 'display_url': 'docs.python.org/3/library/path…'}]",[]
954837361967341569,2018-01-20 22:05:41+00:00,1,0,@brycehemme Never used SageMaker before. But it is on my TODO list for the next week because of DeepAR https://t.co/pigzDfwHhd,True,False,https://twitter.com/python_tip/status/954837361967341569,"[{'url': 'https://t.co/pigzDfwHhd', 'expanded_url': 'https://aws.amazon.com/blogs/machine-learning/now-available-in-amazon-sagemaker-deepar-algorithm-for-more-accurate-time-series-forecasting/', 'display_url': 'aws.amazon.com/blogs/machine-…'}]",[]
954624205747900417,2018-01-20 07:58:41+00:00,0,0,@vaibhavsriv10 It seems there is 12h limit per each run https://t.co/2S6IJoTkPs,True,False,https://twitter.com/python_tip/status/954624205747900417,"[{'url': 'https://t.co/2S6IJoTkPs', 'expanded_url': 'https://twitter.com/jekbradbury/status/954462996633305088', 'display_url': 'twitter.com/jekbradbury/st…'}]",[]
954603461353422848,2018-01-20 06:36:15+00:00,124,59,"Microsoft offers free #Jupyter notebooks in the cloud:

https://t.co/VYbNmjZFwf

Even better, Google's free Colaboratory notebooks (https://t.co/m6vNsFxku5) now comes with Tesla K80 GPU. Crazy! 

https://t.co/3c9ISNIq7y

#pythontip #deeplearning #colab https://t.co/IPrUm5Hp9V",False,False,https://twitter.com/python_tip/status/954603461353422848,"[{'url': 'https://t.co/VYbNmjZFwf', 'expanded_url': 'https://notebooks.azure.com/', 'display_url': 'notebooks.azure.com'}, {'url': 'https://t.co/m6vNsFxku5', 'expanded_url': 'http://colab.research.google.com/', 'display_url': 'colab.research.google.com'}, {'url': 'https://t.co/3c9ISNIq7y', 'expanded_url': 'https://www.kaggle.com/getting-started/47096#post271139', 'display_url': 'kaggle.com/getting-starte…'}]","[{'url': 'https://t.co/IPrUm5Hp9V', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/DT9uxhuU8AAHnOr.jpg', 'display_url': 'pic.twitter.com/IPrUm5Hp9V'}]"
953902899309903872,2018-01-18 08:12:28+00:00,26,9,"Reshaping data from the wide format to the long format (melt) and back again (pivot):

https://t.co/mqOgAdSZwt

#pandas #pythontip #tidydata https://t.co/sF3p22389c",False,False,https://twitter.com/python_tip/status/953902899309903872,"[{'url': 'https://t.co/mqOgAdSZwt', 'expanded_url': 'http://www.datasciencemadesimple.com/reshape-wide-long-pandas-python-melt-function/', 'display_url': 'datasciencemadesimple.com/reshape-wide-l…'}]","[{'url': 'https://t.co/sF3p22389c', 'media_url': 'http://pbs.twimg.com/media/DTzvsETVwAAlN8D.jpg', 'display_url': 'pic.twitter.com/sF3p22389c'}]"
953543713686343680,2018-01-17 08:25:11+00:00,39,6,"The goldmine of #pythontips from @dan_s_becker and @rctatman: 

https://t.co/rmOuNHdzpN

Interactive #python tutorials on machine learning, deep learning and data visualization.",False,False,https://twitter.com/python_tip/status/953543713686343680,"[{'url': 'https://t.co/rmOuNHdzpN', 'expanded_url': 'https://www.kaggle.com/learn', 'display_url': 'kaggle.com/learn'}]",[]
953174987346776065,2018-01-16 08:00:00+00:00,33,13,"Do you need to save a large object?

import numpy as np
x = np.zeros((1000,1000))

Compress your pickle file

import gzip, cPickle
with https://t.co/wFbykHTCKH('tmp.gz','wb') as f:
  cPickle.dump(x, f, 2)

Or take advantage of savez_compressed:

np.savez_compressed('tmp.npz', x)",False,False,https://twitter.com/python_tip/status/953174987346776065,"[{'url': 'https://t.co/wFbykHTCKH', 'expanded_url': 'http://gzip.open', 'display_url': 'gzip.open'}]",[]
953088501662212096,2018-01-16 02:16:20+00:00,1,0,"@skepteis Yes, but relatively small:

>>> from timeit import timeit
>>> timeit(""np.log1p(x)"", number = 10, setup=""import numpy as np; x=np.random.random(10000000)"")
1.290
>>> timeit(""np.log(1+x)"", number = 10, setup=""import numpy as np; x=np.random.random(10000000)"")
1.334",True,False,https://twitter.com/python_tip/status/953088501662212096,[],[]
952812602819739654,2018-01-15 08:00:01+00:00,40,8,"f(x) = log(1+x) is a common transformation for non-negative data. With #numpy, use log1p(x), not log(x)+1, to get a better precision for small numbers:

>>> import numpy as np
>>> np.log1p(1e-99)
1e-99
>>> np.log(1 + 1e-99)
0.0

The inverse function is 'expm1'.

#pythontip #numpy",False,False,https://twitter.com/python_tip/status/952812602819739654,[],[]
951829597523456000,2018-01-12 14:53:54+00:00,24,6,"split pandas dataframe into two random subsets:
>>> from sklearn.model_selection import train_test_split
>>> train, test = train_test_split(df, test_size=0.2)

#python",False,False,https://twitter.com/python_tip/status/951829597523456000,[],[]
951383599449767937,2018-01-11 09:21:40+00:00,42,4,"Read a csv into #pandas dataframe while interpreting “,” as a thousands seperator:
df = https://t.co/KBWVZaKP7L_csv('example.csv', thousands=',')
https://t.co/m2WbjDPWv4
#python",False,False,https://twitter.com/python_tip/status/951383599449767937,"[{'url': 'https://t.co/KBWVZaKP7L', 'expanded_url': 'http://pd.read', 'display_url': 'pd.read'}, {'url': 'https://t.co/m2WbjDPWv4', 'expanded_url': 'https://chrisalbon.com/python/data_wrangling/pandas_dataframe_importing_csv/', 'display_url': 'chrisalbon.com/python/data_wr…'}]",[]
951006935670820864,2018-01-10 08:24:56+00:00,33,12,"You can also use csv.Sniffer() to guess the delimiter for you.
https://t.co/YMJ1LDOuOJ

#python https://t.co/e05SXlG3sL",False,False,https://twitter.com/python_tip/status/951006935670820864,"[{'url': 'https://t.co/YMJ1LDOuOJ', 'expanded_url': 'https://docs.python.org/2/library/csv.html#csv.Sniffer', 'display_url': 'docs.python.org/2/library/csv.…'}, {'url': 'https://t.co/e05SXlG3sL', 'expanded_url': 'https://twitter.com/raymondh/status/950809128376582144', 'display_url': 'twitter.com/raymondh/statu…'}]",[]
950649826739392512,2018-01-09 08:45:55+00:00,40,16,"pandas.cut() can be used to turn a continuous variable into a categorical one. https://t.co/RAP83qYiVu
#python #pandas",False,False,https://twitter.com/python_tip/status/950649826739392512,"[{'url': 'https://t.co/RAP83qYiVu', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/stable/generated/pandas.cut.html', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}]",[]
950275889127936000,2018-01-08 08:00:01+00:00,47,10,"Trying to find a bug in your script? Rerun it with pdb as follows

python -m pdb example.py
(example.py and output attached)

Too complicated? The text-GUI debugger pudb is here to help

python -m https://t.co/o81VcY0Mt6 example.py

#pythontip #pdb #pudb https://t.co/OhLIwcFCPj",False,False,https://twitter.com/python_tip/status/950275889127936000,"[{'url': 'https://t.co/o81VcY0Mt6', 'expanded_url': 'http://pudb.run', 'display_url': 'pudb.run'}]","[{'url': 'https://t.co/OhLIwcFCPj', 'media_url': 'http://pbs.twimg.com/media/DTAHzDWV4AAie8g.jpg', 'display_url': 'pic.twitter.com/OhLIwcFCPj'}]"
949516017838956545,2018-01-06 05:40:34+00:00,30,8,"absl-py is a library for building Python applications developed by Google, extensively tested and used in production

Example with flags and logging:
https://t.co/js8hJLg9Ml

Codes and installation:
https://t.co/jLX7J9s1cc

#pythontip",False,False,https://twitter.com/python_tip/status/949516017838956545,"[{'url': 'https://t.co/js8hJLg9Ml', 'expanded_url': 'https://gist.github.com/simecek/29695cf4a1b53357ba6921fe0cc9da5f', 'display_url': 'gist.github.com/simecek/29695c…'}, {'url': 'https://t.co/jLX7J9s1cc', 'expanded_url': 'https://github.com/abseil/abseil-py', 'display_url': 'github.com/abseil/abseil-…'}]",[]
949159440137228289,2018-01-05 06:03:39+00:00,56,14,"Get absolute path with pathlib.Path.resolve():
>>> from pathlib import Path
>>> p = Path('.’)
>>> p.resolve()
PosixPath(‘/home/sweet/home’)
#python 3",False,False,https://twitter.com/python_tip/status/949159440137228289,[],[]
948605053367074816,2018-01-03 17:20:43+00:00,21,15,"PEP 435 introduced enum to Python:

from enum import Enum
class Animal(Enum):
    ant, bee, cat, dog = range(4)
https://t.co/gfa6c4GDuS
https://t.co/441iquh5Qq

#pythontip",False,False,https://twitter.com/python_tip/status/948605053367074816,"[{'url': 'https://t.co/gfa6c4GDuS', 'expanded_url': 'http://Animal.cat', 'display_url': 'Animal.cat'}, {'url': 'https://t.co/441iquh5Qq', 'expanded_url': 'http://Animal.cat.name', 'display_url': 'Animal.cat.name'}]",[]
948530689900732416,2018-01-03 12:25:13+00:00,0,0,RT @click_arun: @python_tip @iandanforth Looks like there is a better option if you are ready for some extensions  https://t.co/TSW6mSQbQX,False,True,https://twitter.com/python_tip/status/948530689900732416,"[{'url': 'https://t.co/TSW6mSQbQX', 'expanded_url': 'https://twitter.com/EliotAndres/status/937795711097225216', 'display_url': 'twitter.com/EliotAndres/st…'}]",[]
948317850913026048,2018-01-02 22:19:29+00:00,18,5,"Time for #javascript! Add a beep after a long running cell in #jupyter notebook to let you know when it’s done. 

https://t.co/AJNqTRMBU0 

(by @iandanforth)",False,False,https://twitter.com/python_tip/status/948317850913026048,"[{'url': 'https://t.co/AJNqTRMBU0', 'expanded_url': 'https://gist.github.com/iandanforth/fd9c98dc485592e354974e394ff6ae28', 'display_url': 'gist.github.com/iandanforth/fd…'}]",[]
947739169291423744,2018-01-01 08:00:00+00:00,58,25,"New year, new chance to master Python! https://t.co/AGEoKvlnlg",False,False,https://twitter.com/python_tip/status/947739169291423744,[],"[{'url': 'https://t.co/AGEoKvlnlg', 'media_url': 'http://pbs.twimg.com/media/DSY1gFxU8AA8Cxw.jpg', 'display_url': 'pic.twitter.com/AGEoKvlnlg'}]"
946764011080732672,2017-12-29 15:25:04+00:00,72,17,"Create new directories with #pathlib.Path.mkdir() method

import pathlib
pathlib.Path('/my/new/directory').mkdir(parents=True, exist_ok=True) 

This creates all missing parents
and doesn't raise an exception if the directory already exists.

#python 3",False,False,https://twitter.com/python_tip/status/946764011080732672,[],[]
946405560144027650,2017-12-28 15:40:43+00:00,0,0,@click_arun 👍,True,False,https://twitter.com/python_tip/status/946405560144027650,[],[]
946381556591054849,2017-12-28 14:05:20+00:00,56,24,"In #jupyter notebook, you can use _N to get the output of N-th cell:

In  [20]: _2
Out [20]: 200 https://t.co/TCenrGXd8j",False,False,https://twitter.com/python_tip/status/946381556591054849,[],"[{'url': 'https://t.co/TCenrGXd8j', 'media_url': 'http://pbs.twimg.com/media/DSI4tJlWsAAqg3e.jpg', 'display_url': 'pic.twitter.com/TCenrGXd8j'}]"
946025257932066816,2017-12-27 14:29:32+00:00,32,14,"Use %debug magic in #jupyter notebook to see details of an exception. 

(see the whole thread) https://t.co/lDhNe03UZA",False,False,https://twitter.com/python_tip/status/946025257932066816,"[{'url': 'https://t.co/lDhNe03UZA', 'expanded_url': 'https://twitter.com/radekosmulski/status/945739571735748609', 'display_url': 'twitter.com/radekosmulski/…'}]",[]
945724472807522304,2017-12-26 18:34:19+00:00,29,13,"Fastest way to uniquify a list in #python >=3.6:
>>> list(set(seq))
or, if order is important:
>>> list(dict.fromkeys(seq))
https://t.co/IGrYHrPUMM by @peterbe",False,False,https://twitter.com/python_tip/status/945724472807522304,"[{'url': 'https://t.co/IGrYHrPUMM', 'expanded_url': 'https://www.peterbe.com/plog/fastest-way-to-uniquify-a-list-in-python-3.6', 'display_url': 'peterbe.com/plog/fastest-w…'}]",[]
945252910228795393,2017-12-25 11:20:30+00:00,29,15,"Draw a tree with #python 
https://t.co/LFPtKCsWkq
Happy Holidays! https://t.co/Rfu2EERVpN",False,False,https://twitter.com/python_tip/status/945252910228795393,"[{'url': 'https://t.co/LFPtKCsWkq', 'expanded_url': 'https://gist.github.com/franktoffel/aea4329b760eb3e72f4d', 'display_url': 'gist.github.com/franktoffel/ae…'}]","[{'url': 'https://t.co/Rfu2EERVpN', 'media_url': 'http://pbs.twimg.com/media/DR42a8wX0AAWSA-.jpg', 'display_url': 'pic.twitter.com/Rfu2EERVpN'}]"
944115292560609280,2017-12-22 08:00:01+00:00,10,7,"If you did not try turtle graphics yet,  remember, now is better than never:

https://t.co/4luWNTI91J

#turtle #StarryNight #ChristmasTree",False,False,https://twitter.com/python_tip/status/944115292560609280,"[{'url': 'https://t.co/4luWNTI91J', 'expanded_url': 'http://www.101computing.net/chirstmas-tree/', 'display_url': '101computing.net/chirstmas-tree/'}]",[]
943752906091761664,2017-12-21 08:00:01+00:00,24,7,"Do you need an alternative to XML/JSON that is fast, cross-language and dense (binary)? Consider protocol buffers:

https://t.co/TZeUnQRDT0
https://t.co/zCPEJ85MXM

#protobuf #pythontip",False,False,https://twitter.com/python_tip/status/943752906091761664,"[{'url': 'https://t.co/TZeUnQRDT0', 'expanded_url': 'https://github.com/google/protobuf', 'display_url': 'github.com/google/protobuf'}, {'url': 'https://t.co/zCPEJ85MXM', 'expanded_url': 'https://dzone.com/articles/protobuf-performance-comparison-and-points-to-make', 'display_url': 'dzone.com/articles/proto…'}]",[]
943359749051109376,2017-12-20 05:57:45+00:00,31,2,"pyautogui module: automate mouse clicks & other interactions with Python! 

https://t.co/dmCcbGPxmn

(via
https://t.co/fF6XHk4PRN)

#pythontip",False,False,https://twitter.com/python_tip/status/943359749051109376,"[{'url': 'https://t.co/dmCcbGPxmn', 'expanded_url': 'https://github.com/asweigart/pyautogui', 'display_url': 'github.com/asweigart/pyau…'}, {'url': 'https://t.co/fF6XHk4PRN', 'expanded_url': 'https://twitter.com/jakevdp/status/943215684883857408', 'display_url': 'twitter.com/jakevdp/status…'}]",[]
943030136961622016,2017-12-19 08:07:59+00:00,1,0,@eumiro Thanks!,True,False,https://twitter.com/python_tip/status/943030136961622016,[],[]
943029886607691776,2017-12-19 08:07:00+00:00,0,0,"RT @eumiro: @python_tip No need for dateutil, pandas is an ""eierlegende Wollmilchsau"" (Swiss Army Knife) for this:

from https://t.co/90SI7…",False,True,https://twitter.com/python_tip/status/943029886607691776,[],[]
943024844995571713,2017-12-19 07:46:58+00:00,32,14,"2018 is coming! Find all US holidays in the new year:

from https://t.co/qnfMyvMjvg import USFederalHolidayCalendar as cal
cal().holidays(start='2018-01-01', end='2018-12-31').to_pydatetime()

What about Easter?

from dateutil.easter import easter
easter(2018)

#pythontip",False,False,https://twitter.com/python_tip/status/943024844995571713,"[{'url': 'https://t.co/qnfMyvMjvg', 'expanded_url': 'http://pandas.tseries.holiday', 'display_url': 'pandas.tseries.holiday'}]",[]
942673519699046400,2017-12-18 08:30:55+00:00,59,15,"When a string won't fit on a line, you can use parentheses for implicit line joining:

x = ('Oh my god, this is so long, really '
     'long long long long long long string')
x",False,False,https://twitter.com/python_tip/status/942673519699046400,[],[]
941674812153450498,2017-12-15 14:22:25+00:00,19,4,"Install a conda package in the current #Jupyter kernel

import sys
!conda install --yes --prefix {sys.prefix} numpy

https://t.co/JFDfgPHSCC",False,False,https://twitter.com/python_tip/status/941674812153450498,"[{'url': 'https://t.co/JFDfgPHSCC', 'expanded_url': 'http://jakevdp.github.io/blog/2017/12/05/installing-python-packages-from-jupyter/index.html', 'display_url': 'jakevdp.github.io/blog/2017/12/0…'}]",[]
941594201699049472,2017-12-15 09:02:06+00:00,0,0,"RT @BerndVerst: #Pythonistas, @Microsoft is considering bringing #Python 🐍 scripting to @msexcel! 🎉

Please add your feedback here: https:/…",False,True,https://twitter.com/python_tip/status/941594201699049472,[],[]
941243060108906496,2017-12-14 09:46:47+00:00,38,9,"iter() can take two arguments, first one being a function that takes no arguments, second one marks the stop:
with open('mydata.txt') as fp:
    for line in iter(fp.readline, '""""):
        do_something

https://t.co/dQe7JWUGNQ
#python",False,False,https://twitter.com/python_tip/status/941243060108906496,"[{'url': 'https://t.co/dQe7JWUGNQ', 'expanded_url': 'https://docs.python.org/3/library/functions.html#iter', 'display_url': 'docs.python.org/3/library/func…'}]",[]
940909138367873024,2017-12-13 11:39:54+00:00,65,19,"Use operator.methodcaller to find items or sort a list: 
>>> mylist = ['first', 'second!', 'third!!', 'fourth!!!']
>>> list(filter(operator.methodcaller('endswith', '!'), mylist))
#python https://t.co/UIBYpfl7b6",False,False,https://twitter.com/python_tip/status/940909138367873024,[],"[{'url': 'https://t.co/UIBYpfl7b6', 'media_url': 'http://pbs.twimg.com/media/DQ7HuCZW0AADGk0.jpg', 'display_url': 'pic.twitter.com/UIBYpfl7b6'}]"
940718130027929600,2017-12-12 23:00:54+00:00,3,0,@fajardofje @RealPython Right. https://t.co/R8VayQCXBa,True,False,https://twitter.com/python_tip/status/940718130027929600,"[{'url': 'https://t.co/R8VayQCXBa', 'expanded_url': 'https://www.python.org/dev/peps/pep-0485/#proposed-implementation', 'display_url': 'python.org/dev/peps/pep-0…'}]",[]
940506518042169350,2017-12-12 09:00:02+00:00,69,21,Compare two floats with math.isclose() to see if they are nearly equal #python https://t.co/y9QiKtpbNP,False,False,https://twitter.com/python_tip/status/940506518042169350,[],"[{'url': 'https://t.co/y9QiKtpbNP', 'media_url': 'http://pbs.twimg.com/media/DQwgxCOUEAEwFqD.jpg', 'display_url': 'pic.twitter.com/y9QiKtpbNP'}]"
940151264033300480,2017-12-11 09:28:23+00:00,19,11,"List of projects dropping #python 2 support in or before 2020:
https://t.co/w0qfUZR20x",False,False,https://twitter.com/python_tip/status/940151264033300480,"[{'url': 'https://t.co/w0qfUZR20x', 'expanded_url': 'http://www.python3statement.org/', 'display_url': 'python3statement.org'}]",[]
939041858990116865,2017-12-08 08:00:00+00:00,19,6,"Shift a bit ten to the left - and you've got 2**10:

>>> 1 << 10
1024

(via @aaronchall)",False,False,https://twitter.com/python_tip/status/939041858990116865,[],[]
938686214495911936,2017-12-07 08:26:48+00:00,24,7,"#Jupyter If you are using the IPython kernel, you can save the actual execution history to a notebook with %notebook magic: 

%notebook -e history.ipynb",False,False,https://twitter.com/python_tip/status/938686214495911936,[],[]
938317088183242752,2017-12-06 08:00:01+00:00,84,46,"#Python3 is coming. Still need to code in Python2? Use these 4 lines and your future self will thank you:

from __future__ import absolute_import
from __future__ import division
from __future__ import print_function
from __future__ import unicode_literals

https://t.co/V3TGunnoR8",False,False,https://twitter.com/python_tip/status/938317088183242752,"[{'url': 'https://t.co/V3TGunnoR8', 'expanded_url': 'http://python-future.org/quickstart.html', 'display_url': 'python-future.org/quickstart.html'}]",[]
937956210246144001,2017-12-05 08:06:01+00:00,20,5,"You do not have to specify object's type in Python but with #mypy you can hint it

def greeting(name: str) -> str:
    return 'Hello ' + name

https://t.co/zPloEQzYP2 https://t.co/nrT4JaCL3u

#pythontip #typehinting",False,False,https://twitter.com/python_tip/status/937956210246144001,"[{'url': 'https://t.co/zPloEQzYP2', 'expanded_url': 'https://github.com/python/mypy', 'display_url': 'github.com/python/mypy'}, {'url': 'https://t.co/nrT4JaCL3u', 'expanded_url': 'https://www.python.org/dev/peps/pep-0484/', 'display_url': 'python.org/dev/peps/pep-0…'}]",[]
937592318399602688,2017-12-04 08:00:02+00:00,28,17,"#Django 2.0 is out:
* Simplified URL routing syntax
* Responsive, mobile-friendly contrib.admin
* Python 2.7 no longer supported

https://t.co/X5DdbeSLF1",False,False,https://twitter.com/python_tip/status/937592318399602688,"[{'url': 'https://t.co/X5DdbeSLF1', 'expanded_url': 'https://docs.djangoproject.com/en/2.0/releases/2.0/', 'display_url': 'docs.djangoproject.com/en/2.0/release…'}]",[]
936541242086903808,2017-12-01 10:23:26+00:00,44,11,"What output do you expect?
F = [lambda x: x**i for i in range(10)]
print([g(2) for g in F])

Explanation:  https://t.co/jWpT4E6UOb https://t.co/LI6p4AXuyy",False,False,https://twitter.com/python_tip/status/936541242086903808,"[{'url': 'https://t.co/jWpT4E6UOb', 'expanded_url': 'https://www.reddit.com/r/Python/comments/3cu6ej/what_are_some_wtf_things_about_python/csz1vpv/', 'display_url': 'reddit.com/r/Python/comme…'}]","[{'url': 'https://t.co/LI6p4AXuyy', 'media_url': 'http://pbs.twimg.com/media/DP9DQmUXkAER7Hl.jpg', 'display_url': 'pic.twitter.com/LI6p4AXuyy'}]"
936176194525032448,2017-11-30 10:12:52+00:00,22,4,"numpy.nan_to_num() replaces nan with 0, inf with a very large float, and -inf with the most negative float. https://t.co/HpR577615s
#numpy #python",False,False,https://twitter.com/python_tip/status/936176194525032448,"[{'url': 'https://t.co/HpR577615s', 'expanded_url': 'https://docs.scipy.org/doc/numpy-1.9.2/reference/generated/numpy.nan_to_num.html', 'display_url': 'docs.scipy.org/doc/numpy-1.9.…'}]",[]
935980424295149568,2017-11-29 21:14:57+00:00,0,0,RT @TalkPython: It's time to challenge yourself with #100daysofcode in Python. Listen to @pybites's @bbelderbos and @_juliansequeira take u…,False,True,https://twitter.com/python_tip/status/935980424295149568,[],[]
935866082036015104,2017-11-29 13:40:36+00:00,50,23,"Do you want collapsible headings, prettified code and more in your #jupyter notebook? Try Jupyter notebook extensions. https://t.co/c4ezfEOzvO",False,False,https://twitter.com/python_tip/status/935866082036015104,"[{'url': 'https://t.co/c4ezfEOzvO', 'expanded_url': 'https://github.com/ipython-contrib/jupyter_contrib_nbextensions', 'display_url': 'github.com/ipython-contri…'}]",[]
935439990418477062,2017-11-28 09:27:28+00:00,44,16,"Restore normal dict behavior of a defaultdict by setting
>>> d.default_factory = None
#python https://t.co/BkYktbjgGl",False,False,https://twitter.com/python_tip/status/935439990418477062,[],"[{'url': 'https://t.co/BkYktbjgGl', 'media_url': 'http://pbs.twimg.com/media/DPtZnoaXUAAAb5u.jpg', 'display_url': 'pic.twitter.com/BkYktbjgGl'}]"
935165034992427009,2017-11-27 15:14:53+00:00,15,2,"Use feather for fast storage of dataframes:

import feather
path = 'my_data.feather'
feather.write_dataframe(df, path)
df = https://t.co/mxOEK04vCm_dataframe(path)

#python 
https://t.co/yz9nJoOo5T",False,False,https://twitter.com/python_tip/status/935165034992427009,"[{'url': 'https://t.co/mxOEK04vCm', 'expanded_url': 'http://feather.read', 'display_url': 'feather.read'}, {'url': 'https://t.co/yz9nJoOo5T', 'expanded_url': 'https://blog.rstudio.com/2016/03/29/feather/', 'display_url': 'blog.rstudio.com/2016/03/29/fea…'}]",[]
933852919169933313,2017-11-24 00:21:00+00:00,29,9,"Learn from @jackdbd about Dash and its differences from #rstats Shiny:

https://t.co/IF4PQizU4g

#python #dash",False,False,https://twitter.com/python_tip/status/933852919169933313,"[{'url': 'https://t.co/IF4PQizU4g', 'expanded_url': 'http://slides.com/jackdbd/deck?utm_content=buffer8880b&utm_medium=social&utm_source=twitter.com&utm_campaign=buffer#/', 'display_url': 'slides.com/jackdbd/deck?u…'}]",[]
933710594536103936,2017-11-23 14:55:27+00:00,49,16,">>> a = [2, 1, 3]
>>> sorted(a) == sorted(a)
True
>>> reversed(a) == reversed(a)
False

Explanation: reversed(a) is an iterator, not a list

>>> type(sorted(a))
<type 'list'>
>>> type(reversed(a))
<type 'listreverseiterator'>
>>> id(reversed(a))
139938992007504",False,False,https://twitter.com/python_tip/status/933710594536103936,[],[]
933258231421345793,2017-11-22 08:57:56+00:00,38,18,"Comparison operator chaining, the reason why 

>>> False == False in [False]

is actually True. Because both '==' and 'in' happens at the same time, the line is equivalent to 

(False == False) and (False in [False])",False,False,https://twitter.com/python_tip/status/933258231421345793,[],[]
932881280559181824,2017-11-21 08:00:04+00:00,25,5,"#NumPy equivalent of enumerate:

import numpy as np

Z = np.arange(9).reshape(3,3)

for index, value in np.ndenumerate(Z):
    print(index, value)

for index in np.ndindex(Z.shape):
    print(index, Z[index])",False,False,https://twitter.com/python_tip/status/932881280559181824,[],[]
932788191563620357,2017-11-21 01:50:09+00:00,0,0,"@InuMassy For me, the most surprising was np.inf > np.nan. I would guess nan, not False.",True,False,https://twitter.com/python_tip/status/932788191563620357,[],[]
932512160185323521,2017-11-20 07:33:18+00:00,19,7,"What is the result of the following expressions?

0 * np.nan
np.nan == np.nan
np.inf > np.nan
np.nan - np.nan
0.3 == 3 * 0.1

(solution: nan, False, False, nan, False)
https://t.co/NfrdFyL0cv",False,False,https://twitter.com/python_tip/status/932512160185323521,"[{'url': 'https://t.co/NfrdFyL0cv', 'expanded_url': 'http://www.labri.fr/perso/nrougier/teaching/numpy.100/index.html', 'display_url': 'labri.fr/perso/nrougier…'}]",[]
931517939227951104,2017-11-17 13:42:38+00:00,16,6,"Friday #python magic:
>>> x = (1 << 53) + 1
>>> x + 1.0 < x
True

Explanation: https://t.co/gvcTcmq1Pd",False,False,https://twitter.com/python_tip/status/931517939227951104,"[{'url': 'https://t.co/gvcTcmq1Pd', 'expanded_url': 'https://github.com/cosmologicon/pywat/blob/master/explanation.md#mixing-numerical-types', 'display_url': 'github.com/cosmologicon/p…'}]",[]
931073706646032384,2017-11-16 08:17:24+00:00,28,3,"Select a random sample from a 1D array:
>>> np.random.choice(['cat', 'dog', 'pig', 'cow', 'sheep', 'duck'], 3, replace=False)
#numpy #python https://t.co/I40nyIA897",False,False,https://twitter.com/python_tip/status/931073706646032384,[],"[{'url': 'https://t.co/I40nyIA897', 'media_url': 'http://pbs.twimg.com/media/DOvWdlkX4AAmj9C.jpg', 'display_url': 'pic.twitter.com/I40nyIA897'}]"
930727795080220672,2017-11-15 09:22:53+00:00,21,2,"Add extra dimensions to a #numpy array using the keyword None when indexing
https://t.co/bcEjlU3LC2
#python https://t.co/5Qk3FdnOHf",False,False,https://twitter.com/python_tip/status/930727795080220672,"[{'url': 'https://t.co/bcEjlU3LC2', 'expanded_url': 'https://stackoverflow.com/a/9511135', 'display_url': 'stackoverflow.com/a/9511135'}]","[{'url': 'https://t.co/5Qk3FdnOHf', 'media_url': 'http://pbs.twimg.com/media/DOqb8MwWAAAQt6r.jpg', 'display_url': 'pic.twitter.com/5Qk3FdnOHf'}]"
930371323683012608,2017-11-14 09:46:23+00:00,21,4,"Find indices of N elements of a #numpy array that are neares to a given value:
np.argsort(np.abs(myarray-0.5))[:N]
#python https://t.co/sU8lRZbJwQ",False,False,https://twitter.com/python_tip/status/930371323683012608,[],"[{'url': 'https://t.co/sU8lRZbJwQ', 'media_url': 'http://pbs.twimg.com/media/DOlXEtwW0AAA153.jpg', 'display_url': 'pic.twitter.com/sU8lRZbJwQ'}]"
929984742421942272,2017-11-13 08:10:15+00:00,30,9,Use exclamation mark to execute a shell command in #Jupyter notebook. https://t.co/lhcvnjhjLF,False,False,https://twitter.com/python_tip/status/929984742421942272,[],"[{'url': 'https://t.co/lhcvnjhjLF', 'media_url': 'http://pbs.twimg.com/media/DOf4IHNWkAAKOTB.jpg', 'display_url': 'pic.twitter.com/lhcvnjhjLF'}]"
928895502304858115,2017-11-10 08:02:00+00:00,22,8,"Numpy: Find the index of the minimal value in an array Z:

np.unravel_index(Z.argmin(), Z.shape)

#numpy #python",False,False,https://twitter.com/python_tip/status/928895502304858115,[],[]
928532619314151425,2017-11-09 08:00:02+00:00,34,20,"Import * can be dangerous:

>>> print(sum(range(5),-1))
9
>>> from numpy import *
>>> print(sum(range(5),-1))
10

https://t.co/MgvngboWzF",False,False,https://twitter.com/python_tip/status/928532619314151425,"[{'url': 'https://t.co/MgvngboWzF', 'expanded_url': 'https://stackoverflow.com/questions/42955201/python-numpy-range-and-sum-1', 'display_url': 'stackoverflow.com/questions/4295…'}]",[]
928302354125881344,2017-11-08 16:45:02+00:00,3,1,"@FortierQuentin The correct version:

import numpy as np
a = np.ones((2,3))
b = np.ones((3,4))
a @ b",True,False,https://twitter.com/python_tip/status/928302354125881344,[],[]
928301845365211136,2017-11-08 16:43:01+00:00,1,0,@FortierQuentin OMG. Thanks.,True,False,https://twitter.com/python_tip/status/928301845365211136,[],[]
928170229519278080,2017-11-08 08:00:01+00:00,42,19,"New in Python >3.5: operator for matrix multiplication @

import numpy as np
a = np.ones(2,3)
b = np.ones(3,4)
a @ b",False,False,https://twitter.com/python_tip/status/928170229519278080,[],[]
927807842001682432,2017-11-07 08:00:02+00:00,8,2,"A short esoteric Python string tutorial from @dabeaz: 

https://t.co/FewHi0uWNH",False,False,https://twitter.com/python_tip/status/927807842001682432,"[{'url': 'https://t.co/FewHi0uWNH', 'expanded_url': 'https://twitter.com/dabeaz/status/925787482515533830', 'display_url': 'twitter.com/dabeaz/status/…'}]",[]
927445451892281344,2017-11-06 08:00:01+00:00,15,7,"Create a matrix with chessboard pattern of 0s and 1s

Z = np.zeros((8,8),dtype=int)
Z[1::2,::2] = 1
Z[::2,1::2] = 1

https://t.co/NfrdFytpkX",False,False,https://twitter.com/python_tip/status/927445451892281344,"[{'url': 'https://t.co/NfrdFytpkX', 'expanded_url': 'http://www.labri.fr/perso/nrougier/teaching/numpy.100/index.html', 'display_url': 'labri.fr/perso/nrougier…'}]",[]
926432146243424257,2017-11-03 12:53:30+00:00,38,16,"Get alphabet in #python:

>>> import string
>>> print(string.ascii_uppercase)
ABCDEFGHIJKLMNOPQRSTUVWXYZ",False,False,https://twitter.com/python_tip/status/926432146243424257,[],[]
926034688585629703,2017-11-02 10:34:09+00:00,22,9,"Today’s tip by @ratneshkush:
Struggling for PDF generation using #Python. Use ReportLab API. 

https://t.co/PhbykBykrJ",False,False,https://twitter.com/python_tip/status/926034688585629703,"[{'url': 'https://t.co/PhbykBykrJ', 'expanded_url': 'https://www.blog.pythonlibrary.org/2010/03/08/a-simple-step-by-step-reportlab-tutorial/', 'display_url': 'blog.pythonlibrary.org/2010/03/08/a-s…'}]",[]
925938103595835392,2017-11-02 04:10:21+00:00,0,0,"RT @pybites: New PyBites Code Challenge 41 is out:
Daily Python Tip Part 2 - Build an #API https://t.co/dQCo203vwP 
@python_tip https://t.c…",False,True,https://twitter.com/python_tip/status/925938103595835392,"[{'url': 'https://t.co/dQCo203vwP', 'expanded_url': 'https://pybit.es/codechallenge41.html#.WfpA6ZUzgM0.twitter', 'display_url': 'pybit.es/codechallenge4…'}]",[]
925689685468499969,2017-11-01 11:43:14+00:00,108,50,"a += b doesn't always behave the same way as a = a + b!
https://t.co/osZWBD9HDT
#python https://t.co/D9thf9b5ZD",False,False,https://twitter.com/python_tip/status/925689685468499969,"[{'url': 'https://t.co/osZWBD9HDT', 'expanded_url': 'https://github.com/satwikkansal/wtfpython/blob/master/README.md#same-operands-different-story', 'display_url': 'github.com/satwikkansal/w…'}]","[{'url': 'https://t.co/D9thf9b5ZD', 'media_url': 'http://pbs.twimg.com/media/DNi1xvtXUAAJ7xJ.jpg', 'display_url': 'pic.twitter.com/D9thf9b5ZD'}]"
925337967094304768,2017-10-31 12:25:37+00:00,53,27,"Want colorful terminal spinners? Try halo. 
https://t.co/CElzEp75vZ
#python https://t.co/roJhvlCtrb",False,False,https://twitter.com/python_tip/status/925337967094304768,"[{'url': 'https://t.co/CElzEp75vZ', 'expanded_url': 'https://github.com/ManrajGrover/halo', 'display_url': 'github.com/ManrajGrover/h…'}]","[{'url': 'https://t.co/roJhvlCtrb', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/DNd19MjWAAAzFyW.jpg', 'display_url': 'pic.twitter.com/roJhvlCtrb'}]"
924938430819090432,2017-10-30 09:58:01+00:00,40,12,"Use difflib.SequenceMatcher.find_longest_match() to find longest common substring of two strings.
https://t.co/GDY0TzWZoV
#python https://t.co/LKeV1nJyzK",False,False,https://twitter.com/python_tip/status/924938430819090432,"[{'url': 'https://t.co/GDY0TzWZoV', 'expanded_url': 'https://docs.python.org/3.6/library/difflib.html#difflib.SequenceMatcher.find_longest_match', 'display_url': 'docs.python.org/3.6/library/di…'}]","[{'url': 'https://t.co/LKeV1nJyzK', 'media_url': 'http://pbs.twimg.com/media/DNVhd3cXUAErTpF.jpg', 'display_url': 'pic.twitter.com/LKeV1nJyzK'}]"
923806478422757376,2017-10-27 07:00:02+00:00,33,15,"'is not' is a binary operator, different from using is and not separately:

> 'something' is not None
True
> 'something' is (not None)
False",False,False,https://twitter.com/python_tip/status/923806478422757376,[],[]
923444093010808834,2017-10-26 07:00:03+00:00,18,5,"'where' finds indexes of all Trues in #NumPy array:

> import numpy as np
> a = [1,2,0,0,4,0]
> a != 0
> np.where(a != 0)
> np.nonzero(a)",False,False,https://twitter.com/python_tip/status/923444093010808834,[],[]
923317432587927552,2017-10-25 22:36:44+00:00,21,12,"If anybody wants to practice Web App development, @pybites hosts a simple challenge on our data. #selfpromo https://t.co/xi2eJrqYnX",False,False,https://twitter.com/python_tip/status/923317432587927552,"[{'url': 'https://t.co/xi2eJrqYnX', 'expanded_url': 'https://twitter.com/pybites/status/923087550079815680', 'display_url': 'twitter.com/pybites/status…'}]",[]
923316707199827969,2017-10-25 22:33:52+00:00,0,0,"RT @pybites: PyBites Code Challenge #40:
Daily Python Tip Part 1 - Make a Web App
https://t.co/OMa6BSgSxR
@python_tip 
#django #flask #bott…",False,True,https://twitter.com/python_tip/status/923316707199827969,"[{'url': 'https://t.co/OMa6BSgSxR', 'expanded_url': 'https://pybit.es/codechallenge40.html', 'display_url': 'pybit.es/codechallenge4…'}]",[]
923081705233231872,2017-10-25 07:00:03+00:00,22,5,"Colab, Google's fork of #Jupyter notebook with remote kernels, is now publicly available at

https://t.co/vaeZBJ7var
https://t.co/ewZ8RTeR4K",False,False,https://twitter.com/python_tip/status/923081705233231872,"[{'url': 'https://t.co/vaeZBJ7var', 'expanded_url': 'https://colab.research.google.com', 'display_url': 'colab.research.google.com'}, {'url': 'https://t.co/ewZ8RTeR4K', 'expanded_url': 'https://research.google.com/colaboratory/faq.html', 'display_url': 'research.google.com/colaboratory/f…'}]",[]
922719309301870593,2017-10-24 07:00:01+00:00,15,8,"Get a random number from a range with 'randrange':

>>> import random
>>> random.randrange(0,9,2) + 1

#python",False,False,https://twitter.com/python_tip/status/922719309301870593,[],[]
922552711949799425,2017-10-23 19:58:01+00:00,5,1,"Use Ctrl (or Cmd on Mac) + mouse clicks for multicursors in #jupyter notebooks.
https://t.co/YetSCWX86D",False,False,https://twitter.com/python_tip/status/922552711949799425,"[{'url': 'https://t.co/YetSCWX86D', 'expanded_url': 'http://swanintelligence.com/multi-cursor-in-jupyter.html', 'display_url': 'swanintelligence.com/multi-cursor-i…'}]",[]
921296013092163584,2017-10-20 08:44:21+00:00,23,4,"Memory size of any #numpy array:

>>> import numpy as np
>>> Z = np.zeros((10,10))
>>> print(""%d bytes"" % (Z.size * Z.itemsize))

#python",False,False,https://twitter.com/python_tip/status/921296013092163584,[],[]
920942575858733057,2017-10-19 09:19:55+00:00,20,14,"Try this:
>>> a = 256
>>> b = 256
>>> a is b

>>> a = 257
>>> b = 257
>>> a is b

#python 
https://t.co/GygqCOpDwn
https://t.co/EFM5AdZh7N",False,False,https://twitter.com/python_tip/status/920942575858733057,"[{'url': 'https://t.co/GygqCOpDwn', 'expanded_url': 'https://docs.python.org/3/c-api/long.html', 'display_url': 'docs.python.org/3/c-api/long.h…'}, {'url': 'https://t.co/EFM5AdZh7N', 'expanded_url': 'https://stackoverflow.com/questions/306313/is-operator-behaves-unexpectedly-with-integers', 'display_url': 'stackoverflow.com/questions/3063…'}]",[]
920576687364075520,2017-10-18 09:06:00+00:00,12,7,"Want to stress the variable is throw away? Use _

name, _ = 'https://t.co/wE9MoewaGu'.split('.', 1)

or 

[list([0]*10) for _ in range(10)]",False,False,https://twitter.com/python_tip/status/920576687364075520,"[{'url': 'https://t.co/wE9MoewaGu', 'expanded_url': 'http://bar.bam.foo', 'display_url': 'bar.bam.foo'}]",[]
920210222098067457,2017-10-17 08:49:48+00:00,35,18,"https://t.co/RSQiHuUv2y
Python Graph Gallery: Learn how to visualize data in #python",False,False,https://twitter.com/python_tip/status/920210222098067457,"[{'url': 'https://t.co/RSQiHuUv2y', 'expanded_url': 'https://python-graph-gallery.com/', 'display_url': 'python-graph-gallery.com'}]",[]
919868104615882752,2017-10-16 10:10:21+00:00,15,0,pivottablejs - drag’n’drop pivot tables for your #jupyter notebook. https://t.co/zbRyRdMTLq,False,False,https://twitter.com/python_tip/status/919868104615882752,"[{'url': 'https://t.co/zbRyRdMTLq', 'expanded_url': 'http://nicolas.kruchten.com/content/2015/09/jupyter_pivottablejs/', 'display_url': 'nicolas.kruchten.com/content/2015/0…'}]",[]
919373299380928512,2017-10-15 01:24:10+00:00,0,0,@thekurtprice @Roger120M Cool. Thanks.,True,False,https://twitter.com/python_tip/status/919373299380928512,[],[]
918913245351514113,2017-10-13 18:56:04+00:00,27,7,"Make a slideshow from your #Jupyter Notebook:

https://t.co/j2ragxfoUR
https://t.co/n3j6JgFyWy",False,False,https://twitter.com/python_tip/status/918913245351514113,"[{'url': 'https://t.co/j2ragxfoUR', 'expanded_url': 'https://medium.com/@mjspeck/presenting-code-using-jupyter-notebook-slides-a8a3c3b59d67', 'display_url': 'medium.com/@mjspeck/prese…'}, {'url': 'https://t.co/n3j6JgFyWy', 'expanded_url': 'http://damianavila.github.io/RISE/', 'display_url': 'damianavila.github.io/RISE/'}]",[]
918566750588932096,2017-10-12 19:59:14+00:00,1,0,"@Roger120M In this case it tells how many times is list([0]*10) to be added to the new list.
https://t.co/wvWor1WVAu https://t.co/4YZn3EQ823",True,False,https://twitter.com/python_tip/status/918566750588932096,"[{'url': 'https://t.co/wvWor1WVAu', 'expanded_url': 'http://www.secnetix.de/olli/Python/list_comprehensions.hawk', 'display_url': 'secnetix.de/olli/Python/li…'}]","[{'url': 'https://t.co/4YZn3EQ823', 'media_url': 'http://pbs.twimg.com/media/DL9nlebXUAAh2Du.jpg', 'display_url': 'pic.twitter.com/4YZn3EQ823'}]"
918503425360379904,2017-10-12 15:47:36+00:00,1,0,"@Roger120M Good question. What about...

>>> [list([0]*10) for i in range(10)]",True,False,https://twitter.com/python_tip/status/918503425360379904,[],[]
918503319210885120,2017-10-12 15:47:10+00:00,0,0,RT @Roger120M: @python_tip Is there a good way without numpy?,False,True,https://twitter.com/python_tip/status/918503319210885120,[],[]
918370653530554368,2017-10-12 07:00:00+00:00,21,8,"Why NOT to create a 10x10 matrix of zeroes like this?

> row = [0] * 10
> matrix = [row] * 10

Hint:Try
> matrix[3][3] = 1
> matrix

#python",False,False,https://twitter.com/python_tip/status/918370653530554368,[],[]
918008268043124736,2017-10-11 07:00:01+00:00,28,10,"JSAnimation is now included in Matplotlib 2.1.0

https://t.co/iLw5Zzp8YQ

What else is new?

https://t.co/Z86YAdLZTn

#python",False,False,https://twitter.com/python_tip/status/918008268043124736,"[{'url': 'https://t.co/iLw5Zzp8YQ', 'expanded_url': 'http://nbviewer.jupyter.org/gist/ocefpaf/9730c697819e91b99f1d694983e39a8f', 'display_url': 'nbviewer.jupyter.org/gist/ocefpaf/9…'}, {'url': 'https://t.co/Z86YAdLZTn', 'expanded_url': 'https://matplotlib.org/users/whats_new.html#new-in-matplotlib-2-1', 'display_url': 'matplotlib.org/users/whats_ne…'}]",[]
917645883075911681,2017-10-10 07:00:02+00:00,8,1,"tempC = (tempF-32)*(9/5)

Why is this (Fahrenheit -> Celsius) wrong in Python 2 and what to do about it

https://t.co/MeQDIcbwlP",False,False,https://twitter.com/python_tip/status/917645883075911681,"[{'url': 'https://t.co/MeQDIcbwlP', 'expanded_url': 'http://www.informit.com/articles/article.aspx?p=1439189', 'display_url': 'informit.com/articles/artic…'}]",[]
917283490755997696,2017-10-09 07:00:01+00:00,13,2,Face detection with #Python using #dplib and opencv: https://t.co/XBslIIlvey,False,False,https://twitter.com/python_tip/status/917283490755997696,"[{'url': 'https://t.co/XBslIIlvey', 'expanded_url': 'https://twitter.com/shravankumar147/status/916675998313275392', 'display_url': 'twitter.com/shravankumar14…'}]",[]
916224763021885440,2017-10-06 08:53:00+00:00,35,14,"Number of times substring occurs in a string:
>>> s = 'pythonpythonpython #python'
>>> print(s.count('python'))
4
https://t.co/I0v7mA2I0r",False,False,https://twitter.com/python_tip/status/916224763021885440,"[{'url': 'https://t.co/I0v7mA2I0r', 'expanded_url': 'https://docs.python.org/3/library/stdtypes.html#str.count', 'display_url': 'docs.python.org/3/library/stdt…'}]",[]
915852812310814722,2017-10-05 08:15:00+00:00,23,9,"#pandas: beware of changing elements referring to a non-existing index:
https://t.co/ARCmrgp4ht
#python https://t.co/9GpNcFRrPv",False,False,https://twitter.com/python_tip/status/915852812310814722,"[{'url': 'https://t.co/ARCmrgp4ht', 'expanded_url': 'https://www.balabit.com/blog/magic-trick-with-pandas/', 'display_url': 'balabit.com/blog/magic-tri…'}]","[{'url': 'https://t.co/9GpNcFRrPv', 'media_url': 'http://pbs.twimg.com/media/DLS53P9WAAAaYvX.jpg', 'display_url': 'pic.twitter.com/9GpNcFRrPv'}]"
915497274352046080,2017-10-04 08:42:13+00:00,12,6,"Play music with #Python

https://t.co/ZKNcW1OIsi",False,False,https://twitter.com/python_tip/status/915497274352046080,"[{'url': 'https://t.co/ZKNcW1OIsi', 'expanded_url': 'https://twitter.com/shravankumar147/status/913261999378898944', 'display_url': 'twitter.com/shravankumar14…'}]",[]
915135495843336192,2017-10-03 08:44:39+00:00,10,6,"Convert an image into #LaTeX expression:

https://t.co/Vsf4lXWHJr

#python",False,False,https://twitter.com/python_tip/status/915135495843336192,"[{'url': 'https://t.co/Vsf4lXWHJr', 'expanded_url': 'https://docs.mathpix.com/?python#processing-a-single-image', 'display_url': 'docs.mathpix.com/?python#proces…'}]",[]
914800298488713216,2017-10-02 10:32:41+00:00,14,1,"Change the look of your plots with only 1 line of code with #matplotlib style sheets https://t.co/d8exkjHDzR https://t.co/gbKABdDTON
#python",False,False,https://twitter.com/python_tip/status/914800298488713216,"[{'url': 'https://t.co/d8exkjHDzR', 'expanded_url': 'https://matplotlib.org/users/style_sheets.html', 'display_url': 'matplotlib.org/users/style_sh…'}, {'url': 'https://t.co/gbKABdDTON', 'expanded_url': 'https://tonysyu.github.io/raw_content/matplotlib-style-gallery/gallery.html', 'display_url': 'tonysyu.github.io/raw_content/ma…'}]",[]
913659611001090049,2017-09-29 07:00:00+00:00,29,8,"Context Manager Using @contextmanager & yield and other ""Advanced Python Features"" at tech.io playground

https://t.co/cIL3g7txoL",False,False,https://twitter.com/python_tip/status/913659611001090049,"[{'url': 'https://t.co/cIL3g7txoL', 'expanded_url': 'https://tech.io/playgrounds/500/advanced-python-features', 'display_url': 'tech.io/playgrounds/50…'}]",[]
913298174483120129,2017-09-28 07:03:47+00:00,21,2,Use PIL to convert multiple images into one PDF file: (by @shravankumar147) https://t.co/t6jXlCS9UB,False,False,https://twitter.com/python_tip/status/913298174483120129,"[{'url': 'https://t.co/t6jXlCS9UB', 'expanded_url': 'https://twitter.com/shravankumar147/status/909294255205765120', 'display_url': 'twitter.com/shravankumar14…'}]",[]
912940118230683648,2017-09-27 07:21:00+00:00,29,10,"You can fork your process with os.fork:

import os
res = os.fork()

if res==0:
    print(""I'm child"")
else:
    print(""I'm parent"")

#python",False,False,https://twitter.com/python_tip/status/912940118230683648,[],[]
912577229036638208,2017-09-26 07:19:00+00:00,20,7,"Guess, then try:

>>> True + True - False

In #python, boolean values are integers.

>>> isinstance(False,int)
True

(insp. by @PythonInsta)",False,False,https://twitter.com/python_tip/status/912577229036638208,[],[]
912207345312194566,2017-09-25 06:49:13+00:00,71,23,"Make your numbers, dates, etc. human readable:

>>> humanize.intword(123455913)
'123.5 million'

https://t.co/KsDi4zn50I

#python #i18n",False,False,https://twitter.com/python_tip/status/912207345312194566,"[{'url': 'https://t.co/KsDi4zn50I', 'expanded_url': 'https://pypi.python.org/pypi/humanize', 'display_url': 'pypi.python.org/pypi/humanize'}]",[]
911162912219078658,2017-09-22 09:39:01+00:00,7,0,"Find duplicated entries in #pandas dataframe with the duplicated() method.
https://t.co/JQuu0Uhx0J
#python",False,False,https://twitter.com/python_tip/status/911162912219078658,"[{'url': 'https://t.co/JQuu0Uhx0J', 'expanded_url': 'https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.duplicated.html', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}]",[]
910865358973784064,2017-09-21 13:56:39+00:00,18,10,"%store magic allows you to pass data between #Jupyter notebooks.
https://t.co/VDWinlyKuh
https://t.co/mNmvKudEFq",False,False,https://twitter.com/python_tip/status/910865358973784064,"[{'url': 'https://t.co/VDWinlyKuh', 'expanded_url': 'http://arogozhnikov.github.io/2016/09/10/jupyter-features.html#%store:-lazy-passing-data-between-notebooks', 'display_url': 'arogozhnikov.github.io/2016/09/10/jup…'}, {'url': 'https://t.co/mNmvKudEFq', 'expanded_url': 'http://ipython.readthedocs.io/en/stable/config/extensions/storemagic.html', 'display_url': 'ipython.readthedocs.io/en/stable/conf…'}]",[]
910367367955386374,2017-09-20 04:57:48+00:00,28,10,"Find unique items in a #numpy array and count their frequency:
unique, counts = np.unique(a, return_counts=True)
https://t.co/AEOJTRtFls",False,False,https://twitter.com/python_tip/status/910367367955386374,"[{'url': 'https://t.co/AEOJTRtFls', 'expanded_url': 'https://www.w3resource.com/python-exercises/numpy/python-numpy-exercise-94.php', 'display_url': 'w3resource.com/python-exercis…'}]",[]
910056617986727936,2017-09-19 08:23:00+00:00,16,4,"Speed up your functions with numba.jit decorator.
https://t.co/Vt7MO5FNXW
#python #numba",False,False,https://twitter.com/python_tip/status/910056617986727936,"[{'url': 'https://t.co/Vt7MO5FNXW', 'expanded_url': 'http://numba.pydata.org', 'display_url': 'numba.pydata.org'}]",[]
909698512962461696,2017-09-18 08:40:01+00:00,24,7,"Manage your google spreadsheets with the gspread library
https://t.co/QGcEtF2Z1U
#python",False,False,https://twitter.com/python_tip/status/909698512962461696,"[{'url': 'https://t.co/QGcEtF2Z1U', 'expanded_url': 'https://github.com/burnash/gspread', 'display_url': 'github.com/burnash/gspread'}]",[]
909099472486932481,2017-09-16 16:59:39+00:00,7,3,"If you or your friend prefer Facebook to Twitter, you can now find all our tips on this FB page:
  
https://t.co/sCu8dvzVkd",False,False,https://twitter.com/python_tip/status/909099472486932481,"[{'url': 'https://t.co/sCu8dvzVkd', 'expanded_url': 'https://www.facebook.com/python.tip', 'display_url': 'facebook.com/python.tip'}]",[]
909098365941514240,2017-09-16 16:55:15+00:00,0,0,RT @inkatze: Extended explanation https://t.co/MuzCcaZkya https://t.co/HaCy9Bn41Y,False,True,https://twitter.com/python_tip/status/909098365941514240,"[{'url': 'https://t.co/MuzCcaZkya', 'expanded_url': 'https://twitter.com/python_tip/status/908356538435125248', 'display_url': 'twitter.com/python_tip/sta…'}]","[{'url': 'https://t.co/HaCy9Bn41Y', 'media_url': 'http://pbs.twimg.com/media/DJx6JO4XUAAxBuI.jpg', 'display_url': 'pic.twitter.com/HaCy9Bn41Y'}]"
908719766969344000,2017-09-15 15:50:50+00:00,0,0,"RT @TonyFlury: @Sydonahi @python_tip Confirm identity by 
>>> id(a) == id(b) # Equivalent to a is b
2/4",False,True,https://twitter.com/python_tip/status/908719766969344000,[],[]
908716438222815233,2017-09-15 15:37:36+00:00,14,5,"Because it is Friday...

>>> import antigravity

https://t.co/4O10yEHXgW

#python #fun #xkcd",False,False,https://twitter.com/python_tip/status/908716438222815233,"[{'url': 'https://t.co/4O10yEHXgW', 'expanded_url': 'https://xkcd.com/353/', 'display_url': 'xkcd.com/353/'}]",[]
908356538435125248,2017-09-14 15:47:29+00:00,43,28,"Equality vs Identity:

>>> a = [""x"", ""y""]
>>> b = a
>>> c = [""x"", ""y""]

>>> a == b == c
True
>>> a is b
True
>>> a is c
False

#python",False,False,https://twitter.com/python_tip/status/908356538435125248,[],[]
908057688311033857,2017-09-13 19:59:58+00:00,21,8,"Use parse_dates=True option in https://t.co/9kF9eFMeYn_csv to automatically recognize dates.
https://t.co/AJNMYae1aH
#python #pandas",False,False,https://twitter.com/python_tip/status/908057688311033857,"[{'url': 'https://t.co/9kF9eFMeYn', 'expanded_url': 'http://pandas.read', 'display_url': 'pandas.read'}, {'url': 'https://t.co/AJNMYae1aH', 'expanded_url': 'https://stackoverflow.com/questions/17465045/can-pandas-automatically-recognize-dates', 'display_url': 'stackoverflow.com/questions/1746…'}]",[]
907540520154537984,2017-09-12 09:44:55+00:00,20,5,"Need a set of sets? Use frozenset:

set([set(['a']), set(['b'])])
#Error

set([frozenset(['a']), frozenset(['b'])])

https://t.co/Ba0PalbxnT",False,False,https://twitter.com/python_tip/status/907540520154537984,"[{'url': 'https://t.co/Ba0PalbxnT', 'expanded_url': 'https://stackoverflow.com/questions/5931291/how-can-i-create-a-set-of-sets-in-python', 'display_url': 'stackoverflow.com/questions/5931…'}]",[]
907132954140274688,2017-09-11 06:45:24+00:00,1,0,"@henricus_heh Good point, None is default. I was just surprised to see it in somebody's code. More about None for slicing here

https://t.co/andrBsPa5d",True,False,https://twitter.com/python_tip/status/907132954140274688,"[{'url': 'https://t.co/andrBsPa5d', 'expanded_url': 'https://stackoverflow.com/a/30622989', 'display_url': 'stackoverflow.com/a/30622989'}]",[]
907129498495197184,2017-09-11 06:31:40+00:00,55,17,"List Slicing with None as argument:

>>> a = [0, 1, 2, 3, 4, 5]
>>> LASTTHREE = slice(-3, None)
>>> a[LASTTHREE]
[3, 4, 5]

#python",False,False,https://twitter.com/python_tip/status/907129498495197184,[],[]
906053736157638657,2017-09-08 07:16:59+00:00,22,3,"#python #fun
from itertools import *
pi = next(islice(accumulate(map(operator.truediv, cycle([4,-4]), count(1,2))),10000000, None))",False,False,https://twitter.com/python_tip/status/906053736157638657,[],[]
905742157033689088,2017-09-07 10:38:52+00:00,54,23,"You can use a comma for extracting a value from a list of length one: ""x, = s"". It's even faster than ""x = s[0]"". #python https://t.co/QG3nLuOMFc",False,False,https://twitter.com/python_tip/status/905742157033689088,[],"[{'url': 'https://t.co/QG3nLuOMFc', 'media_url': 'http://pbs.twimg.com/media/DJHXrzxXYAMPGWY.jpg', 'display_url': 'pic.twitter.com/QG3nLuOMFc'}]"
905383919071236097,2017-09-06 10:55:22+00:00,25,11,"The -a option to %%cython magic command shows how much of code has not been converted to C 
#ipython #cython #python https://t.co/eKQ7qdkgGy",False,False,https://twitter.com/python_tip/status/905383919071236097,[],"[{'url': 'https://t.co/eKQ7qdkgGy', 'media_url': 'http://pbs.twimg.com/media/DJCR1SBW0AAIvkt.jpg', 'display_url': 'pic.twitter.com/eKQ7qdkgGy'}]"
905009955098566656,2017-09-05 10:09:22+00:00,26,10,sys.getsizeof() shows the memory consumption directly attributed to an object. Be sure to add in the sizes for referred-to objects. #python,False,False,https://twitter.com/python_tip/status/905009955098566656,[],[]
904625971013222400,2017-09-04 08:43:33+00:00,29,11,"Pandas_profiling generates profile reports from #pandas dataframe objects.
https://t.co/fquXHLyiLD
#python https://t.co/E076G91OCn",False,False,https://twitter.com/python_tip/status/904625971013222400,"[{'url': 'https://t.co/fquXHLyiLD', 'expanded_url': 'https://github.com/JosPolfliet/pandas-profiling', 'display_url': 'github.com/JosPolfliet/pa…'}]","[{'url': 'https://t.co/E076G91OCn', 'media_url': 'http://pbs.twimg.com/media/DI3gaZEXoAET1QG.jpg', 'display_url': 'pic.twitter.com/E076G91OCn'}]"
903548376775569408,2017-09-01 09:21:34+00:00,47,15,"You can put a breakpoint into your #python program that drops to interactive terminal:

import pdb
pdb.set_trace()

https://t.co/oomAGtAh8k",False,False,https://twitter.com/python_tip/status/903548376775569408,"[{'url': 'https://t.co/oomAGtAh8k', 'expanded_url': 'http://docs.python.org/library/pdb.html', 'display_url': 'docs.python.org/library/pdb.ht…'}]",[]
903255680467030016,2017-08-31 13:58:30+00:00,23,11,Need to write  #python 2/3 compatible code? Check out this cheat sheet: https://t.co/bEa4LoKa8M,False,False,https://twitter.com/python_tip/status/903255680467030016,"[{'url': 'https://t.co/bEa4LoKa8M', 'expanded_url': 'http://python-future.org/compatible_idioms.html', 'display_url': 'python-future.org/compatible_idi…'}]",[]
902825127846477825,2017-08-30 09:27:38+00:00,30,6,"Use textwrap and don't worry about where to line break 

(just used it to wrap text in a Pillow image: https://t.co/c08IAHH6uY - line 83) https://t.co/FVxEqvKVxW",False,False,https://twitter.com/python_tip/status/902825127846477825,"[{'url': 'https://t.co/c08IAHH6uY', 'expanded_url': 'https://github.com/pybites/pillow-flask/blob/master/banner/banner.py', 'display_url': 'github.com/pybites/pillow…'}]","[{'url': 'https://t.co/FVxEqvKVxW', 'media_url': 'http://pbs.twimg.com/media/DId6qNNUQAA1Lv4.jpg', 'display_url': 'pic.twitter.com/FVxEqvKVxW'}]"
902444261572005888,2017-08-29 08:14:13+00:00,17,7,Need a syntax and style checker for #vim? Install flake8 (pip install flake8) and syntastic https://t.co/nNtyFGL4Y2,False,False,https://twitter.com/python_tip/status/902444261572005888,"[{'url': 'https://t.co/nNtyFGL4Y2', 'expanded_url': 'https://github.com/vim-syntastic/syntastic', 'display_url': 'github.com/vim-syntastic/…'}]",[]
902057777589350400,2017-08-28 06:38:28+00:00,31,15,#Pandas Shift a column by 1 row with .shift command. See how to use it to calculate time duration and other tricks:  https://t.co/AquZAk2xdr,False,False,https://twitter.com/python_tip/status/902057777589350400,"[{'url': 'https://t.co/AquZAk2xdr', 'expanded_url': 'https://medium.com/towards-data-science/pandas-tips-and-tricks-33bcc8a40bb9', 'display_url': 'medium.com/towards-data-s…'}]",[]
900993650347302913,2017-08-25 08:10:00+00:00,18,7,"Create a download link in your #Jupyter notebook:

from IPython.display import FileLink
FileLink('data/input.csv')

https://t.co/WAuX2rQ6bL",False,False,https://twitter.com/python_tip/status/900993650347302913,"[{'url': 'https://t.co/WAuX2rQ6bL', 'expanded_url': 'https://stackoverflow.com/questions/24437661/retrieving-files-from-remote-ipython-notebook-server', 'display_url': 'stackoverflow.com/questions/2443…'}]",[]
900760061240373251,2017-08-24 16:41:48+00:00,0,0,"RT @KPilnacek: @python_tip Nice tip 🙂. How about:
print('{name} is {age} years old'.format(**d))",False,True,https://twitter.com/python_tip/status/900760061240373251,[],[]
900631011268153344,2017-08-24 08:09:00+00:00,51,25,"#python formatting tip:
d = dict(name = 'Joe', age = 30)
print('{name} is {age} years old'.format_map(d))

Joe is 30 years old",False,False,https://twitter.com/python_tip/status/900631011268153344,[],[]
900308908945944576,2017-08-23 10:49:05+00:00,23,5,"Recall inputs and outputs of previous cells in #Jupyter notebook with In[6], Out[2], _2 https://t.co/OkXgGE9GEN",False,False,https://twitter.com/python_tip/status/900308908945944576,[],"[{'url': 'https://t.co/OkXgGE9GEN', 'media_url': 'http://pbs.twimg.com/media/DH6KJewW0AAdJp0.jpg', 'display_url': 'pic.twitter.com/OkXgGE9GEN'}]"
899919008119566336,2017-08-22 08:59:45+00:00,18,11,"Profile #python code in #Jupyter notebooks with line_profiler:
%lprun -f myfunc myfunc()
https://t.co/U3iBevj6Bw",False,False,https://twitter.com/python_tip/status/899919008119566336,"[{'url': 'https://t.co/U3iBevj6Bw', 'expanded_url': 'http://mortada.net/easily-profile-python-code-in-jupyter.html', 'display_url': 'mortada.net/easily-profile…'}]",[]
899613754165518336,2017-08-21 12:46:47+00:00,0,0,RT @pybites: @python_tip Cool. See also https://t.co/3Ei8SqPo1S for comparison using sorted,False,True,https://twitter.com/python_tip/status/899613754165518336,"[{'url': 'https://t.co/3Ei8SqPo1S', 'expanded_url': 'https://stackoverflow.com/a/26836526', 'display_url': 'stackoverflow.com/a/26836526'}]",[]
899552663439802368,2017-08-21 08:44:02+00:00,38,17,"Check if two words are anagrams:

from collections import Counter
def is_anagram(s1, s2):
     return Counter(s1) == Counter(s2)

#python",False,False,https://twitter.com/python_tip/status/899552663439802368,[],[]
898545993351909376,2017-08-18 14:03:53+00:00,21,4,"Last week we reached 1000 follower count. Thank you all! This is a wordcloud of our followers' profile texts.

https://t.co/5DjBavZTGK https://t.co/WD0jFl1NdC",False,False,https://twitter.com/python_tip/status/898545993351909376,"[{'url': 'https://t.co/5DjBavZTGK', 'expanded_url': 'https://gist.github.com/simecek/ac263a371830cafe309d88a5d099b887', 'display_url': 'gist.github.com/simecek/ac263a…'}]","[{'url': 'https://t.co/WD0jFl1NdC', 'media_url': 'http://pbs.twimg.com/media/DHhGoKpXYAETnpQ.png', 'display_url': 'pic.twitter.com/WD0jFl1NdC'}]"
898099306820972544,2017-08-17 08:28:55+00:00,50,20,"Ever miscounted the number of 0? Underscores in #python3.6 can help you.
>>> m = 1_000_000_000
>>> m
1000000000
https://t.co/2z5HRtMtXx",False,False,https://twitter.com/python_tip/status/898099306820972544,"[{'url': 'https://t.co/2z5HRtMtXx', 'expanded_url': 'https://docs.python.org/3/whatsnew/3.6.html#pep-515-underscores-in-numeric-literals', 'display_url': 'docs.python.org/3/whatsnew/3.6…'}]",[]
897728384976928768,2017-08-16 07:55:00+00:00,47,17,"In Jupyter Notebook, use Shift+Tab to show a tooltip with arguments of function/class and docstring. https://t.co/taZQXHWOxE",False,False,https://twitter.com/python_tip/status/897728384976928768,[],"[{'url': 'https://t.co/taZQXHWOxE', 'media_url': 'http://pbs.twimg.com/media/DHTScurXoAAUfBZ.jpg', 'display_url': 'pic.twitter.com/taZQXHWOxE'}]"
897367263900299264,2017-08-15 08:00:02+00:00,15,4,"Fast save/load for numpy arrays = flush/open in bcolz module

(taken from #fastai DL course https://t.co/WNxudbZbcd)
 
#needforspeed #python https://t.co/127S66wYtn",False,False,https://twitter.com/python_tip/status/897367263900299264,"[{'url': 'https://t.co/WNxudbZbcd', 'expanded_url': 'https://github.com/fastai/courses/blob/master/deeplearning1/nbs/lesson2.ipynb', 'display_url': 'github.com/fastai/courses…'}]","[{'url': 'https://t.co/127S66wYtn', 'media_url': 'http://pbs.twimg.com/media/DHNzqUTWAAIm6if.jpg', 'display_url': 'pic.twitter.com/127S66wYtn'}]"
897022078129496064,2017-08-14 09:08:23+00:00,7,1,"#Matplotlib supports animations.
https://t.co/qCBR5sPT9j https://t.co/V9UBhGirIu https://t.co/2anOLvOrPq 
#python https://t.co/xMUiY4k4oj",False,False,https://twitter.com/python_tip/status/897022078129496064,"[{'url': 'https://t.co/qCBR5sPT9j', 'expanded_url': 'https://jakevdp.github.io/blog/2012/08/18/matplotlib-animation-tutorial/', 'display_url': 'jakevdp.github.io/blog/2012/08/1…'}, {'url': 'https://t.co/V9UBhGirIu', 'expanded_url': 'http://matplotlib.org/examples/animation/index.html', 'display_url': 'matplotlib.org/examples/anima…'}, {'url': 'https://t.co/2anOLvOrPq', 'expanded_url': 'https://gist.github.com/karlafej/9b4da3348d88060776d0682fddb1dbf1', 'display_url': 'gist.github.com/karlafej/9b4da…'}]","[{'url': 'https://t.co/xMUiY4k4oj', 'media_url': 'http://pbs.twimg.com/tweet_video_thumb/DHLczp6WAAAiydD.jpg', 'display_url': 'pic.twitter.com/xMUiY4k4oj'}]"
895915187626233856,2017-08-11 07:50:00+00:00,17,7,"Visualize “missingness” of data in your #pandas dataframes with missingno.
https://t.co/P8Oxzl82vP https://t.co/yWBUFG8ikT",False,False,https://twitter.com/python_tip/status/895915187626233856,"[{'url': 'https://t.co/P8Oxzl82vP', 'expanded_url': 'https://github.com/ResidentMario/missingno', 'display_url': 'github.com/ResidentMario/…'}]","[{'url': 'https://t.co/yWBUFG8ikT', 'media_url': 'http://pbs.twimg.com/media/DG43ClzXgAEklX0.jpg', 'display_url': 'pic.twitter.com/yWBUFG8ikT'}]"
895554058207076352,2017-08-10 07:55:00+00:00,15,1,"#pandas: print summary statistics for a column with df[‘col_name’].describe()
#python https://t.co/iNDzAnnSYf",False,False,https://twitter.com/python_tip/status/895554058207076352,[],"[{'url': 'https://t.co/iNDzAnnSYf', 'media_url': 'http://pbs.twimg.com/media/DGt78mNW0AEERe2.jpg', 'display_url': 'pic.twitter.com/iNDzAnnSYf'}]"
895192934647087104,2017-08-09 08:00:02+00:00,4,2,"%watermark #IPython magic extension outputs version information to make notebooks reproducible
https://t.co/r3CZhJPEGj",False,False,https://twitter.com/python_tip/status/895192934647087104,"[{'url': 'https://t.co/r3CZhJPEGj', 'expanded_url': 'https://github.com/rasbt/watermark', 'display_url': 'github.com/rasbt/watermark'}]",[]
894841524512600064,2017-08-08 08:43:39+00:00,31,13,"re-arrange tuples by indices
>>> map(operator.itemgetter(2,1,0),[(1,'x','cat'),(2, 'y', 'dog')])

[('cat', 'x', 1), ('dog', 'y', 2)]
#python",False,False,https://twitter.com/python_tip/status/894841524512600064,[],[]
894480969092255744,2017-08-07 08:50:56+00:00,10,0,"Use str.casefold() for case-insensitive string comparisons.

https://t.co/R1DVCym39E

#python",False,False,https://twitter.com/python_tip/status/894480969092255744,"[{'url': 'https://t.co/R1DVCym39E', 'expanded_url': 'https://docs.python.org/3/library/stdtypes.html#str.casefold', 'display_url': 'docs.python.org/3/library/stdt…'}]",[]
893448228376641536,2017-08-04 12:27:11+00:00,19,4,"Fetch zipped file without temporary extracting it to disk:

https://t.co/MaVEA6PA1t

#python https://t.co/lkeOiumSLh",False,False,https://twitter.com/python_tip/status/893448228376641536,"[{'url': 'https://t.co/MaVEA6PA1t', 'expanded_url': 'https://gist.github.com/simecek/2641371153eff2a2a87859977a07b240', 'display_url': 'gist.github.com/simecek/264137…'}]","[{'url': 'https://t.co/lkeOiumSLh', 'media_url': 'http://pbs.twimg.com/media/DGYqaeOXcAMTBOP.jpg', 'display_url': 'pic.twitter.com/lkeOiumSLh'}]"
893397611947982848,2017-08-04 09:06:03+00:00,0,0,"RT @wbolster: @python_tip for strings, the idiomatic pattern is:

s = ""a b c""
ab, _, c = s.rpartition("" "")",False,True,https://twitter.com/python_tip/status/893397611947982848,[],[]
893018874437873664,2017-08-03 08:01:05+00:00,13,3,"Split from right:
>>> s = ‘1st M Last'
>>> first, last = s.rsplit(None,1)
>>> first
‘1st M'
>>> last
'Last'
#python 
https://t.co/m8S6njFLpt",False,False,https://twitter.com/python_tip/status/893018874437873664,"[{'url': 'https://t.co/m8S6njFLpt', 'expanded_url': 'https://blog.lerner.co.il/five-python-function-parameters-know-use/', 'display_url': 'blog.lerner.co.il/five-python-fu…'}]",[]
892671812160684032,2017-08-02 09:01:59+00:00,42,23,"%%HTML magic renders #jupyter notebook cell as HTML, so you can embed an image or other media:

https://t.co/KfmfPz27j5 https://t.co/RiToK88XJ1",False,False,https://twitter.com/python_tip/status/892671812160684032,"[{'url': 'https://t.co/KfmfPz27j5', 'expanded_url': 'https://blog.dominodatalab.com/lesser-known-ways-of-using-notebooks/', 'display_url': 'blog.dominodatalab.com/lesser-known-w…'}]","[{'url': 'https://t.co/RiToK88XJ1', 'media_url': 'http://pbs.twimg.com/media/DGNoBBsXgAEH3uK.jpg', 'display_url': 'pic.twitter.com/RiToK88XJ1'}]"
892321459196108800,2017-08-01 09:49:49+00:00,41,14,"Working with NumPy arrays instead of Python lists gives you a significant speedup

https://t.co/X7jtdH4mHX

#numpy #python #needforspeed https://t.co/DacXBclXS2",False,False,https://twitter.com/python_tip/status/892321459196108800,"[{'url': 'https://t.co/X7jtdH4mHX', 'expanded_url': 'https://stackoverflow.com/a/994545', 'display_url': 'stackoverflow.com/a/994545'}]","[{'url': 'https://t.co/DacXBclXS2', 'media_url': 'http://pbs.twimg.com/media/DGIpVMiXgAArMxU.jpg', 'display_url': 'pic.twitter.com/DacXBclXS2'}]"
892031847928082432,2017-07-31 14:39:00+00:00,1,0,"@thepythonguy1 New style formatting allows objects to control their own rendering -  in datetime format, %A means weekday as locale’s full name.",True,False,https://twitter.com/python_tip/status/892031847928082432,[],[]
891910802160144384,2017-07-31 06:38:00+00:00,8,3,"Use @functools.lru_cache decorator to memoize/cache function calls:

https://t.co/P9jx4MdzpD
https://t.co/zDNqXHlRo2

#python3",False,False,https://twitter.com/python_tip/status/891910802160144384,"[{'url': 'https://t.co/P9jx4MdzpD', 'expanded_url': 'https://stackoverflow.com/questions/1988804/what-is-memoization-and-how-can-i-use-it-in-python', 'display_url': 'stackoverflow.com/questions/1988…'}, {'url': 'https://t.co/zDNqXHlRo2', 'expanded_url': 'http://book.pythontips.com/en/latest/function_caching.html', 'display_url': 'book.pythontips.com/en/latest/func…'}]",[]
890844283514867712,2017-07-28 08:00:02+00:00,19,3,"Try this:
>>> from datetime import date
>>> 'Today is {0:%A}'.format(https://t.co/DAMy3gbWaN())
#python",False,False,https://twitter.com/python_tip/status/890844283514867712,"[{'url': 'https://t.co/DAMy3gbWaN', 'expanded_url': 'http://date.today', 'display_url': 'date.today'}]",[]
890588109062254592,2017-07-27 15:02:06+00:00,0,0,"RT @kicksopenminds: @python_tip # writerows is nice too
import csv
rows = [('a', 'b', 'c'), (1, 2, 3), (4, 5, 6)]
csv.writer(open('foo.csv'…",False,True,https://twitter.com/python_tip/status/890588109062254592,[],[]
890481887663210496,2017-07-27 08:00:01+00:00,19,5,"Write data into csv file:
import csv
with open(""test.csv"", ""w"") as f:
    wr = csv.writer(f)
    for line in data:
        wr.writerow(line)",False,False,https://twitter.com/python_tip/status/890481887663210496,[],[]
890119498380058625,2017-07-26 08:00:00+00:00,18,11,"You can use atexit.register as a decorator:
@atexit.register
def goodbye():
    print("" #python is closing down"")

https://t.co/BHm69FeRem",False,False,https://twitter.com/python_tip/status/890119498380058625,"[{'url': 'https://t.co/BHm69FeRem', 'expanded_url': 'https://docs.python.org/3/library/atexit.html', 'display_url': 'docs.python.org/3/library/atex…'}]",[]
889757112884187136,2017-07-25 08:00:01+00:00,21,11,"List all packages (&version info):

pip freeze > requirements.txt

Install all packages in requirements.txt

pip install -r requirements.txt",False,False,https://twitter.com/python_tip/status/889757112884187136,[],[]
889406333769986050,2017-07-24 08:46:08+00:00,10,5,"Use Categoricals for categorical data in #Pandas to improve performance
df['color'] = df['color'].astype('category')
https://t.co/yLNh8XZJUO",False,False,https://twitter.com/python_tip/status/889406333769986050,"[{'url': 'https://t.co/yLNh8XZJUO', 'expanded_url': 'http://matthewrocklin.com/blog/work/2015/06/18/Categoricals', 'display_url': 'matthewrocklin.com/blog/work/2015…'}]",[]
888309068393312257,2017-07-21 08:06:00+00:00,8,2,"Need to plot millions of points in #Matplotlib? mpl-scatter-density do precisely this!

https://t.co/Oj0dbSlmSs

by @astrofrog",False,False,https://twitter.com/python_tip/status/888309068393312257,"[{'url': 'https://t.co/Oj0dbSlmSs', 'expanded_url': 'https://github.com/astrofrog/mpl-scatter-density', 'display_url': 'github.com/astrofrog/mpl-…'}]",[]
887911699482898433,2017-07-20 05:47:00+00:00,2,1,"Use smartcd to activate virtual environment when you cd into folder:

https://t.co/JEYcaIddA2
https://t.co/Be8szPUTi9

#python #virtualenv",False,False,https://twitter.com/python_tip/status/887911699482898433,"[{'url': 'https://t.co/JEYcaIddA2', 'expanded_url': 'https://github.com/cxreg/smartcd', 'display_url': 'github.com/cxreg/smartcd'}, {'url': 'https://t.co/Be8szPUTi9', 'expanded_url': 'http://book.pythontips.com/en/latest/virtual_environment.html', 'display_url': 'book.pythontips.com/en/latest/virt…'}]",[]
887625256453722114,2017-07-19 10:48:47+00:00,21,13,"How to introspect an object in #python:

l = [1, 2, 3]
dir(l)
type(l)
id(l)

# see also inspect module
import inspect
inspect.getmembers(l)",False,False,https://twitter.com/python_tip/status/887625256453722114,[],[]
887242145261899777,2017-07-18 09:26:26+00:00,36,13,"a = ""roses""
b = ""red""
'{a} are {b}'.format(%%locals())

#python3.6
f'{a} are {b}'
'roses are red'

For more, see https://t.co/sLvaHdXTQL",False,False,https://twitter.com/python_tip/status/887242145261899777,"[{'url': 'https://t.co/sLvaHdXTQL', 'expanded_url': 'https://pyformat.info/', 'display_url': 'pyformat.info'}]",[]
886854735260602368,2017-07-17 07:47:00+00:00,30,12,"The symmetric_difference method finds elements that are in exactly one of the two sets:
>>> {2,4,6} ^ {1,2,3,4}
{1, 3, 6}
#python",False,False,https://twitter.com/python_tip/status/886854735260602368,[],[]
885770846421360640,2017-07-14 08:00:01+00:00,21,9,"Find k closest numbers to a central value:
k = 4
cnt = 11
heapq.nsmallest(k, range(50), key = lambda x: abs(x-cnt))
[11, 10, 12, 9]
#python",False,False,https://twitter.com/python_tip/status/885770846421360640,[],[]
885408465291792384,2017-07-13 08:00:02+00:00,6,3,"Guess the MIME type from the file extension:
>>> mimetypes.guess_type('test.pyc')
('application/x-python-code', None)
#python",False,False,https://twitter.com/python_tip/status/885408465291792384,[],[]
885046077782581248,2017-07-12 08:00:02+00:00,27,8,"Use functools.partial to prefill arguments:

> def foo(a,b):
    return a+b
> bar = partial(foo, a=1)
> bar(3)
4

https://t.co/VWb1OKSN8l",False,False,https://twitter.com/python_tip/status/885046077782581248,"[{'url': 'https://t.co/VWb1OKSN8l', 'expanded_url': 'https://stackoverflow.com/a/15331967', 'display_url': 'stackoverflow.com/a/15331967'}]",[]
884683682870693888,2017-07-11 08:00:01+00:00,4,1,"#pandas: include functions in chains with pipe
https://t.co/RnpkOILseR
https://t.co/iUgMMKkqZQ
#python",False,False,https://twitter.com/python_tip/status/884683682870693888,"[{'url': 'https://t.co/RnpkOILseR', 'expanded_url': 'http://pandas.pydata.org/pandas-docs/stable/basics.html?highlight=pipe#tablewise-function-application', 'display_url': 'pandas.pydata.org/pandas-docs/st…'}, {'url': 'https://t.co/iUgMMKkqZQ', 'expanded_url': 'https://tomaugspurger.github.io/method-chaining.html', 'display_url': 'tomaugspurger.github.io/method-chainin…'}]",[]
884353407380852736,2017-07-10 10:07:37+00:00,45,19,"Use the pathlib module to recursively search for files 
>>> from pathlib import Path
>>> Path('.').glob('**/*.py')
#python",False,False,https://twitter.com/python_tip/status/884353407380852736,[],[]
883234134985818112,2017-07-07 08:00:02+00:00,6,5,"Keyword-only args in #python3
def f(a, b, *, c=3):
the only way to access c it is to explicitly call f(a, b, c=1)
https://t.co/69D3MzLN2u",False,False,https://twitter.com/python_tip/status/883234134985818112,"[{'url': 'https://t.co/69D3MzLN2u', 'expanded_url': 'https://stackoverflow.com/questions/4255091/explain-keyword-only-arguments-varargs-in-python', 'display_url': 'stackoverflow.com/questions/4255…'}]",[]
882871740468035584,2017-07-06 08:00:00+00:00,24,12,Create XKCD-like plots with #matplotlib: https://t.co/AzSFgaof7W #python https://t.co/19OX0Hy8k8,False,False,https://twitter.com/python_tip/status/882871740468035584,"[{'url': 'https://t.co/AzSFgaof7W', 'expanded_url': 'http://jakevdp.github.io/blog/2013/07/10/XKCD-plots-in-matplotlib/', 'display_url': 'jakevdp.github.io/blog/2013/07/1…'}]","[{'url': 'https://t.co/19OX0Hy8k8', 'media_url': 'http://pbs.twimg.com/media/DDmTD2LXoAANGaG.jpg', 'display_url': 'pic.twitter.com/19OX0Hy8k8'}]"
882509359657254912,2017-07-05 08:00:02+00:00,18,10,"Check #python process memory usage with psutil:
>>> pr = psutil.Process(os.getpid())
>>> print(pr.memory_info().rss)
https://t.co/9maqySldnc",False,False,https://twitter.com/python_tip/status/882509359657254912,"[{'url': 'https://t.co/9maqySldnc', 'expanded_url': 'http://pythonhosted.org/psutil/#psutil.Process.memory_info', 'display_url': 'pythonhosted.org/psutil/#psutil…'}]",[]
882146972626329606,2017-07-04 08:00:02+00:00,19,7,"Get n items of a generator:
>>> g = (x**3 for x in range(1,101))
>>> for x in itertools.islice(g,4):
...     print(x)
1
8
27
64
#python",False,False,https://twitter.com/python_tip/status/882146972626329606,[],[]
881784587973677057,2017-07-03 08:00:03+00:00,38,13,"When slicing a sequence, the third parameter is the step:
>>> x = '01234567890'
>>> x[::3]
'0369'
#python",False,False,https://twitter.com/python_tip/status/881784587973677057,[],[]
880678711393177601,2017-06-30 06:45:41+00:00,35,16,#Matplotlib supports interactive controls: https://t.co/lpjPNPJQFr https://t.co/hCiygiBMeE #Python https://t.co/hK6PaLPdG8,False,False,https://twitter.com/python_tip/status/880678711393177601,"[{'url': 'https://t.co/lpjPNPJQFr', 'expanded_url': 'https://matplotlib.org/examples/widgets/index.html', 'display_url': 'matplotlib.org/examples/widge…'}, {'url': 'https://t.co/hCiygiBMeE', 'expanded_url': 'https://matplotlib.org/examples/event_handling/index.html', 'display_url': 'matplotlib.org/examples/event…'}]","[{'url': 'https://t.co/hK6PaLPdG8', 'media_url': 'http://pbs.twimg.com/ext_tw_video_thumb/880678677092212737/pu/img/pgBVRYdQVyet3IEM.jpg', 'display_url': 'pic.twitter.com/hK6PaLPdG8'}]"
880335027007094785,2017-06-29 08:00:00+00:00,9,4,"Is Python interpreted or compiled? And what are the .pyc created in your folder:

https://t.co/pAybMT7clJ",False,False,https://twitter.com/python_tip/status/880335027007094785,"[{'url': 'https://t.co/pAybMT7clJ', 'expanded_url': 'https://softwareengineering.stackexchange.com/questions/24558/is-python-interpreted-or-compiled', 'display_url': 'softwareengineering.stackexchange.com/questions/2455…'}]",[]
879972637694238720,2017-06-28 08:00:00+00:00,16,3,"split iterator into copies:
x = itertools.count(2, step=2)
a, b = itertools.tee(x)
print(next(a)) # 2
print(next(a)) # 4
print(next(b)) # 2",False,False,https://twitter.com/python_tip/status/879972637694238720,[],[]
879610259664404480,2017-06-27 08:00:02+00:00,25,8,"Add a progress meter to your loops:
from tqdm import tqdm
for i in tqdm(range(10)):
    do something
https://t.co/ypeSj7jo3v
#python",False,False,https://twitter.com/python_tip/status/879610259664404480,"[{'url': 'https://t.co/ypeSj7jo3v', 'expanded_url': 'https://github.com/tqdm/tqdm', 'display_url': 'github.com/tqdm/tqdm'}]",[]
879274115189919745,2017-06-26 09:44:19+00:00,16,8,"Calculate the difference between consecutive elements in list:
>>> import numpy
>>> numpy.diff([4,3,21])
array([-1, 18])
#python #numpy",False,False,https://twitter.com/python_tip/status/879274115189919745,[],[]
878118167687696385,2017-06-23 05:11:00+00:00,8,3,"> def function(data=[]):
     data.append(1)
     return data 
> function()
[1]
> function()
[1, 1]

Explanation at https://t.co/hT6EUs5KSD",False,False,https://twitter.com/python_tip/status/878118167687696385,"[{'url': 'https://t.co/hT6EUs5KSD', 'expanded_url': 'http://effbot.org/zone/default-values.htm', 'display_url': 'effbot.org/zone/default-v…'}]",[]
877757038549454848,2017-06-22 05:16:00+00:00,8,1,"Common #python plots, comparison of different modules (super useful if you come from #ggplot2 world)

https://t.co/D1y5IDBuTO",False,False,https://twitter.com/python_tip/status/877757038549454848,"[{'url': 'https://t.co/D1y5IDBuTO', 'expanded_url': 'http://pythonplot.com/#stacked-bar-chart', 'display_url': 'pythonplot.com/#stacked-bar-c…'}]",[]
877398427121930240,2017-06-21 05:31:00+00:00,34,14,"Use named groups for more readable regular expressions:

https://t.co/Hu7fU20Vkz
https://t.co/B30VUIXc4f https://t.co/ts6PAPU4C5",False,False,https://twitter.com/python_tip/status/877398427121930240,"[{'url': 'https://t.co/Hu7fU20Vkz', 'expanded_url': 'https://stackoverflow.com/questions/10059673/named-regular-expression-group-pgroup-nameregexp-what-does-p-stand-for', 'display_url': 'stackoverflow.com/questions/1005…'}, {'url': 'https://t.co/B30VUIXc4f', 'expanded_url': 'https://docs.python.org/3/library/re.html', 'display_url': 'docs.python.org/3/library/re.h…'}]","[{'url': 'https://t.co/ts6PAPU4C5', 'media_url': 'http://pbs.twimg.com/media/DCrSSp9XkAA5ay5.jpg', 'display_url': 'pic.twitter.com/ts6PAPU4C5'}]"
877038555389980672,2017-06-20 05:41:00+00:00,9,0,"[f for bar in foo for f in bar]

Meditate what this code does, then try it for foo = [[1,2],[3,4]]

Inspired by @kiwicom247 quiz at #pyconcz",False,False,https://twitter.com/python_tip/status/877038555389980672,[],[]
876706551788163072,2017-06-19 07:41:45+00:00,43,20,"Learn to parse command line arguments with argparse:

https://t.co/cUIPGC5Rn7
https://t.co/OrjT9CoW2N https://t.co/9zCs4xIUk5",False,False,https://twitter.com/python_tip/status/876706551788163072,"[{'url': 'https://t.co/cUIPGC5Rn7', 'expanded_url': 'https://docs.python.org/2/howto/argparse.html', 'display_url': 'docs.python.org/2/howto/argpar…'}, {'url': 'https://t.co/OrjT9CoW2N', 'expanded_url': 'http://stackoverflow.com/questions/7427101/dead-simple-argparse-example-wanted-1-argument-3-results', 'display_url': 'stackoverflow.com/questions/7427…'}]","[{'url': 'https://t.co/9zCs4xIUk5', 'media_url': 'http://pbs.twimg.com/media/DCqv9PvXYAA2hNF.jpg', 'display_url': 'pic.twitter.com/9zCs4xIUk5'}]"
875623983307264000,2017-06-16 08:00:00+00:00,43,22,"str.startswith() accepts also a tuple of prefixes to look for:
>>> ""somestring"".startswith((""aa"", ""xx"", ""z"", ""som""))
True
#python",False,False,https://twitter.com/python_tip/status/875623983307264000,[],[]
875243854051635200,2017-06-15 06:49:30+00:00,0,0,you are right! https://t.co/i7uQoJDqJw,False,False,https://twitter.com/python_tip/status/875243854051635200,"[{'url': 'https://t.co/i7uQoJDqJw', 'expanded_url': 'https://twitter.com/treyhunner/status/875150424977702912', 'display_url': 'twitter.com/treyhunner/sta…'}]",[]
875242817857171456,2017-06-15 06:45:23+00:00,28,15,Add interactivity to your #Jupyter notebooks with ipywidgets. https://t.co/Ex1H0joaMD https://t.co/54tOsgZCDY,False,False,https://twitter.com/python_tip/status/875242817857171456,"[{'url': 'https://t.co/Ex1H0joaMD', 'expanded_url': 'http://ipywidgets.readthedocs.io/en/latest/index.html', 'display_url': 'ipywidgets.readthedocs.io/en/latest/inde…'}]","[{'url': 'https://t.co/54tOsgZCDY', 'media_url': 'http://pbs.twimg.com/ext_tw_video_thumb/875242780624375808/pu/img/SFdICAW_lfqG3ONf.jpg', 'display_url': 'pic.twitter.com/54tOsgZCDY'}]"
874899208393826304,2017-06-14 08:00:00+00:00,29,7,"Use list comprehension to sum two lists element-wise:
>>> x+y for x, y in zip(list1, list2)
#python",False,False,https://twitter.com/python_tip/status/874899208393826304,[],[]
874553515556864000,2017-06-13 09:06:21+00:00,0,0,"RT @pybites: @python_tip cool! it even supports unary +

>>> c = collections.Counter([1, 2, 2])
>>> c[1] -= 3
>>> c
Counter({2: 2, 1: -2})…",False,True,https://twitter.com/python_tip/status/874553515556864000,[],[]
874536822407286784,2017-06-13 08:00:01+00:00,20,10,">>> a=collections.Counter([1, 2, 2])
>>> b=collections.Counter([2, 2, 3])
>>> a+b
Counter({2: 4, 1: 1, 3: 1})
>>> a-b
Counter({1: 1})",False,False,https://twitter.com/python_tip/status/874536822407286784,[],[]
874159340323610627,2017-06-12 07:00:02+00:00,40,16,"Read tables from a webpage into a list of #pandas dataframes:

dfs = https://t.co/KBWVZb2pZj_html('https://t.co/0hkIqtoWE4’)

#python https://t.co/ikKblTaXQB",False,False,https://twitter.com/python_tip/status/874159340323610627,"[{'url': 'https://t.co/KBWVZb2pZj', 'expanded_url': 'http://pd.read', 'display_url': 'pd.read'}, {'url': 'https://t.co/0hkIqtoWE4', 'expanded_url': 'https://en.wikipedia.org/wiki/List_of_countries_by_alcohol_consumption_per_capita', 'display_url': 'en.wikipedia.org/wiki/List_of_c…'}]","[{'url': 'https://t.co/ikKblTaXQB', 'media_url': 'http://pbs.twimg.com/media/DCEDGpjXoAAy7mh.jpg', 'display_url': 'pic.twitter.com/ikKblTaXQB'}]"
873068394508988418,2017-06-09 06:45:00+00:00,1,0,"@mydecorator
def myfun():
…

is equivalent to

def myfun():
…
myfun = mydecorator(myfun)

Learn about decorators: 
https://t.co/ujYbiHem73",True,False,https://twitter.com/python_tip/status/873068394508988418,"[{'url': 'https://t.co/ujYbiHem73', 'expanded_url': 'https://www.thecodeship.com/patterns/guide-to-python-function-decorators', 'display_url': 'thecodeship.com/patterns/guide…'}]",[]
872719047401644032,2017-06-08 07:36:49+00:00,30,7,"Get first and last line of a file:
>>> with open(""somefile"") as f:
    first, *_, last = f.readlines()

#python3",False,False,https://twitter.com/python_tip/status/872719047401644032,[],[]
872343617330741248,2017-06-07 06:45:00+00:00,25,11,"We like zip, what about unzip? 
> x = ('Al',25), ('Bob',26), ('Dan',47)
> names, ages = zip(*x)
> names
('Al','Bob','Dan')
> ages
(25,26,47)",False,False,https://twitter.com/python_tip/status/872343617330741248,[],[]
871981984964390914,2017-06-06 06:48:00+00:00,14,4,"Capitalize first letters:
>>> import string
>>> string.capwords('some random words')
'Some Random Words'

#python 
https://t.co/VjYbkGaL1P",False,False,https://twitter.com/python_tip/status/871981984964390914,"[{'url': 'https://t.co/VjYbkGaL1P', 'expanded_url': 'http://stackoverflow.com/questions/1549641/how-to-capitalize-the-first-letter-of-each-word-in-a-string-python/12336911#12336911', 'display_url': 'stackoverflow.com/questions/1549…'}]",[]
871618841520025600,2017-06-05 06:45:00+00:00,3,1,"Copy a list by slicing or using the list() function:
new_list = old_list[:]
new_list = list(old_list)

#python https://t.co/5wJ8kMTkPk",False,False,https://twitter.com/python_tip/status/871618841520025600,"[{'url': 'https://t.co/5wJ8kMTkPk', 'expanded_url': 'http://stackoverflow.com/questions/2612802/how-to-clone-or-copy-a-list', 'display_url': 'stackoverflow.com/questions/2612…'}]",[]
870550552568102912,2017-06-02 08:00:00+00:00,7,4,"Use functools.partial to reduce the number of arguments to a function:
https://t.co/wto9rOSc8e
#python",False,False,https://twitter.com/python_tip/status/870550552568102912,"[{'url': 'https://t.co/wto9rOSc8e', 'expanded_url': 'https://www.pydanny.com/python-partials-are-fun.html', 'display_url': 'pydanny.com/python-partial…'}]",[]
870188166325600256,2017-06-01 08:00:00+00:00,23,6,"Working with paths is easy in #Python3
from pathlib import Path
d = Path(""/etc"")
filepath = d/""test.txt""
if filepath.exists():
    somestuff",False,False,https://twitter.com/python_tip/status/870188166325600256,[],[]
869833326437294081,2017-05-31 08:30:00+00:00,8,2,"Process your csv as a collection of OrderedDicts, very convenient for data analysis: use csv.DictReader() 
https://t.co/f1tGWrciHB
#python",False,False,https://twitter.com/python_tip/status/869833326437294081,"[{'url': 'https://t.co/f1tGWrciHB', 'expanded_url': 'https://gist.github.com/karlafej/7cd0f4cfd262847208f9b2bb56acde73#file-gistfile1-py', 'display_url': 'gist.github.com/karlafej/7cd0f…'}]",[]
869463389398904832,2017-05-30 08:00:00+00:00,9,3,"Use `decode` and `encode` to convert between Unicode and byte strings:

https://t.co/8KdE18WA8W
https://t.co/qGeTdo1010

#python3",False,False,https://twitter.com/python_tip/status/869463389398904832,"[{'url': 'https://t.co/8KdE18WA8W', 'expanded_url': 'http://stackoverflow.com/a/34695423/1869302', 'display_url': 'stackoverflow.com/a/34695423/186…'}, {'url': 'https://t.co/qGeTdo1010', 'expanded_url': 'https://docs.python.org/3.3/howto/unicode.html', 'display_url': 'docs.python.org/3.3/howto/unic…'}]",[]
869110833074376704,2017-05-29 08:39:04+00:00,6,1,"In #Python 3.6, dicts remember order of your values/keys

(for backwards-compatibility you might still want to use collections.OrderedDict)",False,False,https://twitter.com/python_tip/status/869110833074376704,[],[]
868012579670679553,2017-05-26 07:55:00+00:00,26,11,"consecutive pairs:
>>> mylist = [1, 2, 3, 4]
>>> a = list(zip(mylist, mylist[1:]))
>>> print(a)
[(1, 2), (2, 3), (3, 4)]
#python",False,False,https://twitter.com/python_tip/status/868012579670679553,[],[]
867651455829671936,2017-05-25 08:00:01+00:00,4,5,"Use fnmatch module to match strings using Unix shell-style wildcard patterns.

https://t.co/unEecTzEKf
https://t.co/uGDFf35YAy

#python",False,False,https://twitter.com/python_tip/status/867651455829671936,"[{'url': 'https://t.co/unEecTzEKf', 'expanded_url': 'http://fabiosantoscode.blogspot.com/2012/12/wildcards-in-python-fnmatch-module.html', 'display_url': 'fabiosantoscode.blogspot.com/2012/12/wildca…'}, {'url': 'https://t.co/uGDFf35YAy', 'expanded_url': 'https://pymotw.com/3/fnmatch/', 'display_url': 'pymotw.com/3/fnmatch/'}]",[]
867286294354812928,2017-05-24 07:49:00+00:00,1,3,"Split #pandas dataframe into a dictionary of subsets using groupby
year_subsets = dict(list(new_df.groupby('Year')))
https://t.co/28D6v6MsWf",False,False,https://twitter.com/python_tip/status/867286294354812928,"[{'url': 'https://t.co/28D6v6MsWf', 'expanded_url': 'http://cgerson.github.io/Pandas-Split/', 'display_url': 'cgerson.github.io/Pandas-Split/'}]",[]
866926676520738816,2017-05-23 08:00:01+00:00,7,3,"Shallow and deep copy:
>> from copy import copy, deepcopy
>> a = [1,[2,3]]
>> b = a
>> c = copy(a)
>> d = deepcopy(a)
>> a[0]=0
>> a[1][1]=4 https://t.co/4jzSsbf2LS",False,False,https://twitter.com/python_tip/status/866926676520738816,[],"[{'url': 'https://t.co/4jzSsbf2LS', 'media_url': 'http://pbs.twimg.com/media/DAdYobyW0AEwxo9.jpg', 'display_url': 'pic.twitter.com/4jzSsbf2LS'}]"
866518988867555328,2017-05-22 05:00:00+00:00,58,51,"All #PyCon2017 talks are online

https://t.co/cOZoelIh1g

Feeling overwhelmed? Here is the list:

https://t.co/mqSA0QMoJx",False,False,https://twitter.com/python_tip/status/866518988867555328,"[{'url': 'https://t.co/cOZoelIh1g', 'expanded_url': 'https://www.youtube.com/channel/UCrJhliKNQ8g0qoE_zvL8eVg', 'display_url': 'youtube.com/channel/UCrJhl…'}, {'url': 'https://t.co/mqSA0QMoJx', 'expanded_url': 'https://us.pycon.org/2017/schedule/talks/', 'display_url': 'us.pycon.org/2017/schedule/…'}]",[]
865493734028226561,2017-05-19 09:06:00+00:00,6,2,"Drawing #Python Logo in Matplotlib:

https://t.co/qXgVIgVPhp

by @jakevdp https://t.co/2HVNc6ogOn",False,False,https://twitter.com/python_tip/status/865493734028226561,"[{'url': 'https://t.co/qXgVIgVPhp', 'expanded_url': 'https://gist.github.com/jakevdp/54972317e9cd28e45df37ef6aff13555', 'display_url': 'gist.github.com/jakevdp/549723…'}]","[{'url': 'https://t.co/2HVNc6ogOn', 'media_url': 'http://pbs.twimg.com/media/DAGZwZ_UIAEVbzu.jpg', 'display_url': 'pic.twitter.com/2HVNc6ogOn'}]"
865141253687693313,2017-05-18 09:45:23+00:00,4,3,"Image to Numpy array:
> pic = https://t.co/DoWiUwfKEo(""foo.jpg"")
> pix = numpy.asarray(pic)

https://t.co/X2R65FR1xb
https://t.co/pRTiWFIxJu",False,False,https://twitter.com/python_tip/status/865141253687693313,"[{'url': 'https://t.co/DoWiUwfKEo', 'expanded_url': 'http://PIL.Image.open', 'display_url': 'PIL.Image.open'}, {'url': 'https://t.co/X2R65FR1xb', 'expanded_url': 'https://gist.github.com/simecek/e5a7a9de9d568b3e1a291a5982dbd3c2', 'display_url': 'gist.github.com/simecek/e5a7a9…'}, {'url': 'https://t.co/pRTiWFIxJu', 'expanded_url': 'http://www.scipy-lectures.org/advanced/image_processing/', 'display_url': 'scipy-lectures.org/advanced/image…'}]",[]
864772010743914497,2017-05-17 09:18:08+00:00,7,2,"To check version of #python modules:

$ pip freeze | grep numpy
numpy==1.8.2

OR

$ python -c ""import numpy; print numpy.__version__""
1.8.2",False,False,https://twitter.com/python_tip/status/864772010743914497,[],[]
864397514719604736,2017-05-16 08:30:01+00:00,7,1,"Use ast_note_interactivity option in #Jupyter notebooks to see the value of multiple statements at once.
https://t.co/KKZG3UtPlf",False,False,https://twitter.com/python_tip/status/864397514719604736,"[{'url': 'https://t.co/KKZG3UtPlf', 'expanded_url': 'https://www.dataquest.io/blog/jupyter-notebook-tips-tricks-shortcuts/', 'display_url': 'dataquest.io/blog/jupyter-n…'}]",[]
864027571855409152,2017-05-15 08:00:00+00:00,4,5,"Open a page using the default web browser:
>>> import webbrowser
>>> https://t.co/JZLG2Ssemg('https://t.co/TLfViwAzEt')
True
#python",False,False,https://twitter.com/python_tip/status/864027571855409152,"[{'url': 'https://t.co/JZLG2Ssemg', 'expanded_url': 'http://webbrowser.open', 'display_url': 'webbrowser.open'}]",[]
862940662190288896,2017-05-12 08:01:01+00:00,5,3,"Struggling with matplotlib? Get enlightened at https://t.co/JD0opkDORD

#python #matplotlib by @chris1610",False,False,https://twitter.com/python_tip/status/862940662190288896,"[{'url': 'https://t.co/JD0opkDORD', 'expanded_url': 'http://pbpython.com/effective-matplotlib.html', 'display_url': 'pbpython.com/effective-matp…'}]",[]
862578271422042112,2017-05-11 08:01:00+00:00,15,10,"locals() and globals() return a dictionary of local / global variables:

>>> a = 1
>>> b = 1
>>> locals()
{'a': 1, 'b': 1, ...}

#python",False,False,https://twitter.com/python_tip/status/862578271422042112,[],[]
862359967155834880,2017-05-10 17:33:32+00:00,0,0,"RT @mohhinder: @python_tip @pybites I like! You see this one? 
python -c 'import platform; print(platform.architecture()[0])'",False,True,https://twitter.com/python_tip/status/862359967155834880,[],[]
862155489492250625,2017-05-10 04:01:01+00:00,3,1,"Is machine 64 bits? Get uname from #Python:

$ python -c 'import platform; print(platform.machine())'
x86_64

by @pybites",False,False,https://twitter.com/python_tip/status/862155489492250625,[],[]
862032647190704128,2017-05-09 19:52:53+00:00,2,0,"@the_me Here it is:

>>> x = [1, 2]
>>> while x:
    print(""Then"")
    x.pop()
    if len(x) == 0: break
else:
    print(""Else"")

Then
2
Then
1",True,False,https://twitter.com/python_tip/status/862032647190704128,[],[]
861793101433757696,2017-05-09 04:01:01+00:00,2,0,"Use seek to move file pointer
> f=open('test', 'wb+')
> f.write(b'0123456789')
> https://t.co/5BY1okN2Hl(5)
> https://t.co/0bta4rtQPv(1)
'5'",False,False,https://twitter.com/python_tip/status/861793101433757696,"[{'url': 'https://t.co/5BY1okN2Hl', 'expanded_url': 'http://f.seek', 'display_url': 'f.seek'}, {'url': 'https://t.co/0bta4rtQPv', 'expanded_url': 'http://f.read', 'display_url': 'f.read'}]",[]
861430710673879040,2017-05-08 04:01:00+00:00,7,3,"Else Clause on Loop Statement

>>> x = [1, 2]
>>> while x:
print(""Then"")
x.pop()
else:
print(""Else"")

Then
2
Then
1
Else

#python",False,False,https://twitter.com/python_tip/status/861430710673879040,[],[]
860403698207305730,2017-05-05 08:00:01+00:00,7,5,"Generate word clouds in #python with wordcloud package:
https://t.co/hUKyZnCQ0b
https://t.co/PUFsXtTPox https://t.co/PT2zTRshVS",False,False,https://twitter.com/python_tip/status/860403698207305730,"[{'url': 'https://t.co/hUKyZnCQ0b', 'expanded_url': 'https://github.com/amueller/word_cloud', 'display_url': 'github.com/amueller/word_…'}, {'url': 'https://t.co/PUFsXtTPox', 'expanded_url': 'http://amueller.github.io/word_cloud/', 'display_url': 'amueller.github.io/word_cloud/'}]","[{'url': 'https://t.co/PT2zTRshVS', 'media_url': 'http://pbs.twimg.com/media/C-_BH_dXkAAn0e7.png', 'display_url': 'pic.twitter.com/PT2zTRshVS'}]"
860071251859038208,2017-05-04 09:59:00+00:00,15,9,"If you miss an equivalent of C’s ”?” ternary operator, try

>>> a = 1
>>> b = 2
>>> 1 if a > b else -1 
-1

#python",False,False,https://twitter.com/python_tip/status/860071251859038208,[],[]
859686468628774912,2017-05-03 08:30:00+00:00,16,6,">>> words = 'I want only hello and world'.split()
>>> indexes = 3, 5
>>> from operator import itemgetter
>>> itemgetter(*indexes)(words) https://t.co/WOT9SzcZ1E",False,False,https://twitter.com/python_tip/status/859686468628774912,[],"[{'url': 'https://t.co/WOT9SzcZ1E', 'media_url': 'http://pbs.twimg.com/media/C-xJ3XuXcAA261v.jpg', 'display_url': 'pic.twitter.com/WOT9SzcZ1E'}]"
859320306472759296,2017-05-02 08:15:01+00:00,7,7,"Chaining Of Comparison Operators

>>> n = 10
>>> result = 1 < n < 20
>>> print(result)
True
>>> result = 1 > n <= 9
>>> print(result)
False",False,False,https://twitter.com/python_tip/status/859320306472759296,[],[]
858954147067961349,2017-05-01 08:00:01+00:00,1,2,"Use MappingProxyType as a read-only dictionary:
https://t.co/q5kTZVOFxF
#python #python3",False,False,https://twitter.com/python_tip/status/858954147067961349,"[{'url': 'https://t.co/q5kTZVOFxF', 'expanded_url': 'https://github.com/topper-123/Articles/blob/master/New-interesting-data-types-in-Python3.rst#typesmappingproxytype', 'display_url': 'github.com/topper-123/Art…'}]",[]
857806835180605440,2017-04-28 04:01:01+00:00,7,4,"Bored? Try The #Python Challenge!

https://t.co/lCPWbqBg4s

(if you prefer tasks that involve real objects, go to https://t.co/f6Ki1Vsiy6)",False,False,https://twitter.com/python_tip/status/857806835180605440,"[{'url': 'https://t.co/lCPWbqBg4s', 'expanded_url': 'http://www.pythonchallenge.com/', 'display_url': 'pythonchallenge.com'}, {'url': 'https://t.co/f6Ki1Vsiy6', 'expanded_url': 'http://pythonchallenge.org/', 'display_url': 'pythonchallenge.org'}]",[]
857444444068380672,2017-04-27 04:01:00+00:00,3,2,"Unpacking with * & **

def test(x,y,z):
print(x,y,z)

testD = {'x':1,'y':2,'z':3} 
testL = [4,5,6]

test(*testD)
test(**testD)
test(*testL)",False,False,https://twitter.com/python_tip/status/857444444068380672,[],[]
857082055837884417,2017-04-26 04:01:00+00:00,7,5,"`is` operator tests if variables point to the same object:
>>> a = [1, 2]
>>> b = [1, 2]
>>> c = a
>>> a is b
False
>>> a is c
True 
#python",False,False,https://twitter.com/python_tip/status/857082055837884417,[],[]
856922915442446336,2017-04-25 17:28:38+00:00,1,0,"@mister_caron @RealPython > from numpy.random import rand
> A = rand(10)
> B = rand(1000)

> sys.getsizeof(A)
40
> sys.getsizeof(B)
40

> A.nbytes
80
> B.nbytes
8000",True,False,https://twitter.com/python_tip/status/856922915442446336,[],[]
856922363086221313,2017-04-25 17:26:26+00:00,0,0,"@mister_caron @RealPython Good point. For discussion, see
https://t.co/jSTuREwYtu",True,False,https://twitter.com/python_tip/status/856922363086221313,"[{'url': 'https://t.co/jSTuREwYtu', 'expanded_url': 'http://stackoverflow.com/a/30316760/1869302', 'display_url': 'stackoverflow.com/a/30316760/186…'}]",[]
856719669327253505,2017-04-25 04:01:00+00:00,17,9,"Saving #python object to file

import pickle
a = {'hello': 'world'}

pickle.dump(a, open(""save.p"", ""wb""))

pickle.load(open(""save.p"", ""rb""))",False,False,https://twitter.com/python_tip/status/856719669327253505,[],[]
856656617441562624,2017-04-24 23:50:28+00:00,0,0,@sagayev Thanks. This was one of our first ones :-) https://t.co/WUDF4fbvDr,True,False,https://twitter.com/python_tip/status/856656617441562624,"[{'url': 'https://t.co/WUDF4fbvDr', 'expanded_url': 'https://twitter.com/python_tip/status/835081849969999873', 'display_url': 'twitter.com/python_tip/sta…'}]",[]
856402336897544192,2017-04-24 07:00:02+00:00,17,12,"Measure object size in memory

> import sys
> x=1
> sys.getsizeof(x)
28
> y=1.0
> sys.getsizeof(y)
24
> z=""1""
> sys.getsizeof(z)
50
#python3",False,False,https://twitter.com/python_tip/status/856402336897544192,[],[]
855429119680577536,2017-04-21 14:32:49+00:00,0,0,@JaniKarh It does and it inspired me to another one :-) Just a bit hard to fit it all in one tweet. I will think about it.,True,False,https://twitter.com/python_tip/status/855429119680577536,[],[]
855360210818527233,2017-04-21 09:59:00+00:00,27,12,">>> numbers = ['9','44','8','222']
>>> max(numbers)
'9'
>>> max(numbers, key=int)
'222'
#python",False,False,https://twitter.com/python_tip/status/855360210818527233,[],[]
854997823649173504,2017-04-20 09:59:00+00:00,8,4,Free #Python Data Science Handbook from @uwescience: https://t.co/ND6vmoNFLQ,False,False,https://twitter.com/python_tip/status/854997823649173504,"[{'url': 'https://t.co/ND6vmoNFLQ', 'expanded_url': 'https://github.com/jakevdp/PythonDataScienceHandbook', 'display_url': 'github.com/jakevdp/Python…'}]",[]
854605489677664257,2017-04-19 08:00:01+00:00,7,2,"Builtin max and min accept iterators of datetime!
maxd = max(dates) # dates=list of datetime objects
source: https://t.co/W5N5vCUZ5O
#python https://t.co/0fZgeKQG5m",False,False,https://twitter.com/python_tip/status/854605489677664257,"[{'url': 'https://t.co/W5N5vCUZ5O', 'expanded_url': 'https://github.com/pybites/blog_code/blob/master/katas/pypi/pypi100k.py', 'display_url': 'github.com/pybites/blog_c…'}]","[{'url': 'https://t.co/0fZgeKQG5m', 'media_url': 'http://pbs.twimg.com/media/C9sSvXhXgAAxHM4.jpg', 'display_url': 'pic.twitter.com/0fZgeKQG5m'}]"
854217934297718785,2017-04-18 06:20:00+00:00,9,4,"Use folium to generate interactive webmaps from #python.
https://t.co/J6tVWDq1Uf https://t.co/F6pONmTu58",False,False,https://twitter.com/python_tip/status/854217934297718785,"[{'url': 'https://t.co/J6tVWDq1Uf', 'expanded_url': 'https://github.com/python-visualization/folium', 'display_url': 'github.com/python-visuali…'}]","[{'url': 'https://t.co/F6pONmTu58', 'media_url': 'http://pbs.twimg.com/media/C9kOyCUXYAAlYAi.jpg', 'display_url': 'pic.twitter.com/F6pONmTu58'}]"
853840699795673088,2017-04-17 05:21:01+00:00,10,7,"#python #fun

>>> from __future__ import braces
  File ""<stdin>"", line 1
SyntaxError: not a chance

#EasterEgg https://t.co/O0AYLTFjjn",False,False,https://twitter.com/python_tip/status/853840699795673088,"[{'url': 'https://t.co/O0AYLTFjjn', 'expanded_url': 'https://scott.yang.id.au/2006/09/python-and-braces.html', 'display_url': 'scott.yang.id.au/2006/09/python…'}]",[]
852922449389916161,2017-04-14 16:32:13+00:00,2,0,"@_vyyyy_ ** will unpack the dictionary, see
https://t.co/bmKOIdYcz5
https://t.co/Q3woMbbsZv",True,False,https://twitter.com/python_tip/status/852922449389916161,"[{'url': 'https://t.co/bmKOIdYcz5', 'expanded_url': 'http://www.pythonabc.com/asterisk-double-asterisk-python/', 'display_url': 'pythonabc.com/asterisk-doubl…'}, {'url': 'https://t.co/Q3woMbbsZv', 'expanded_url': 'http://treyhunner.com/2016/02/how-to-merge-dictionaries-in-python/', 'display_url': 'treyhunner.com/2016/02/how-to…'}]",[]
852921098320703489,2017-04-14 16:26:51+00:00,0,0,"RT @pybites: @python_tip Very cool, but note it's >= 3.5, for earlier version you probably want itertools.chain, nice article: https://t.co…",False,True,https://twitter.com/python_tip/status/852921098320703489,[],[]
852828279019057152,2017-04-14 10:18:01+00:00,18,7,"Merge two dictionaries:
x = {'a':1, 'b':2}
y = {'c':3, 'd':4}
z = {**x, **y}

output:
z = {'a': 1, 'b': 2, 'c': 3, 'd': 4}
#python3",False,False,https://twitter.com/python_tip/status/852828279019057152,[],[]
852465638593482754,2017-04-13 10:17:00+00:00,1,4,"Use collections.Counter().most_common() to find most common words:
>>> Counter(mylist).most_common(10)
https://t.co/kdfaV86TkL #python",False,False,https://twitter.com/python_tip/status/852465638593482754,"[{'url': 'https://t.co/kdfaV86TkL', 'expanded_url': 'https://docs.python.org/3/library/collections.html#counter-objects', 'display_url': 'docs.python.org/3/library/coll…'}]",[]
852098972609126400,2017-04-12 10:00:00+00:00,2,1,"#python can work with complex numbers:
>>> a = complex(1,2)
>>> b = 1 - 3j
>>> print(a+b)
(2-1j)
>>> print(abs(a))
2.23606797749979",False,False,https://twitter.com/python_tip/status/852098972609126400,[],[]
851974879016570881,2017-04-12 01:46:54+00:00,0,1,@KaeKay_Ally You are welcome.,True,False,https://twitter.com/python_tip/status/851974879016570881,[],[]
851781899387379713,2017-04-11 13:00:04+00:00,5,4,"Calculate the number of days between two dates:

>from datetime import datetime as dt
>(https://t.co/0O6FbyJick() - dt(2016,12,31)).days
101",False,False,https://twitter.com/python_tip/status/851781899387379713,"[{'url': 'https://t.co/0O6FbyJick', 'expanded_url': 'http://dt.now', 'display_url': 'dt.now'}]",[]
851430842626965504,2017-04-10 13:45:06+00:00,5,5,"Split string with multiple delimiters #python
>>> import re
>>> print(re.split('\W+', 'Hello,world;a:test'))
['Hello', 'world', 'a', 'test']",False,False,https://twitter.com/python_tip/status/851430842626965504,[],[]
851174745827680256,2017-04-09 20:47:28+00:00,1,1,@pybites Good idea! thanks.,True,False,https://twitter.com/python_tip/status/851174745827680256,[],[]
850226636125462528,2017-04-07 06:00:01+00:00,2,3,"Find N smallest items in a list:
>>> import heapq
>>> heapq.nsmallest(N, mylst)

or
>>> sorted(mylst)[:N]

https://t.co/HFX0T3GIpP #python",False,False,https://twitter.com/python_tip/status/850226636125462528,"[{'url': 'https://t.co/HFX0T3GIpP', 'expanded_url': 'https://docs.python.org/3.6/library/heapq.html#heapq.nsmallest', 'display_url': 'docs.python.org/3.6/library/he…'}]",[]
849834299985625092,2017-04-06 04:01:00+00:00,12,5,"Make a dictionary of 2 lists
>>> name = ('bob','tim')
>>> age = (35,27)
>>> d = dict(zip(name,age))
>>> d
{'bob': 35, 'tim': 27}
by @pybites",False,False,https://twitter.com/python_tip/status/849834299985625092,[],[]
849562261379096576,2017-04-05 10:00:01+00:00,0,1,"#numpy Slicing vs. indexing:
> x=np.array(range(1,5))
> y=x[[1,2]]
> z=x[1:3]
> y[0]=9
> x
array([1,2,3,4])
> z[0]=9 
> x
array([1,9,3,4])",False,False,https://twitter.com/python_tip/status/849562261379096576,[],[]
849207410988392448,2017-04-04 10:29:58+00:00,1,1,"Iterate over list and get index and value pairs:
for i, item in enumerate(mylist):
    print(i, item)
#python See: https://t.co/SECAO6sci5",False,False,https://twitter.com/python_tip/status/849207410988392448,"[{'url': 'https://t.co/SECAO6sci5', 'expanded_url': 'https://docs.python.org/3/library/functions.html#enumerate', 'display_url': 'docs.python.org/3/library/func…'}]",[]
848807030252945408,2017-04-03 07:59:00+00:00,3,2,"Sorting
>>> import operator
>>> L = [(1,4),(2,3)]
>>> L.sort(key=operator.itemgetter(1))
>>> L
[(2,3),(1,4)]
https://t.co/aGFGYPD5jJ #python",False,False,https://twitter.com/python_tip/status/848807030252945408,"[{'url': 'https://t.co/aGFGYPD5jJ', 'expanded_url': 'https://docs.python.org/3.6/howto/sorting.html#operator-module-functions', 'display_url': 'docs.python.org/3.6/howto/sort…'}]",[]
848022361983025153,2017-04-01 04:01:01+00:00,3,1,Happy #AprilFoolsDay! https://t.co/EwdXsFktZx,False,False,https://twitter.com/python_tip/status/848022361983025153,[],"[{'url': 'https://t.co/EwdXsFktZx', 'media_url': 'http://pbs.twimg.com/media/C8A03ScXwAEwAnh.jpg', 'display_url': 'pic.twitter.com/EwdXsFktZx'}]"
847682099435847681,2017-03-31 05:28:56+00:00,3,2,"Manage your Twitter with Tweepy:
* Write a Twitter bot https://t.co/D2J7EHBhEx
* Who likes your tweets?
https://t.co/UAY1e0KQBi
#python",False,False,https://twitter.com/python_tip/status/847682099435847681,"[{'url': 'https://t.co/D2J7EHBhEx', 'expanded_url': 'https://dototot.com/how-to-write-a-twitter-bot-with-python-and-tweepy/', 'display_url': 'dototot.com/how-to-write-a…'}, {'url': 'https://t.co/UAY1e0KQBi', 'expanded_url': 'https://gist.github.com/simecek/b7fa2778ab1d2b0bf383a616877514dc', 'display_url': 'gist.github.com/simecek/b7fa27…'}]",[]
847636148239310850,2017-03-31 02:26:20+00:00,1,0,@pybites Wow! Thanks!!,True,False,https://twitter.com/python_tip/status/847636148239310850,[],[]
847636027615322112,2017-03-31 02:25:51+00:00,0,0,RT @pybites: #100DaysOfCode - Day 001: script to check if tip already submitted to @python_tip https://t.co/SwtTASAcuv,False,True,https://twitter.com/python_tip/status/847636027615322112,"[{'url': 'https://t.co/SwtTASAcuv', 'expanded_url': 'https://github.com/pybites/100DaysOfCode/tree/master/001', 'display_url': 'github.com/pybites/100Day…'}]",[]
847297709660819458,2017-03-30 04:01:30+00:00,4,2,"Replace substrings:
>>> s = 'old old old'
>>> r = s.replace('old', 'new')
>>> r
'new new new'
#python https://t.co/LRs0oR9Y0f",False,False,https://twitter.com/python_tip/status/847297709660819458,"[{'url': 'https://t.co/LRs0oR9Y0f', 'expanded_url': 'https://www.tutorialspoint.com/python/string_replace.htm', 'display_url': 'tutorialspoint.com/python/string_…'}]",[]
846935198713495556,2017-03-29 04:01:01+00:00,5,2,">>> from fractions import Fraction
>>> a = Fraction(1,3)
>>> b = Fraction(5,4)
>>> print(a+b)
19/12
#python https://t.co/IPvT1Cc3XH",False,False,https://twitter.com/python_tip/status/846935198713495556,"[{'url': 'https://t.co/IPvT1Cc3XH', 'expanded_url': 'https://docs.python.org/3.6/library/fractions.html?highlight=fraction', 'display_url': 'docs.python.org/3.6/library/fr…'}]",[]
846572807911751680,2017-03-28 04:01:00+00:00,9,3,"Find minimum value and the corresponding key in a dictionary:
>>> d = {'a':5,'b':2,'c':4}
>>> min(zip(d.values(),d.keys()))
(2, 'b')
#python",False,False,https://twitter.com/python_tip/status/846572807911751680,[],[]
846210427906375681,2017-03-27 04:01:02+00:00,9,4,"Flattening lists:
a = [[1, 2], [3, 4], [5, 6]]
list(itertools.chain.from_iterable(a))
[1, 2, 3, 4, 5, 6]
#python see https://t.co/CWt7WIWjDG",False,False,https://twitter.com/python_tip/status/846210427906375681,"[{'url': 'https://t.co/CWt7WIWjDG', 'expanded_url': 'http://sahandsaba.com/thirty-python-language-features-and-tricks-you-may-not-know.html#id1', 'display_url': 'sahandsaba.com/thirty-python-…'}]",[]
845313574453088256,2017-03-24 16:37:15+00:00,1,0,@pybites I put it on our long TODO list :-),True,False,https://twitter.com/python_tip/status/845313574453088256,[],[]
845285046902800384,2017-03-24 14:43:54+00:00,1,0,"@pybites Thanks, your tips are always great. Table with all tips (incl. unpublished) can be downloaded from 

https://t.co/oARrOmrin7",True,False,https://twitter.com/python_tip/status/845285046902800384,"[{'url': 'https://t.co/oARrOmrin7', 'expanded_url': 'https://docs.google.com/spreadsheets/d/1d5mTkT_gmpxDhx91i-Y43dhXN5S0UCOrP1ugqsPz-LA/pub?output=csv', 'display_url': 'docs.google.com/spreadsheets/d…'}]",[]
845153205738651648,2017-03-24 06:00:01+00:00,12,10,"from @pybites: Reverse a string with negative stride 
>>> s = 'hello world'
>>> ''.join(reversed(s))
'dlrow olleh'
>>> s[::-1]
'dlrow olleh'",False,False,https://twitter.com/python_tip/status/845153205738651648,[],[]
844922871650627585,2017-03-23 14:44:45+00:00,6,3,"Do you know R? Add R magic to your #IPython Notebooks:
https://t.co/RDLEP33jN0

More details
https://t.co/8mzuUBWjee
https://t.co/oFNvdpbbmN https://t.co/QkdTzdPg7B",False,False,https://twitter.com/python_tip/status/844922871650627585,"[{'url': 'https://t.co/RDLEP33jN0', 'expanded_url': 'https://gist.github.com/simecek/019d87c55fec3839d95bbf8489dde61d', 'display_url': 'gist.github.com/simecek/019d87…'}, {'url': 'https://t.co/8mzuUBWjee', 'expanded_url': 'https://ipython.org/ipython-doc/2/config/extensions/rmagic.html', 'display_url': 'ipython.org/ipython-doc/2/…'}, {'url': 'https://t.co/oFNvdpbbmN', 'expanded_url': 'https://ragrawal.wordpress.com/2016/08/03/using-r-ggplot-within-ipython-notebook/', 'display_url': 'ragrawal.wordpress.com/2016/08/03/usi…'}]","[{'url': 'https://t.co/QkdTzdPg7B', 'media_url': 'http://pbs.twimg.com/media/C7nEjQkWsAETyPZ.jpg', 'display_url': 'pic.twitter.com/QkdTzdPg7B'}]"
844413330747908097,2017-03-22 05:00:01+00:00,4,5,"5-8 character words:
>>> import re
>>> s = 'Fox jumps over RegExp.'
>>> re.findall(r'\b(\w{5,8})\b', s)
['jumps', 'RegExp']

#python",False,False,https://twitter.com/python_tip/status/844413330747908097,[],[]
844126441117810690,2017-03-21 10:00:01+00:00,9,5,"Use sets for intersection of lists:
>>> a = [1,2,3,4,5,9,10,11]
>>> b = [4,5,6,7]
>>> set(a).intersection(b)
set([4, 5])
#python",False,False,https://twitter.com/python_tip/status/844126441117810690,[],[]
843764055055781888,2017-03-20 10:00:01+00:00,3,2,"Check for #python version:
>>> import sys
>>> if (sys.version_info) < (2,5):
    raise Exception(""must use python 2.5 or greater"")",False,False,https://twitter.com/python_tip/status/843764055055781888,[],[]
842592109538373633,2017-03-17 04:23:08+00:00,5,1,">>> group_adjacent = lambda a, k: zip(*([iter(a)] * k))
>>> a = list(range(6))
>>> list(group_adjacent(a, 3))
[(0, 1, 2), (3, 4, 5)]
#python",False,False,https://twitter.com/python_tip/status/842592109538373633,[],[]
842224153490997248,2017-03-16 04:01:00+00:00,4,3,"Too much time spent on installation and settings? Run #Jupyter NB in docker: https://t.co/RdgJxvTpmf

(for hackers: https://t.co/AIhyBi0B9L)",False,False,https://twitter.com/python_tip/status/842224153490997248,"[{'url': 'https://t.co/RdgJxvTpmf', 'expanded_url': 'https://github.com/jupyter/docker-stacks/tree/master/datascience-notebook', 'display_url': 'github.com/jupyter/docker…'}, {'url': 'https://t.co/AIhyBi0B9L', 'expanded_url': 'https://simecek.github.io/blog/2017/02/17/data-science-amazon-vm-with-start/stop-functionality/', 'display_url': 'simecek.github.io/blog/2017/02/1…'}]",[]
842038366266900480,2017-03-15 15:42:45+00:00,1,0,@cairn3dogs You are right! I have tested the code in Python 2.7 but it throws error in #python3. Thanks for the correction.,True,False,https://twitter.com/python_tip/status/842038366266900480,[],[]
842037511505494017,2017-03-15 15:39:21+00:00,0,0,"@cairn3dogs Thanks. We are in a constant search for good tips, see https://t.co/mfUQ9teK5k",True,False,https://twitter.com/python_tip/status/842037511505494017,"[{'url': 'https://t.co/mfUQ9teK5k', 'expanded_url': 'http://bit.ly/pythontip', 'display_url': 'bit.ly/pythontip'}]",[]
841861768364363777,2017-03-15 04:01:01+00:00,4,8,"Slice assignment:
>>> a = range(5)
>>> a
[0, 1, 2, 3, 4]
>>> a[1:-1] = []
>>> a
[0, 4]

#python",False,False,https://twitter.com/python_tip/status/841861768364363777,[],[]
841499379454357504,2017-03-14 04:01:01+00:00,1,1,"Generate command line interfaces from any #python code with Python Fire.

https://t.co/UuLsNOCpUF
https://t.co/3EYiexcwCY",False,False,https://twitter.com/python_tip/status/841499379454357504,"[{'url': 'https://t.co/UuLsNOCpUF', 'expanded_url': 'https://opensource.googleblog.com/2017/03/python-fire-command-line.html', 'display_url': 'opensource.googleblog.com/2017/03/python…'}, {'url': 'https://t.co/3EYiexcwCY', 'expanded_url': 'https://github.com/google/python-fire/blob/master/doc/guide.md', 'display_url': 'github.com/google/python-…'}]",[]
841136990770814977,2017-03-13 04:01:00+00:00,13,8,"Name elements in tuples:
>>> Point = collections.namedtuple('Point', ['x', 'y'])
>>> p = Point(x=1.0, y=2.0)
>>> p.x
1.0
>>> p.y
2.0
#python",False,False,https://twitter.com/python_tip/status/841136990770814977,[],[]
840140186457522176,2017-03-10 10:00:04+00:00,3,1,"Sliding windows:
>>> a = [1,2,3,4]
>>> z = (itertools.islice(a,i,None) for i in range(2))
>>> list(zip(*z))
[(1, 2), (2, 3), (3, 4)]
#python",False,False,https://twitter.com/python_tip/status/840140186457522176,[],[]
839777788852789248,2017-03-09 10:00:01+00:00,2,3,">>> import itertools
>>> print(list(itertools.compress('ABCDEFGH',[0,1,1,0,0,0,1,1])))
['B', 'C', 'G', 'H']

#python
https://t.co/SHWsGWCpcM",False,False,https://twitter.com/python_tip/status/839777788852789248,"[{'url': 'https://t.co/SHWsGWCpcM', 'expanded_url': 'https://www.blog.pythonlibrary.org/2016/04/20/python-201-an-intro-to-itertools/', 'display_url': 'blog.pythonlibrary.org/2016/04/20/pyt…'}]",[]
839415405751873538,2017-03-08 10:00:02+00:00,5,3,"Leap years:
>>> import calendar
>>> calendar.isleap(2020)
True
#python",False,False,https://twitter.com/python_tip/status/839415405751873538,[],[]
839053008042360833,2017-03-07 10:00:00+00:00,2,2,"Slices with negative indexing
>>> a = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
>>> a[-4:-2]
[7, 8]

More tips at https://t.co/CWt7WIWjDG #python",False,False,https://twitter.com/python_tip/status/839053008042360833,"[{'url': 'https://t.co/CWt7WIWjDG', 'expanded_url': 'http://sahandsaba.com/thirty-python-language-features-and-tricks-you-may-not-know.html#id1', 'display_url': 'sahandsaba.com/thirty-python-…'}]",[]
838705722779107328,2017-03-06 11:00:01+00:00,11,5,"Flatten a list of lists with sum

>>> sum([[1, 2], [3], [4, 5], [6, 7, 8]], [])
[1, 2, 3, 4, 5, 6, 7, 8]

tip by @pybites #python",False,False,https://twitter.com/python_tip/status/838705722779107328,[],[]
837528211449864192,2017-03-03 05:01:00+00:00,2,0,"One-line tree definition:

> from collections import defaultdict
> def tree(): return defaultdict(tree)

See https://t.co/V2oW5JRPMr
#python",False,False,https://twitter.com/python_tip/status/837528211449864192,"[{'url': 'https://t.co/V2oW5JRPMr', 'expanded_url': 'https://gist.github.com/hrldcpr/2012250', 'display_url': 'gist.github.com/hrldcpr/2012250'}]",[]
837165825668878336,2017-03-02 05:01:01+00:00,3,0,"Shuffling a list of objects:

> from random import shuffle

> a = range(5)
> a
[0, 1, 2, 3, 4]
> shuffle(a)
> a
[0, 4, 1, 2, 3]

#python",False,False,https://twitter.com/python_tip/status/837165825668878336,[],[]
836934488097595393,2017-03-01 13:41:46+00:00,0,0,@poojabathia Thank you!,True,False,https://twitter.com/python_tip/status/836934488097595393,[],[]
836803438784700416,2017-03-01 05:01:01+00:00,8,1,"In #python3 a, *b, c = [1, 2, 3, 4, 5] unpacks as follows
>>> a
1
>>> b
[2, 3, 4]
>>> c
5",False,False,https://twitter.com/python_tip/status/836803438784700416,[],[]
836483457400328192,2017-02-28 07:49:32+00:00,1,0,@poojabathia good job!,True,False,https://twitter.com/python_tip/status/836483457400328192,[],[]
836453906184028160,2017-02-28 05:52:06+00:00,4,1,"Select a random item from a list:

import random
rand = random.choice(mylist)

#python",False,False,https://twitter.com/python_tip/status/836453906184028160,[],[]
836088310401486850,2017-02-27 05:39:21+00:00,7,3,"Inverting a dictionary:
>>> my_map = { 'a': 1, 'b': 2}
>>> inv_map = {v: k for k, v in my_map.items()}
>>> inv_map
{1: 'a', 2: 'b'}
#python",False,False,https://twitter.com/python_tip/status/836088310401486850,[],[]
835081849969999873,2017-02-24 11:00:02+00:00,9,2,"Use _ in #python console to retrieve the result of the last statement
>>> 3 + 4
7
>>> _ * 3
21
For other uses, see: https://t.co/lJVdDoGGt2",False,False,https://twitter.com/python_tip/status/835081849969999873,"[{'url': 'https://t.co/lJVdDoGGt2', 'expanded_url': 'https://hackernoon.com/understanding-the-underscore-of-python-309d1a029edc#.3kspv0vae', 'display_url': 'hackernoon.com/understanding-…'}]",[]
834719462381215744,2017-02-23 11:00:02+00:00,1,0,"Measure time of code snippets
import timeit
>>> timeit.timeit('""""-"""".join(str(n) for n in range(100))', number=10000)
0.818726062774
#python",False,False,https://twitter.com/python_tip/status/834719462381215744,[],[]
834357074356219906,2017-02-22 11:00:02+00:00,8,1,"""New in #python3.6 - formatted string literals:
>>> name = Fred
>>> f'His name is {name}'
His name is Fred

More: https://t.co/YFkgH9YqeS """,False,False,https://twitter.com/python_tip/status/834357074356219906,"[{'url': 'https://t.co/YFkgH9YqeS', 'expanded_url': 'https://cito.github.io/blog/f-strings/', 'display_url': 'cito.github.io/blog/f-strings/'}]",[]
833994677753769985,2017-02-21 11:00:00+00:00,2,0,#python #rstats Coming from R to Python? See NumPy for R Users https://t.co/G0ljt7je0R,False,False,https://twitter.com/python_tip/status/833994677753769985,"[{'url': 'https://t.co/G0ljt7je0R', 'expanded_url': 'http://mathesaurus.sourceforge.net/r-numpy.html', 'display_url': 'mathesaurus.sourceforge.net/r-numpy.html'}]",[]
833632289846226949,2017-02-20 11:00:00+00:00,3,2,"sum can take a generator:
sum(LETTER_SCORES.get(char.upper(), 0) for char in word)
Tip by @pybites. Thanks! https://t.co/CnR8dtGLM6 #python",False,False,https://twitter.com/python_tip/status/833632289846226949,"[{'url': 'https://t.co/CnR8dtGLM6', 'expanded_url': 'http://pybit.es/codechallenge01_review.html', 'display_url': 'pybit.es/codechallenge0…'}]",[]
832454783604776961,2017-02-17 05:01:01+00:00,2,1,"A static HTTP server with #python

cd /home/somedir
python -m SimpleHTTPServer

For more, see https://t.co/9BLQNMYmDJ",False,False,https://twitter.com/python_tip/status/832454783604776961,"[{'url': 'https://t.co/9BLQNMYmDJ', 'expanded_url': 'http://www.linuxjournal.com/content/tech-tip-really-simple-http-server-python', 'display_url': 'linuxjournal.com/content/tech-t…'}]",[]
832092397437743105,2017-02-16 05:01:01+00:00,3,0,"one-character string to Unicode code point:

>>> ord('❤')
10084

…and back:

>>> chr(10084)
'❤'

#python3 #python",False,False,https://twitter.com/python_tip/status/832092397437743105,[],[]
831730007135416323,2017-02-15 05:01:01+00:00,4,4,">>> d = collections.deque(range(10))
>>> d.rotate(2)
>>> print(d)
​
deque([8, 9, 0, 1, 2, 3, 4, 5, 6, 7])
#python",False,False,https://twitter.com/python_tip/status/831730007135416323,[],[]
831375199983501312,2017-02-14 05:31:08+00:00,1,0,">>> from math import log
>>> log(2**31, 2) == 31
False

For why that is the case in #python, see https://t.co/9N7PEbNROp",False,False,https://twitter.com/python_tip/status/831375199983501312,"[{'url': 'https://t.co/9N7PEbNROp', 'expanded_url': 'http://stackoverflow.com/questions/931995/inaccurate-logarithm-in-python', 'display_url': 'stackoverflow.com/questions/9319…'}]",[]
830998306956406785,2017-02-13 04:33:30+00:00,3,1,"Have you ever tried to type

>>> import this

into your #python?

(explanation on Quora: https://t.co/6DD47a3h7a) https://t.co/nTs7kwyTLL",False,False,https://twitter.com/python_tip/status/830998306956406785,"[{'url': 'https://t.co/6DD47a3h7a', 'expanded_url': 'https://www.quora.com/What-do-different-aphorisms-in-The-Zen-of-Python-mean', 'display_url': 'quora.com/What-do-differ…'}]","[{'url': 'https://t.co/nTs7kwyTLL', 'media_url': 'http://pbs.twimg.com/media/C4hMhQPWEAEckAF.jpg', 'display_url': 'pic.twitter.com/nTs7kwyTLL'}]"
829918067530539008,2017-02-10 05:01:01+00:00,0,0,"Select n random items from a list:
import random
rand = random.sample(mylist, n)
#python",False,False,https://twitter.com/python_tip/status/829918067530539008,[],[]
829555679065108480,2017-02-09 05:01:00+00:00,2,0,"Print list elements in #python3

>>> L = ['print', 'is', 'fun']
>>> print(*L)
print is fun
>>> print(*L, sep=',')
print,is,fun",False,False,https://twitter.com/python_tip/status/829555679065108480,[],[]
829193291744813056,2017-02-08 05:01:01+00:00,4,0,">>> for c in itertools.combinations([1, 2, 3, 4, 5], 3):
  print ''.join(str(x) for x in c)

123
124
125
134
135
145
234
235
245
345
#python",False,False,https://twitter.com/python_tip/status/829193291744813056,[],[]
828939847163330561,2017-02-07 12:13:55+00:00,1,0,"Frequency count:
>>> from collections import Counter
>>> a = [1,2,1,1,2,4,1]
>>> Counter(a)
Counter({1: 4, 2: 2, 4: 1})

#python",False,False,https://twitter.com/python_tip/status/828939847163330561,[],[]
828563074873454592,2017-02-06 11:16:45+00:00,0,0,"Need to sort a list 's' by multiple criteria? Use sorted(s, key = lambda x: (x[1], x[2])).

Detail on https://t.co/Ay0e0Q5SQn #python",False,False,https://twitter.com/python_tip/status/828563074873454592,"[{'url': 'https://t.co/Ay0e0Q5SQn', 'expanded_url': 'http://stackoverflow.com/questions/4233476/sort-a-list-by-multiple-attributes', 'display_url': 'stackoverflow.com/questions/4233…'}]",[]
827923237048819712,2017-02-04 16:54:16+00:00,0,0,"Unusual use of else:
>>> x = [1]
>>> while x:
 print(""Then"")
 x.pop()
else:
 print(""Else"")

Then
1
Else

See https://t.co/3QeQT61PEi
#python",False,False,https://twitter.com/python_tip/status/827923237048819712,"[{'url': 'https://t.co/3QeQT61PEi', 'expanded_url': 'http://python-notes.curiousefficiency.org/en/latest/python_concepts/break_else.html', 'display_url': 'python-notes.curiousefficiency.org/en/latest/pyth…'}]",[]
827622022461214721,2017-02-03 20:57:21+00:00,3,2,"Comma as thousand separator:
>>> '{:,.2f}'.format(1234567.8901)
'1,234,567.89'
More examples: https://t.co/dt1hlmWCZ2 #python",False,False,https://twitter.com/python_tip/status/827622022461214721,"[{'url': 'https://t.co/dt1hlmWCZ2', 'expanded_url': 'https://docs.python.org/3/library/string.html#format-examples', 'display_url': 'docs.python.org/3/library/stri…'}]",[]
